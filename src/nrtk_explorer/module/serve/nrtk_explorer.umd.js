(function(ti,W){typeof exports=="object"&&typeof module<"u"?W(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],W):(ti=typeof globalThis<"u"?globalThis:ti||self,W(ti.nrtk_explorer={},ti.Vue))})(this,function(ti,W){"use strict";class Ma{constructor(e,n=0){this.bounds={x:e.x||0,y:e.y||0,width:e.width,height:e.height},this.maxObjects=typeof e.maxObjects=="number"?e.maxObjects:10,this.maxLevels=typeof e.maxLevels=="number"?e.maxLevels:4,this.level=n,this.objects=[],this.nodes=[]}getIndex(e){return e.qtIndex(this.bounds)}split(){const e=this.level+1,n=this.bounds.width/2,i=this.bounds.height/2,r=this.bounds.x,s=this.bounds.y,o=[{x:r+n,y:s},{x:r,y:s},{x:r,y:s+i},{x:r+n,y:s+i}];for(let a=0;a<4;a++)this.nodes[a]=new Ma({x:o[a].x,y:o[a].y,width:n,height:i,maxObjects:this.maxObjects,maxLevels:this.maxLevels},e)}insert(e){if(this.nodes.length){const n=this.getIndex(e);for(let i=0;i<n.length;i++)this.nodes[n[i]].insert(e);return}if(this.objects.push(e),this.objects.length>this.maxObjects&&this.level<this.maxLevels){this.nodes.length||this.split();for(let n=0;n<this.objects.length;n++){const i=this.getIndex(this.objects[n]);for(let r=0;r<i.length;r++)this.nodes[i[r]].insert(this.objects[n])}this.objects=[]}}retrieve(e){const n=this.getIndex(e);let i=this.objects;if(this.nodes.length)for(let r=0;r<n.length;r++)i=i.concat(this.nodes[n[r]].retrieve(e));return i=i.filter(function(r,s){return i.indexOf(r)>=s}),i}clear(){this.objects=[];for(let e=0;e<this.nodes.length;e++)this.nodes.length&&this.nodes[e].clear();this.nodes=[]}}class Fc{constructor(e){this.x=e.x,this.y=e.y,this.width=e.width,this.height=e.height,this.data=e.data}qtIndex(e){const n=[],i=e.x+e.width/2,r=e.y+e.height/2,s=this.y<r,o=this.x<i,a=this.x+this.width>i,l=this.y+this.height>r;return s&&a&&n.push(0),o&&s&&n.push(1),o&&l&&n.push(2),a&&l&&n.push(3),n}}const Dd={style:{width:"100%",position:"relative","white-space":"pre","font-size":"small"}},Od=["src"],Fd=W.defineComponent({__name:"ImageDetection",props:{src:{},meta:{},annotations:{},categories:{}},setup(t){const e=t,n=[[255,0,0],[0,255,0],[0,0,255],[255,255,0],[255,0,255],[0,255,255]];let i;function r(y,g,m){if(!y)return;y.width=g.width,y.height=g.height;const _=y.getContext("2d");if(!_)return;const b=.5;_.clearRect(0,0,y.width,y.height),m.forEach(w=>{const x=n[w.category_id%n.length];_.fillStyle=`rgba(${[...x,b].join(",")})`,_.fillRect(w.bbox[0],w.bbox[1],w.bbox[2],w.bbox[3])})}function s(y,g){return g.x>=y.x+y.width||y.x>=g.x+g.width?!1:!(g.y>=y.y+y.height||y.y>=g.y+g.height)}function o(y,g,m){if(i=void 0,!y)return;y.width=g.width,y.height=g.height;const _=y.getContext("2d");_&&(_.clearRect(0,0,y.width,y.height),i=new Ma({width:y.width,height:y.height,maxLevels:8,maxObjects:10}),m.forEach((b,w)=>{const x=new Fc({x:b.bbox[0],y:b.bbox[1],width:b.bbox[2],height:b.bbox[3],data:w});i==null||i.insert(x),_.fillStyle="rgb(255, 0, 0)",_.fillRect(b.bbox[0],b.bbox[1],b.bbox[2],b.bbox[3])}))}const a=W.ref(),l=W.ref(),c=W.ref(),u=W.ref(!1);W.watch(e.categories,function(y,g){}),W.watch(e.meta,function(y,g){r(a.value,W.unref(e.meta),W.unref(e.annotations)),o(l.value,W.unref(e.meta),W.unref(e.annotations))}),W.watch(e.annotations,function(y,g){r(a.value,W.unref(e.meta),W.unref(e.annotations)),o(l.value,W.unref(e.meta),W.unref(e.annotations))}),W.onMounted(()=>{r(a.value,W.unref(e.meta),W.unref(e.annotations)),o(l.value,W.unref(e.meta),W.unref(e.annotations))});function h(y,g,m){const _=m.getBoundingClientRect(),b=m.width*(y-_.left)/_.width,w=m.height*(g-_.top)/_.height;return[b,w]}function f(y){}function d(y){if(!a.value||!l.value||!c.value||!i||!e.categories.value||!e.annotations.value)return;const[g,m]=h(y.clientX,y.clientY,a.value),_=l.value.getContext("2d");if(!_)return;const w=_.getImageData(g,m,1,1).data[0]>0;if(w?(c.value.style.left=`${y.offsetX+8}px`,c.value.style.top=`${y.offsetY+8}px`,u.value=!0):u.value=!1,w){const x=new Fc({x:g,y:m,width:2,height:2}),T=i.retrieve(x).filter(L=>s(L,x));let I=document.createElement("ul");I.style.padding="0",I.style.margin="0",T.forEach(L=>{const P=document.createElement("li");if(L.data!=null){const O=e.annotations.value[L.data],B=e.categories.value[O.category_id];P.textContent=`(${O.id}): ${B.name}`;const N=n[O.category_id%n.length];P.style.textShadow=`rgba(${N.join(",")},0.6) 1px 1px 3px`,I.appendChild(P)}}),c.value.replaceChildren(I)}}function p(y){u.value=!1}const{src:v}=W.toRefs(e);return(y,g)=>(W.openBlock(),W.createElementBlock("div",Dd,[W.createElementVNode("img",{src:W.unref(v),style:{width:"100%",position:"relative",left:"0",top:"0"}},null,8,Od),W.createElementVNode("canvas",{ref_key:"canvas",ref:a,width:"100",height:"100",style:{width:"100%",position:"absolute",left:"0",top:"0"}},null,512),W.withDirectives(W.createElementVNode("div",{ref_key:"labelContainer",ref:c,style:{position:"absolute","background-color":"#efefef","z-index":"10","list-style-position":"inside",padding:"0.4rem","border-radius":"0.2rem","border-color":"rgba(127,127,127,0.75)","border-style":"solid","border-width":"thin"}},null,512),[[W.vShow,u.value]]),W.createElementVNode("canvas",{ref_key:"pickingCanvas",ref:l,width:"100",height:"100",style:{opacity:"0",width:"100%",position:"absolute",left:"0",top:"0"},onMouseenter:f,onMousemove:d,onMouseleave:p},null,544)]))}});var Ke=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Nc(t){if(t.__esModule)return t;var e=t.default;if(typeof e=="function"){var n=function i(){return this instanceof i?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(t).forEach(function(i){var r=Object.getOwnPropertyDescriptor(t,i);Object.defineProperty(n,i,r.get?r:{enumerable:!0,get:function(){return t[i]}})}),n}var Sa={},Ea={},Ta={};const Aa="125",pn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},mn={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Bc=0,Ca=1,zc=2,Nd=3,Bd=0,La=1,Uc=2,Fi=3,Ni=0,Qe=1,Er=2,Pa=1,zd=2,gn=0,Bi=1,Ra=2,Ia=3,Da=4,Hc=5,ni=100,kc=101,Gc=102,Oa=103,Fa=104,Vc=200,Wc=201,jc=202,qc=203,Na=204,Ba=205,Xc=206,Yc=207,Zc=208,Jc=209,$c=210,Kc=0,Qc=1,eh=2,Fs=3,th=4,nh=5,ih=6,rh=7,Tr=0,sh=1,oh=2,ii=0,ah=1,lh=2,ch=3,hh=4,uh=5,Ns=300,Ar=301,Cr=302,Bs=303,zs=304,zi=306,Lr=307,Pr=1e3,xt=1001,Rr=1002,nt=1003,Us=1004,Ud=1004,Hs=1005,Hd=1005,ot=1006,za=1007,kd=1007,Ui=1008,Gd=1008,Hi=1009,fh=1010,dh=1011,Ir=1012,ph=1013,Dr=1014,yn=1015,Or=1016,mh=1017,gh=1018,yh=1019,ki=1020,vh=1021,Rn=1022,At=1023,xh=1024,_h=1025,bh=At,ri=1026,Gi=1027,wh=1028,Mh=1029,Sh=1030,Eh=1031,Th=1032,Ah=1033,Ua=33776,Ha=33777,ka=33778,Ga=33779,Va=35840,Wa=35841,ja=35842,qa=35843,Ch=36196,Xa=37492,Ya=37496,Lh=37808,Ph=37809,Rh=37810,Ih=37811,Dh=37812,Oh=37813,Fh=37814,Nh=37815,Bh=37816,zh=37817,Uh=37818,Hh=37819,kh=37820,Gh=37821,Vh=36492,Wh=37840,jh=37841,qh=37842,Xh=37843,Yh=37844,Zh=37845,Jh=37846,$h=37847,Kh=37848,Qh=37849,eu=37850,tu=37851,nu=37852,iu=37853,ru=2200,su=2201,ou=2202,Fr=2300,Nr=2301,ks=2302,si=2400,oi=2401,Br=2402,Gs=2500,Za=2501,au=0,Vd=1,Wd=2,_t=3e3,zr=3001,Vs=3007,Ws=3002,lu=3003,Ja=3004,$a=3005,Ka=3006,cu=3200,hu=3201,ai=0,uu=1,jd=0,js=7680,qd=7681,Xd=7682,Yd=7683,Zd=34055,Jd=34056,$d=5386,Kd=512,Qd=513,ep=514,tp=515,np=516,ip=517,rp=518,fu=519,Ur=35044,li=35048,sp=35040,op=35045,ap=35049,lp=35041,cp=35046,hp=35050,up=35042,fp="100",Qa="300 es";function Vt(){}Object.assign(Vt.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const r=i.indexOf(e);r!==-1&&i.splice(r,1)}},dispatchEvent:function(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let r=0,s=i.length;r<s;r++)i[r].call(this,t)}}});const ut=[];for(let t=0;t<256;t++)ut[t]=(t<16?"0":"")+t.toString(16);let qs=1234567;const _e={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(ut[t&255]+ut[t>>8&255]+ut[t>>16&255]+ut[t>>24&255]+"-"+ut[e&255]+ut[e>>8&255]+"-"+ut[e>>16&15|64]+ut[e>>24&255]+"-"+ut[n&63|128]+ut[n>>8&255]+"-"+ut[n>>16&255]+ut[n>>24&255]+ut[i&255]+ut[i>>8&255]+ut[i>>16&255]+ut[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,r){return i+(t-e)*(r-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},damp:function(t,e,n,i){return _e.lerp(t,e,1-Math.exp(-n*i))},pingpong:function(t,e=1){return e-Math.abs(_e.euclideanModulo(t,e*2)-e)},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return t!==void 0&&(qs=t%2147483647),qs=qs*16807%2147483647,(qs-1)/2147483646},degToRad:function(t){return t*_e.DEG2RAD},radToDeg:function(t){return t*_e.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,r){const s=Math.cos,o=Math.sin,a=s(n/2),l=o(n/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),f=o((e-i)/2),d=s((i-e)/2),p=o((i-e)/2);switch(r){case"XYX":t.set(a*u,l*h,l*f,a*c);break;case"YZY":t.set(l*f,a*u,l*h,a*c);break;case"ZXZ":t.set(l*h,l*f,a*u,a*c);break;case"XZX":t.set(a*u,l*p,l*d,a*c);break;case"YXY":t.set(l*d,a*u,l*p,a*c);break;case"ZYZ":t.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}};class G{constructor(e=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),r=Math.sin(n),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*r+e.x,this.y=s*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Ct{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=n,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],f=i[2],d=i[5],p=i[8],v=r[0],y=r[3],g=r[6],m=r[1],_=r[4],b=r[7],w=r[2],x=r[5],T=r[8];return s[0]=o*v+a*m+l*w,s[3]=o*y+a*_+l*x,s[6]=o*g+a*b+l*T,s[1]=c*v+u*m+h*w,s[4]=c*y+u*_+h*x,s[7]=c*g+u*b+h*T,s[2]=f*v+d*m+p*w,s[5]=f*y+d*_+p*x,s[8]=f*g+d*b+p*T,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return n*o*u-n*a*c-i*s*u+i*a*l+r*s*c-r*o*l}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=n*h+i*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const v=1/p;return e[0]=h*v,e[1]=(r*c-u*i)*v,e[2]=(a*i-r*o)*v,e[3]=f*v,e[4]=(u*n-r*l)*v,e[5]=(r*s-a*n)*v,e[6]=d*v,e[7]=(i*l-c*n)*v,e[8]=(o*n-i*s)*v,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+n,0,0,1),this}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=n*s+i*l,r[3]=n*o+i*c,r[6]=n*a+i*u,r[1]=-i*s+n*l,r[4]=-i*o+n*c,r[7]=-i*a+n*u,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}}let Vi;const ci={getDataURL:function(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Vi===void 0&&(Vi=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Vi.width=t.width,Vi.height=t.height;const n=Vi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Vi}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let dp=0;function Ue(t=Ue.DEFAULT_IMAGE,e=Ue.DEFAULT_MAPPING,n=xt,i=xt,r=ot,s=Ui,o=At,a=Hi,l=1,c=_t){Object.defineProperty(this,"id",{value:dp++}),this.uuid=_e.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=s,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=a,this.offset=new G(0,0),this.repeat=new G(1,1),this.center=new G(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}Ue.DEFAULT_IMAGE=void 0,Ue.DEFAULT_MAPPING=Ns,Ue.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Ue,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=_e.generateUUID()),!e&&t.images[i.uuid]===void 0){let r;if(Array.isArray(i)){r=[];for(let s=0,o=i.length;s<o;s++)i[s].isDataTexture?r.push(el(i[s].image)):r.push(el(i[s]))}else r=el(i);t.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Ns)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Pr:t.x=t.x-Math.floor(t.x);break;case xt:t.x=t.x<0?0:1;break;case Rr:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Pr:t.y=t.y-Math.floor(t.y);break;case xt:t.y=t.y<0?0:1;break;case Rr:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(Ue.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function el(t){return typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap?ci.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class He{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,r){return this.x=e,this.y=n,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*s,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*s,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*s,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],v=l[2],y=l[6],g=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-v)<.01&&Math.abs(p-y)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+v)<.1&&Math.abs(p+y)<.1&&Math.abs(c+d+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const _=(c+1)/2,b=(d+1)/2,w=(g+1)/2,x=(u+f)/4,T=(h+v)/4,I=(p+y)/4;return _>b&&_>w?_<.01?(i=0,r=.707106781,s=.707106781):(i=Math.sqrt(_),r=x/i,s=T/i):b>w?b<.01?(i=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),i=x/r,s=I/r):w<.01?(i=.707106781,r=.707106781,s=0):(s=Math.sqrt(w),i=T/s,r=I/s),this.set(i,r,s,n),this}let m=Math.sqrt((y-p)*(y-p)+(h-v)*(h-v)+(f-u)*(f-u));return Math.abs(m)<.001&&(m=1),this.x=(y-p)/m,this.y=(h-v)/m,this.z=(f-u)/m,this.w=Math.acos((c+d+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}class In extends Vt{constructor(e,n,i){super(),Object.defineProperty(this,"isWebGLRenderTarget",{value:!0}),this.width=e,this.height=n,this.scissor=new He(0,0,e,n),this.scissorTest=!1,this.viewport=new He(0,0,e,n),i=i||{},this.texture=new Ue(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=n,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:ot,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null}setSize(e,n){(this.width!==e||this.height!==n)&&(this.width=e,this.height=n,this.texture.image.width=e,this.texture.image.height=n,this.dispose()),this.viewport.set(0,0,e,n),this.scissor.set(0,0,e,n)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}class pp extends In{constructor(e,n,i){super(e,n,i),Object.defineProperty(this,"isWebGLMultisampleRenderTarget",{value:!0}),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}class at{constructor(e=0,n=0,i=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=n,this._z=i,this._w=r}static slerp(e,n,i,r){return i.copy(e).slerp(n,r)}static slerpFlat(e,n,i,r,s,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],h=i[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],v=s[o+3];if(h!==v||l!==f||c!==d||u!==p){let y=1-a;const g=l*f+c*d+u*p+h*v,m=g>=0?1:-1,_=1-g*g;if(_>Number.EPSILON){const w=Math.sqrt(_),x=Math.atan2(w,g*m);y=Math.sin(y*x)/w,a=Math.sin(a*x)/w}const b=a*m;if(l=l*y+f*b,c=c*y+d*b,u=u*y+p*b,h=h*y+v*b,y===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[n]=l,e[n+1]=c,e[n+2]=u,e[n+3]=h}static multiplyQuaternionsFlat(e,n,i,r,s,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[n]=a*p+u*h+l*d-c*f,e[n+1]=l*p+u*f+c*h-a*d,e[n+2]=c*p+u*d+a*f-l*h,e[n+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),h=a(s/2),f=l(i/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],r=n[4],s=n[8],o=n[1],a=n[5],l=n[9],c=n[2],u=n[6],h=n[10],f=i+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(i>a&&i>h){const d=2*Math.sqrt(1+i-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-i-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-i-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let r=e.dot(n)+1;return r<1e-6?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(_e.clamp(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,r=e._y,s=e._z,o=e._w,a=n._x,l=n._y,c=n._z,u=n._w;return this._x=i*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-n;return this._w=d*o+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*s+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-n)*u)/c,f=Math.sin(n*u)/c;return this._w=o*h+this._w*f,this._x=i*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class M{constructor(e=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(du.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(du.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6]*r,this.y=s[1]*n+s[4]*i+s[7]*r,this.z=s[2]*n+s[5]*i+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,r=this.z,s=e.elements,o=1/(s[3]*n+s[7]*i+s[11]*r+s[15]);return this.x=(s[0]*n+s[4]*i+s[8]*r+s[12])*o,this.y=(s[1]*n+s[5]*i+s[9]*r+s[13])*o,this.z=(s[2]*n+s[6]*i+s[10]*r+s[14])*o,this}applyQuaternion(e){const n=this.x,i=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*n+o*r-a*i,u=l*i+a*n-s*r,h=l*r+s*i-o*n,f=-s*n-o*i-a*r;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,r=this.z,s=e.elements;return this.x=s[0]*n+s[4]*i+s[8]*r,this.y=s[1]*n+s[5]*i+s[9]*r,this.z=s[2]*n+s[6]*i+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,r=e.y,s=e.z,o=n.x,a=n.y,l=n.z;return this.x=r*l-s*a,this.y=s*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return tl.copy(this).projectOnVector(e),this.sub(tl)}reflect(e){return this.sub(tl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(_e.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return n*n+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const r=Math.sin(n)*e;return this.x=r*Math.sin(i),this.y=Math.cos(n)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const tl=new M,du=new at;class vn{constructor(e,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new M(1/0,1/0,1/0),this.max=n!==void 0?n:new M(-1/0,-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<n&&(n=u),h<i&&(i=h),f<r&&(r=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let n=1/0,i=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<n&&(n=u),h<i&&(i=h),f<r&&(r=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(n,i,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Hr.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new M),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const n=e.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),il.copy(n.boundingBox),il.applyMatrix4(e.matrixWorld),this.union(il));const i=e.children;for(let r=0,s=i.length;r<s;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new M),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Hr),Hr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(kr),Xs.subVectors(this.max,kr),Wi.subVectors(e.a,kr),ji.subVectors(e.b,kr),qi.subVectors(e.c,kr),Dn.subVectors(ji,Wi),On.subVectors(qi,ji),hi.subVectors(Wi,qi);let n=[0,-Dn.z,Dn.y,0,-On.z,On.y,0,-hi.z,hi.y,Dn.z,0,-Dn.x,On.z,0,-On.x,hi.z,0,-hi.x,-Dn.y,Dn.x,0,-On.y,On.x,0,-hi.y,hi.x,0];return!nl(n,Wi,ji,qi,Xs)||(n=[1,0,0,0,1,0,0,0,1],!nl(n,Wi,ji,qi,Xs))?!1:(Ys.crossVectors(Dn,On),n=[Ys.x,Ys.y,Ys.z],nl(n,Wi,ji,qi,Xs))}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new M),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Hr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(Hr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(xn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),xn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),xn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),xn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),xn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),xn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),xn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),xn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(xn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function nl(t,e,n,i,r){for(let s=0,o=t.length-3;s<=o;s+=3){ui.fromArray(t,s);const a=r.x*Math.abs(ui.x)+r.y*Math.abs(ui.y)+r.z*Math.abs(ui.z),l=e.dot(ui),c=n.dot(ui),u=i.dot(ui);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const xn=[new M,new M,new M,new M,new M,new M,new M,new M],Hr=new M,il=new vn,Wi=new M,ji=new M,qi=new M,Dn=new M,On=new M,hi=new M,kr=new M,Xs=new M,Ys=new M,ui=new M,mp=new vn;class Fn{constructor(e,n){this.center=e!==void 0?e:new M,this.radius=n!==void 0?n:-1}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):mp.setFromPoints(e).getCenter(i);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new M),n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new vn),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const _n=new M,rl=new M,Zs=new M,Nn=new M,sl=new M,Js=new M,ol=new M;class Xi{constructor(e,n){this.origin=e!==void 0?e:new M,this.direction=n!==void 0?n:new M(0,0,-1)}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new M),n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,_n)),this}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new M),n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=_n.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(_n.copy(this.direction).multiplyScalar(n).add(this.origin),_n.distanceToSquared(e))}distanceSqToSegment(e,n,i,r){rl.copy(e).add(n).multiplyScalar(.5),Zs.copy(n).sub(e).normalize(),Nn.copy(this.origin).sub(rl);const s=e.distanceTo(n)*.5,o=-this.direction.dot(Zs),a=Nn.dot(this.direction),l=-Nn.dot(Zs),c=Nn.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const v=1/u;h*=v,f*=v,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),r&&r.copy(Zs).multiplyScalar(f).add(rl),d}intersectSphere(e,n){_n.subVectors(e.center,this.origin);const i=_n.dot(this.direction),r=_n.dot(_n)-i*i,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,n):this.at(a,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),i>o||s>r||((s>i||i!==i)&&(i=s),(o<r||r!==r)&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(e){return this.intersectBox(e,_n)!==null}intersectTriangle(e,n,i,r,s){sl.subVectors(n,e),Js.subVectors(i,e),ol.crossVectors(sl,Js);let o=this.direction.dot(ol),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Nn.subVectors(this.origin,e);const l=a*this.direction.dot(Js.crossVectors(Nn,Js));if(l<0)return null;const c=a*this.direction.dot(sl.cross(Nn));if(c<0||l+c>o)return null;const u=-a*Nn.dot(ol);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Ae{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,r,s,o,a,l,c,u,h,f,d,p,v,y){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=r,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=f,g[3]=d,g[7]=p,g[11]=v,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ae().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(e){const n=e.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,r=1/Yi.setFromMatrixColumn(e,0).length(),s=1/Yi.setFromMatrixColumn(e,1).length(),o=1/Yi.setFromMatrixColumn(e,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*s,n[5]=i[5]*s,n[6]=i[6]*s,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,r=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,v=a*h;n[0]=l*u,n[4]=-l*h,n[8]=c,n[1]=d+p*c,n[5]=f-v*c,n[9]=-a*l,n[2]=v-f*c,n[6]=p+d*c,n[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,v=c*h;n[0]=f+v*a,n[4]=p*a-d,n[8]=o*c,n[1]=o*h,n[5]=o*u,n[9]=-a,n[2]=d*a-p,n[6]=v+f*a,n[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,v=c*h;n[0]=f-v*a,n[4]=-o*h,n[8]=p+d*a,n[1]=d+p*a,n[5]=o*u,n[9]=v-f*a,n[2]=-o*c,n[6]=a,n[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,v=a*h;n[0]=l*u,n[4]=p*c-d,n[8]=f*c+v,n[1]=l*h,n[5]=v*c+f,n[9]=d*c-p,n[2]=-c,n[6]=a*l,n[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,v=a*c;n[0]=l*u,n[4]=v-f*h,n[8]=p*h+d,n[1]=h,n[5]=o*u,n[9]=-a*u,n[2]=-c*u,n[6]=d*h+p,n[10]=f-v*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,v=a*c;n[0]=l*u,n[4]=-h,n[8]=c*u,n[1]=f*h+v,n[5]=o*u,n[9]=d*h-p,n[2]=p*h-d,n[6]=a*u,n[10]=v*h+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(gp,e,yp)}lookAt(e,n,i){const r=this.elements;return Lt.subVectors(e,n),Lt.lengthSq()===0&&(Lt.z=1),Lt.normalize(),Bn.crossVectors(i,Lt),Bn.lengthSq()===0&&(Math.abs(i.z)===1?Lt.x+=1e-4:Lt.z+=1e-4,Lt.normalize(),Bn.crossVectors(i,Lt)),Bn.normalize(),$s.crossVectors(Lt,Bn),r[0]=Bn.x,r[4]=$s.x,r[8]=Lt.x,r[1]=Bn.y,r[5]=$s.y,r[9]=Lt.y,r[2]=Bn.z,r[6]=$s.z,r[10]=Lt.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,r=n.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],f=i[9],d=i[13],p=i[2],v=i[6],y=i[10],g=i[14],m=i[3],_=i[7],b=i[11],w=i[15],x=r[0],T=r[4],I=r[8],L=r[12],P=r[1],O=r[5],B=r[9],N=r[13],D=r[2],F=r[6],U=r[10],q=r[14],$=r[3],ie=r[7],ue=r[11],ce=r[15];return s[0]=o*x+a*P+l*D+c*$,s[4]=o*T+a*O+l*F+c*ie,s[8]=o*I+a*B+l*U+c*ue,s[12]=o*L+a*N+l*q+c*ce,s[1]=u*x+h*P+f*D+d*$,s[5]=u*T+h*O+f*F+d*ie,s[9]=u*I+h*B+f*U+d*ue,s[13]=u*L+h*N+f*q+d*ce,s[2]=p*x+v*P+y*D+g*$,s[6]=p*T+v*O+y*F+g*ie,s[10]=p*I+v*B+y*U+g*ue,s[14]=p*L+v*N+y*q+g*ce,s[3]=m*x+_*P+b*D+w*$,s[7]=m*T+_*O+b*F+w*ie,s[11]=m*I+_*B+b*U+w*ue,s[15]=m*L+_*N+b*q+w*ce,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],v=e[7],y=e[11],g=e[15];return p*(+s*l*h-r*c*h-s*a*f+i*c*f+r*a*d-i*l*d)+v*(+n*l*d-n*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+y*(+n*c*h-n*a*d-s*o*h+i*o*d+s*a*u-i*c*u)+g*(-r*a*u-n*l*h+n*a*f+r*o*h-i*o*f+i*l*u)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=n,r[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],v=e[13],y=e[14],g=e[15],m=h*y*c-v*f*c+v*l*d-a*y*d-h*l*g+a*f*g,_=p*f*c-u*y*c-p*l*d+o*y*d+u*l*g-o*f*g,b=u*v*c-p*h*c+p*a*d-o*v*d-u*a*g+o*h*g,w=p*h*l-u*v*l-p*a*f+o*v*f+u*a*y-o*h*y,x=n*m+i*_+r*b+s*w;if(x===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const T=1/x;return e[0]=m*T,e[1]=(v*f*s-h*y*s-v*r*d+i*y*d+h*r*g-i*f*g)*T,e[2]=(a*y*s-v*l*s+v*r*c-i*y*c-a*r*g+i*l*g)*T,e[3]=(h*l*s-a*f*s-h*r*c+i*f*c+a*r*d-i*l*d)*T,e[4]=_*T,e[5]=(u*y*s-p*f*s+p*r*d-n*y*d-u*r*g+n*f*g)*T,e[6]=(p*l*s-o*y*s-p*r*c+n*y*c+o*r*g-n*l*g)*T,e[7]=(o*f*s-u*l*s+u*r*c-n*f*c-o*r*d+n*l*d)*T,e[8]=b*T,e[9]=(p*h*s-u*v*s-p*i*d+n*v*d+u*i*g-n*h*g)*T,e[10]=(o*v*s-p*a*s+p*i*c-n*v*c-o*i*g+n*a*g)*T,e[11]=(u*a*s-o*h*s-u*i*c+n*h*c+o*i*d-n*a*d)*T,e[12]=w*T,e[13]=(u*v*r-p*h*r+p*i*f-n*v*f-u*i*y+n*h*y)*T,e[14]=(p*a*r-o*v*r-p*i*l+n*v*l+o*i*y-n*a*y)*T,e[15]=(o*h*r-u*a*r+u*i*l-n*h*l-o*i*f+n*a*f)*T,this}scale(e){const n=this.elements,i=e.x,r=e.y,s=e.z;return n[0]*=i,n[4]*=r,n[8]*=s,n[1]*=i,n[5]*=r,n[9]*=s,n[2]*=i,n[6]*=r,n[10]*=s,n[3]*=i,n[7]*=r,n[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),r=Math.sin(n),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i){return this.set(1,n,i,0,e,1,i,0,e,n,1,0,0,0,0,1),this}compose(e,n,i){const r=this.elements,s=n._x,o=n._y,a=n._z,l=n._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,v=o*u,y=o*h,g=a*h,m=l*c,_=l*u,b=l*h,w=i.x,x=i.y,T=i.z;return r[0]=(1-(v+g))*w,r[1]=(d+b)*w,r[2]=(p-_)*w,r[3]=0,r[4]=(d-b)*x,r[5]=(1-(f+g))*x,r[6]=(y+m)*x,r[7]=0,r[8]=(p+_)*T,r[9]=(y-m)*T,r[10]=(1-(f+v))*T,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,n,i){const r=this.elements;let s=Yi.set(r[0],r[1],r[2]).length();const o=Yi.set(r[4],r[5],r[6]).length(),a=Yi.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Wt.copy(this);const c=1/s,u=1/o,h=1/a;return Wt.elements[0]*=c,Wt.elements[1]*=c,Wt.elements[2]*=c,Wt.elements[4]*=u,Wt.elements[5]*=u,Wt.elements[6]*=u,Wt.elements[8]*=h,Wt.elements[9]*=h,Wt.elements[10]*=h,n.setFromRotationMatrix(Wt),i.x=s,i.y=o,i.z=a,this}makePerspective(e,n,i,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(n-e),c=2*s/(i-r),u=(n+e)/(n-e),h=(i+r)/(i-r),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,n,i,r,s,o){const a=this.elements,l=1/(n-e),c=1/(i-r),u=1/(o-s),h=(n+e)*l,f=(i+r)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Yi=new M,Wt=new Ae,gp=new M(0,0,0),yp=new M(1,1,1),Bn=new M,$s=new M,Lt=new M;class Zi{constructor(e=0,n=0,i=0,r=Zi.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,r){return this._x=e,this._y=n,this._z=i,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n,i){const r=_e.clamp,s=e.elements,o=s[0],a=s[4],l=s[8],c=s[1],u=s[5],h=s[9],f=s[2],d=s[6],p=s[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(r(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(d,u),this._z=0);break;case"YXZ":this._x=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,u)):(this._y=Math.atan2(-f,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(c,o));break;case"ZYX":this._y=Math.asin(-r(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,o)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(r(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,u),this._y=Math.atan2(-f,o)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,u),this._y=Math.atan2(l,o)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return pu.makeRotationFromQuaternion(e),this.setFromRotationMatrix(pu,n,i)}setFromVector3(e,n){return this.set(e.x,e.y,e.z,n||this._order)}reorder(e){return mu.setFromEuler(this),this.setFromQuaternion(mu,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new M(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Zi.DefaultOrder="XYZ",Zi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const pu=new Ae,mu=new at;class al{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let vp=0;const gu=new M,Ji=new at,bn=new Ae,Ks=new M,Gr=new M,xp=new M,_p=new at,yu=new M(1,0,0),vu=new M(0,1,0),xu=new M(0,0,1),bp={type:"added"},_u={type:"removed"};function de(){Object.defineProperty(this,"id",{value:vp++}),this.uuid=_e.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=de.DefaultUp.clone();const t=new M,e=new Zi,n=new at,i=new M(1,1,1);function r(){n.setFromEuler(e,!1)}function s(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ae},normalMatrix:{value:new Ct}}),this.matrix=new Ae,this.matrixWorld=new Ae,this.matrixAutoUpdate=de.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new al,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}de.DefaultUp=new M(0,1,0),de.DefaultMatrixAutoUpdate=!0,de.prototype=Object.assign(Object.create(Vt.prototype),{constructor:de,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Ji.setFromAxisAngle(t,e),this.quaternion.multiply(Ji),this},rotateOnWorldAxis:function(t,e){return Ji.setFromAxisAngle(t,e),this.quaternion.premultiply(Ji),this},rotateX:function(t){return this.rotateOnAxis(yu,t)},rotateY:function(t){return this.rotateOnAxis(vu,t)},rotateZ:function(t){return this.rotateOnAxis(xu,t)},translateOnAxis:function(t,e){return gu.copy(t).applyQuaternion(this.quaternion),this.position.add(gu.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(yu,t)},translateY:function(t){return this.translateOnAxis(vu,t)},translateZ:function(t){return this.translateOnAxis(xu,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(bn.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Ks.copy(t):Ks.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Gr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?bn.lookAt(Gr,Ks,this.up):bn.lookAt(Ks,Gr,this.up),this.quaternion.setFromRotationMatrix(bn),i&&(bn.extractRotation(i.matrixWorld),Ji.setFromRotationMatrix(bn),this.quaternion.premultiply(Ji.invert()))},add:function(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(bp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(_u)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(_u)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),bn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),bn.multiply(t.parent.matrixWorld)),t.applyMatrix4(bn),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(t,e);if(s!==void 0)return s}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new M),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new at),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gr,t,xp),t},getWorldScale:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new M),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Gr,_p,t),t},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new M),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let r=0,s=i.length;r<s;r++)i[r].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function r(o,a){return o[a.uuid]===void 0&&(o[a.uuid]=a.toJSON(t)),a.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const a=o.shapes;if(Array.isArray(a))for(let l=0,c=a.length;l<c;l++){const u=a[l];r(t.shapes,u)}else r(t.shapes,a)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let a=0,l=this.material.length;a<l;a++)o.push(r(t.materials,this.material[a]));i.material=o}else i.material=r(t.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const a=this.animations[o];i.animations.push(r(t.animations,a))}}if(e){const o=s(t.geometries),a=s(t.materials),l=s(t.textures),c=s(t.images),u=s(t.shapes),h=s(t.skeletons),f=s(t.animations);o.length>0&&(n.geometries=o),a.length>0&&(n.materials=a),l.length>0&&(n.textures=l),c.length>0&&(n.images=c),u.length>0&&(n.shapes=u),h.length>0&&(n.skeletons=h),f.length>0&&(n.animations=f)}return n.object=i,n;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}});const ll=new M,wp=new M,Mp=new Ct;class sn{constructor(e,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new M(1,0,0),this.constant=n!==void 0?n:0}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,r){return this.normal.set(e,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const r=ll.subVectors(i,n).cross(wp.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new M),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new M);const i=e.delta(ll),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):void 0;const s=-(e.start.dot(this.normal)+this.constant)/r;if(!(s<0||s>1))return n.copy(i).multiplyScalar(s).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new M),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||Mp.getNormalMatrix(e),r=this.coplanarPoint(ll).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const jt=new M,wn=new M,cl=new M,Mn=new M,$i=new M,Ki=new M,bu=new M,hl=new M,ul=new M,fl=new M;class dt{constructor(e,n,i){this.a=e!==void 0?e:new M,this.b=n!==void 0?n:new M,this.c=i!==void 0?i:new M}static getNormal(e,n,i,r){r===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new M),r.subVectors(i,n),jt.subVectors(e,n),r.cross(jt);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,n,i,r,s){jt.subVectors(r,n),wn.subVectors(i,n),cl.subVectors(e,n);const o=jt.dot(jt),a=jt.dot(wn),l=jt.dot(cl),c=wn.dot(wn),u=wn.dot(cl),h=o*c-a*a;if(s===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new M),h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,n,i,r){return this.getBarycoord(e,n,i,r,Mn),Mn.x>=0&&Mn.y>=0&&Mn.x+Mn.y<=1}static getUV(e,n,i,r,s,o,a,l){return this.getBarycoord(e,n,i,r,Mn),l.set(0,0),l.addScaledVector(s,Mn.x),l.addScaledVector(o,Mn.y),l.addScaledVector(a,Mn.z),l}static isFrontFacing(e,n,i,r){return jt.subVectors(i,n),wn.subVectors(e,n),jt.cross(wn).dot(r)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,r){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[r]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return jt.subVectors(this.c,this.b),wn.subVectors(this.a,this.b),jt.cross(wn).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new M),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return dt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new sn),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return dt.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,r,s){return dt.getUV(e,this.a,this.b,this.c,n,i,r,s)}containsPoint(e){return dt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return dt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new M);const i=this.a,r=this.b,s=this.c;let o,a;$i.subVectors(r,i),Ki.subVectors(s,i),hl.subVectors(e,i);const l=$i.dot(hl),c=Ki.dot(hl);if(l<=0&&c<=0)return n.copy(i);ul.subVectors(e,r);const u=$i.dot(ul),h=Ki.dot(ul);if(u>=0&&h<=u)return n.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),n.copy(i).addScaledVector($i,o);fl.subVectors(e,s);const d=$i.dot(fl),p=Ki.dot(fl);if(p>=0&&d<=p)return n.copy(s);const v=d*c-l*p;if(v<=0&&c>=0&&p<=0)return a=c/(c-p),n.copy(i).addScaledVector(Ki,a);const y=u*p-d*h;if(y<=0&&h-u>=0&&d-p>=0)return bu.subVectors(s,r),a=(h-u)/(h-u+(d-p)),n.copy(r).addScaledVector(bu,a);const g=1/(y+v+f);return o=v*g,a=f*g,n.copy(i).addScaledVector($i,o).addScaledVector(Ki,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const wu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},qt={h:0,s:0,l:0},Qs={h:0,s:0,l:0};function dl(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function pl(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function ml(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}class ae{constructor(e,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,n,i){return this.r=e,this.g=n,this.b=i,this}setHSL(e,n,i){if(e=_e.euclideanModulo(e,1),n=_e.clamp(n,0,1),i=_e.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+n):i+n-i*n,s=2*i-r;this.r=dl(s,r,e+1/3),this.g=dl(s,r,e),this.b=dl(s,r,e-1/3)}return this}setStyle(e){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const s=i[1],o=i[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return n(r[4]),this.setHSL(a,l,c)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const n=wu[e];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,n=2){return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}copyLinearToGamma(e,n=2){const i=n>0?1/n:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=pl(e.r),this.g=pl(e.g),this.b=pl(e.b),this}copyLinearToSRGB(e){return this.r=ml(e.r),this.g=ml(e.g),this.b=ml(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const n=this.r,i=this.g,r=this.b,s=Math.max(n,i,r),o=Math.min(n,i,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const u=s-o;switch(l=c<=.5?u/(s+o):u/(2-s-o),s){case n:a=(i-r)/u+(i<r?6:0);break;case i:a=(r-n)/u+2;break;case r:a=(n-i)/u+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,n,i){return this.getHSL(qt),qt.h+=e,qt.s+=n,qt.l+=i,this.setHSL(qt.h,qt.s,qt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpColors(e,n,i){return this.r=e.r+(n.r-e.r)*i,this.g=e.g+(n.g-e.g)*i,this.b=e.b+(n.b-e.b)*i,this}lerpHSL(e,n){this.getHSL(qt),e.getHSL(Qs);const i=_e.lerp(qt.h,Qs.h,n),r=_e.lerp(qt.s,Qs.s,n),s=_e.lerp(qt.l,Qs.l,n);return this.setHSL(i,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}ae.NAMES=wu,ae.prototype.r=1,ae.prototype.g=1,ae.prototype.b=1;class gl{constructor(e,n,i,r,s,o=0){this.a=e,this.b=n,this.c=i,this.normal=r&&r.isVector3?r:new M,this.vertexNormals=Array.isArray(r)?r:[],this.color=s&&s.isColor?s:new ae,this.vertexColors=Array.isArray(s)?s:[],this.materialIndex=o}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}let Sp=0;function ve(){Object.defineProperty(this,"id",{value:Sp++}),this.uuid=_e.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Bi,this.side=Ni,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Na,this.blendDst=Ba,this.blendEquation=ni,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Fs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=fu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=js,this.stencilZFail=js,this.stencilZPass=js,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}ve.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ve,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Pa;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Bi&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==Ni&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const s=[];for(const o in r){const a=r[o];delete a.metadata,s.push(a)}return s}if(e){const r=i(t.textures),s=i(t.images);r.length>0&&(n.textures=r),s.length>0&&(n.images=s)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(ve.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function Pt(t){ve.call(this),this.type="MeshBasicMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Tr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Pt.prototype=Object.create(ve.prototype),Pt.prototype.constructor=Pt,Pt.prototype.isMeshBasicMaterial=!0,Pt.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Ge=new M,eo=new G;function xe(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=Ur,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(xe.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}}),Object.assign(xe.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),s=new ae),e[n++]=s.r,e[n++]=s.g,e[n++]=s.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),s=new G),e[n++]=s.x,e[n++]=s.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),s=new M),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,r=t.length;i<r;i++){let s=t[i];s===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),s=new He),e[n++]=s.x,e[n++]=s.y,e[n++]=s.z,e[n++]=s.w}return this},applyMatrix3:function(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)eo.fromBufferAttribute(this,e),eo.applyMatrix3(t),this.setXY(e,eo.x,eo.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Ge.fromBufferAttribute(this,e),Ge.applyMatrix3(t),this.setXYZ(e,Ge.x,Ge.y,Ge.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Ge.x=this.getX(e),Ge.y=this.getY(e),Ge.z=this.getZ(e),Ge.applyMatrix4(t),this.setXYZ(e,Ge.x,Ge.y,Ge.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Ge.x=this.getX(e),Ge.y=this.getY(e),Ge.z=this.getZ(e),Ge.applyNormalMatrix(t),this.setXYZ(e,Ge.x,Ge.y,Ge.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Ge.x=this.getX(e),Ge.y=this.getY(e),Ge.z=this.getZ(e),Ge.transformDirection(t),this.setXYZ(e,Ge.x,Ge.y,Ge.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Vr(t,e,n){xe.call(this,new Int8Array(t),e,n)}Vr.prototype=Object.create(xe.prototype),Vr.prototype.constructor=Vr;function Wr(t,e,n){xe.call(this,new Uint8Array(t),e,n)}Wr.prototype=Object.create(xe.prototype),Wr.prototype.constructor=Wr;function jr(t,e,n){xe.call(this,new Uint8ClampedArray(t),e,n)}jr.prototype=Object.create(xe.prototype),jr.prototype.constructor=jr;function qr(t,e,n){xe.call(this,new Int16Array(t),e,n)}qr.prototype=Object.create(xe.prototype),qr.prototype.constructor=qr;function fi(t,e,n){xe.call(this,new Uint16Array(t),e,n)}fi.prototype=Object.create(xe.prototype),fi.prototype.constructor=fi;function Xr(t,e,n){xe.call(this,new Int32Array(t),e,n)}Xr.prototype=Object.create(xe.prototype),Xr.prototype.constructor=Xr;function di(t,e,n){xe.call(this,new Uint32Array(t),e,n)}di.prototype=Object.create(xe.prototype),di.prototype.constructor=di;function Yr(t,e,n){xe.call(this,new Uint16Array(t),e,n)}Yr.prototype=Object.create(xe.prototype),Yr.prototype.constructor=Yr,Yr.prototype.isFloat16BufferAttribute=!0;function le(t,e,n){xe.call(this,new Float32Array(t),e,n)}le.prototype=Object.create(xe.prototype),le.prototype.constructor=le;function Zr(t,e,n){xe.call(this,new Float64Array(t),e,n)}Zr.prototype=Object.create(xe.prototype),Zr.prototype.constructor=Zr;function Mu(t){if(t.length===0)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}const Ep={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray<"u"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Jr(t,e){return new Ep[t](e)}let Tp=0;const on=new Ae,yl=new de,Qi=new M,Rt=new vn,$r=new vn,lt=new M;function ye(){Object.defineProperty(this,"id",{value:Tp++}),this.uuid=_e.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}ye.prototype=Object.assign(Object.create(Vt.prototype),{constructor:ye,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Mu(t)>65535?di:fi)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return this.attributes[t]!==void 0},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ct().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(t){return on.makeRotationX(t),this.applyMatrix4(on),this},rotateY:function(t){return on.makeRotationY(t),this.applyMatrix4(on),this},rotateZ:function(t){return on.makeRotationZ(t),this.applyMatrix4(on),this},translate:function(t,e,n){return on.makeTranslation(t,e,n),this.applyMatrix4(on),this},scale:function(t,e,n){return on.makeScale(t,e,n),this.applyMatrix4(on),this},lookAt:function(t){return yl.lookAt(t),yl.updateMatrix(),this.applyMatrix4(yl.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qi).negate(),this.translate(Qi.x,Qi.y,Qi.z),this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new le(e,3)),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new vn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new M(-1/0,-1/0,-1/0),new M(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const r=e[n];Rt.setFromBufferAttribute(r),this.morphTargetsRelative?(lt.addVectors(this.boundingBox.min,Rt.min),this.boundingBox.expandByPoint(lt),lt.addVectors(this.boundingBox.max,Rt.max),this.boundingBox.expandByPoint(lt)):(this.boundingBox.expandByPoint(Rt.min),this.boundingBox.expandByPoint(Rt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Fn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new M,1/0);return}if(t){const n=this.boundingSphere.center;if(Rt.setFromBufferAttribute(t),e)for(let r=0,s=e.length;r<s;r++){const o=e[r];$r.setFromBufferAttribute(o),this.morphTargetsRelative?(lt.addVectors(Rt.min,$r.min),Rt.expandByPoint(lt),lt.addVectors(Rt.max,$r.max),Rt.expandByPoint(lt)):(Rt.expandByPoint($r.min),Rt.expandByPoint($r.max))}Rt.getCenter(n);let i=0;for(let r=0,s=t.count;r<s;r++)lt.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(lt));if(e)for(let r=0,s=e.length;r<s;r++){const o=e[r],a=this.morphTargetsRelative;for(let l=0,c=o.count;l<c;l++)lt.fromBufferAttribute(o,l),a&&(Qi.fromBufferAttribute(t,l),lt.add(Qi)),i=Math.max(i,n.distanceToSquared(lt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeTangents:function(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.array,i=e.position.array,r=e.normal.array,s=e.uv.array,o=i.length/3;e.tangent===void 0&&this.setAttribute("tangent",new xe(new Float32Array(4*o),4));const a=e.tangent.array,l=[],c=[];for(let L=0;L<o;L++)l[L]=new M,c[L]=new M;const u=new M,h=new M,f=new M,d=new G,p=new G,v=new G,y=new M,g=new M;function m(L,P,O){u.fromArray(i,L*3),h.fromArray(i,P*3),f.fromArray(i,O*3),d.fromArray(s,L*2),p.fromArray(s,P*2),v.fromArray(s,O*2),h.sub(u),f.sub(u),p.sub(d),v.sub(d);const B=1/(p.x*v.y-v.x*p.y);isFinite(B)&&(y.copy(h).multiplyScalar(v.y).addScaledVector(f,-p.y).multiplyScalar(B),g.copy(f).multiplyScalar(p.x).addScaledVector(h,-v.x).multiplyScalar(B),l[L].add(y),l[P].add(y),l[O].add(y),c[L].add(g),c[P].add(g),c[O].add(g))}let _=this.groups;_.length===0&&(_=[{start:0,count:n.length}]);for(let L=0,P=_.length;L<P;++L){const O=_[L],B=O.start,N=O.count;for(let D=B,F=B+N;D<F;D+=3)m(n[D+0],n[D+1],n[D+2])}const b=new M,w=new M,x=new M,T=new M;function I(L){x.fromArray(r,L*3),T.copy(x);const P=l[L];b.copy(P),b.sub(x.multiplyScalar(x.dot(P))).normalize(),w.crossVectors(T,P);const B=w.dot(c[L])<0?-1:1;a[L*4]=b.x,a[L*4+1]=b.y,a[L*4+2]=b.z,a[L*4+3]=B}for(let L=0,P=_.length;L<P;++L){const O=_[L],B=O.start,N=O.count;for(let D=B,F=B+N;D<F;D+=3)I(n[D+0]),I(n[D+1]),I(n[D+2])}},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let h=0,f=n.count;h<f;h++)n.setXYZ(h,0,0,0);const i=new M,r=new M,s=new M,o=new M,a=new M,l=new M,c=new M,u=new M;if(t)for(let h=0,f=t.count;h<f;h+=3){const d=t.getX(h+0),p=t.getX(h+1),v=t.getX(h+2);i.fromBufferAttribute(e,d),r.fromBufferAttribute(e,p),s.fromBufferAttribute(e,v),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),o.fromBufferAttribute(n,d),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,v),o.add(c),a.add(c),l.add(c),n.setXYZ(d,o.x,o.y,o.z),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(v,l.x,l.y,l.z)}else for(let h=0,f=e.count;h<f;h+=3)i.fromBufferAttribute(e,h+0),r.fromBufferAttribute(e,h+1),s.fromBufferAttribute(e,h+2),c.subVectors(s,r),u.subVectors(i,r),c.cross(u),n.setXYZ(h+0,c.x,c.y,c.z),n.setXYZ(h+1,c.x,c.y,c.z),n.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const s=n[i].array,o=t.attributes[i],a=o.array,l=o.itemSize*e,c=Math.min(a.length,s.length-l);for(let u=0,h=l;u<c;u++,h++)s[h]=a[u]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)lt.fromBufferAttribute(t,e),lt.normalize(),t.setXYZ(e,lt.x,lt.y,lt.z)},toNonIndexed:function(){function t(o,a){const l=o.array,c=o.itemSize,u=o.normalized,h=new l.constructor(a.length*c);let f=0,d=0;for(let p=0,v=a.length;p<v;p++){f=a[p]*c;for(let y=0;y<c;y++)h[d++]=l[f++]}return new xe(h,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ye,n=this.index.array,i=this.attributes;for(const o in i){const a=i[o],l=t(a,n);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const a=[],l=r[o];for(let c=0,u=l.length;c<u;c++){const h=l[c],f=t(h,n);a.push(f)}e.morphAttributes[o]=a}e.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,a=s.length;o<a;o++){const l=s[o];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const l in a)a[l]!==void 0&&(t[l]=a[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const a in n){const l=n[a],c=l.toJSON(t.data);l.name!==""&&(c.name=l.name),t.data.attributes[a]=c}const i={};let r=!1;for(const a in this.morphAttributes){const l=this.morphAttributes[a],c=[];for(let u=0,h=l.length;u<h;u++){const f=l[u],d=f.toJSON(t.data);f.name!==""&&(d.name=f.name),c.push(d)}c.length>0&&(i[a]=c,r=!0)}r&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t},clone:function(){return new ye().copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const r=t.morphAttributes;for(const l in r){const c=[],u=r[l];for(let h=0,f=u.length;h<f;h++)c.push(u[h].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let l=0,c=s.length;l<c;l++){const u=s[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Su=new Ae,er=new Xi,vl=new Fn,zn=new M,Un=new M,Hn=new M,xl=new M,_l=new M,bl=new M,to=new M,no=new M,io=new M,ro=new G,so=new G,oo=new G,wl=new M,ao=new M;function Ve(t=new ye,e=new Pt){de.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}Ve.prototype=Object.assign(Object.create(de.prototype),{constructor:Ve,isMesh:!0,copy:function(t){return de.prototype.copy.call(this,t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),vl.copy(n.boundingSphere),vl.applyMatrix4(r),t.ray.intersectsSphere(vl)===!1)||(Su.copy(r).invert(),er.copy(t.ray).applyMatrix4(Su),n.boundingBox!==null&&er.intersectsBox(n.boundingBox)===!1))return;let s;if(n.isBufferGeometry){const o=n.index,a=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,u=n.attributes.uv,h=n.attributes.uv2,f=n.groups,d=n.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,v=f.length;p<v;p++){const y=f[p],g=i[y.materialIndex],m=Math.max(y.start,d.start),_=Math.min(y.start+y.count,d.start+d.count);for(let b=m,w=_;b<w;b+=3){const x=o.getX(b),T=o.getX(b+1),I=o.getX(b+2);s=lo(this,g,t,er,a,l,c,u,h,x,T,I),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),v=Math.min(o.count,d.start+d.count);for(let y=p,g=v;y<g;y+=3){const m=o.getX(y),_=o.getX(y+1),b=o.getX(y+2);s=lo(this,i,t,er,a,l,c,u,h,m,_,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(i))for(let p=0,v=f.length;p<v;p++){const y=f[p],g=i[y.materialIndex],m=Math.max(y.start,d.start),_=Math.min(y.start+y.count,d.start+d.count);for(let b=m,w=_;b<w;b+=3){const x=b,T=b+1,I=b+2;s=lo(this,g,t,er,a,l,c,u,h,x,T,I),s&&(s.faceIndex=Math.floor(b/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const p=Math.max(0,d.start),v=Math.min(a.count,d.start+d.count);for(let y=p,g=v;y<g;y+=3){const m=y,_=y+1,b=y+2;s=lo(this,i,t,er,a,l,c,u,h,m,_,b),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}});function Ap(t,e,n,i,r,s,o,a){let l;if(e.side===Qe?l=i.intersectTriangle(o,s,r,!0,a):l=i.intersectTriangle(r,s,o,e.side!==Er,a),l===null)return null;ao.copy(a),ao.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(ao);return c<n.near||c>n.far?null:{distance:c,point:ao.clone(),object:t}}function lo(t,e,n,i,r,s,o,a,l,c,u,h){zn.fromBufferAttribute(r,c),Un.fromBufferAttribute(r,u),Hn.fromBufferAttribute(r,h);const f=t.morphTargetInfluences;if(e.morphTargets&&s&&f){to.set(0,0,0),no.set(0,0,0),io.set(0,0,0);for(let p=0,v=s.length;p<v;p++){const y=f[p],g=s[p];y!==0&&(xl.fromBufferAttribute(g,c),_l.fromBufferAttribute(g,u),bl.fromBufferAttribute(g,h),o?(to.addScaledVector(xl,y),no.addScaledVector(_l,y),io.addScaledVector(bl,y)):(to.addScaledVector(xl.sub(zn),y),no.addScaledVector(_l.sub(Un),y),io.addScaledVector(bl.sub(Hn),y)))}zn.add(to),Un.add(no),Hn.add(io)}t.isSkinnedMesh&&(t.boneTransform(c,zn),t.boneTransform(u,Un),t.boneTransform(h,Hn));const d=Ap(t,e,n,i,zn,Un,Hn,wl);if(d){a&&(ro.fromBufferAttribute(a,c),so.fromBufferAttribute(a,u),oo.fromBufferAttribute(a,h),d.uv=dt.getUV(wl,zn,Un,Hn,ro,so,oo,new G)),l&&(ro.fromBufferAttribute(l,c),so.fromBufferAttribute(l,u),oo.fromBufferAttribute(l,h),d.uv2=dt.getUV(wl,zn,Un,Hn,ro,so,oo,new G));const p=new gl(c,u,h);dt.getNormal(zn,Un,Hn,p.normal),d.face=p}return d}class pi extends ye{constructor(e=1,n=1,i=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,e,o,s,0),p("z","y","x",1,-1,i,n,-e,o,s,1),p("x","z","y",1,1,e,i,n,r,o,2),p("x","z","y",1,-1,e,i,-n,r,o,3),p("x","y","z",1,-1,e,n,i,r,s,4),p("x","y","z",-1,-1,e,n,-i,r,s,5),this.setIndex(l),this.setAttribute("position",new le(c,3)),this.setAttribute("normal",new le(u,3)),this.setAttribute("uv",new le(h,2));function p(v,y,g,m,_,b,w,x,T,I,L){const P=b/T,O=w/I,B=b/2,N=w/2,D=x/2,F=T+1,U=I+1;let q=0,$=0;const ie=new M;for(let ue=0;ue<U;ue++){const ce=ue*O-N;for(let Me=0;Me<F;Me++){const Se=Me*P-B;ie[v]=Se*m,ie[y]=ce*_,ie[g]=D,c.push(ie.x,ie.y,ie.z),ie[v]=0,ie[y]=0,ie[g]=x>0?1:-1,u.push(ie.x,ie.y,ie.z),h.push(Me/T),h.push(1-ue/I),q+=1}}for(let ue=0;ue<I;ue++)for(let ce=0;ce<T;ce++){const Me=f+ce+F*ue,Se=f+ce+F*(ue+1),ze=f+(ce+1)+F*(ue+1),V=f+(ce+1)+F*ue;l.push(Me,Se,V),l.push(Se,ze,V),$+=6}a.addGroup(d,$,L),d+=$,f+=q}}}function tr(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const r=t[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[n][i]=r.clone():Array.isArray(r)?e[n][i]=r.slice():e[n][i]=r}}return e}function pt(t){const e={};for(let n=0;n<t.length;n++){const i=tr(t[n]);for(const r in i)e[r]=i[r]}return e}const Eu={clone:tr,merge:pt};var Cp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Lp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function bt(t){ve.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Cp,this.fragmentShader=Lp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}bt.prototype=Object.create(ve.prototype),bt.prototype.constructor=bt,bt.prototype.isShaderMaterial=!0,bt.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=tr(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},bt.prototype.toJSON=function(t){const e=ve.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const s=this.uniforms[i].value;s&&s.isTexture?e.uniforms[i]={type:"t",value:s.toJSON(t).uuid}:s&&s.isColor?e.uniforms[i]={type:"c",value:s.getHex()}:s&&s.isVector2?e.uniforms[i]={type:"v2",value:s.toArray()}:s&&s.isVector3?e.uniforms[i]={type:"v3",value:s.toArray()}:s&&s.isVector4?e.uniforms[i]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?e.uniforms[i]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?e.uniforms[i]={type:"m4",value:s.toArray()}:e.uniforms[i]={value:s}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e};function an(){de.call(this),this.type="Camera",this.matrixWorldInverse=new Ae,this.projectionMatrix=new Ae,this.projectionMatrixInverse=new Ae}an.prototype=Object.assign(Object.create(de.prototype),{constructor:an,isCamera:!0,copy:function(t,e){return de.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new M),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){de.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){de.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function et(t=50,e=1,n=.1,i=2e3){an.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}et.prototype=Object.assign(Object.create(an.prototype),{constructor:et,isPerspectiveCamera:!0,copy:function(t,e){return an.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=_e.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(_e.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return _e.RAD2DEG*2*Math.atan(Math.tan(_e.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,r,s){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(_e.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,r=-.5*i;const s=this.view;if(this.view!==null&&this.view.enabled){const a=s.fullWidth,l=s.fullHeight;r+=s.offsetX*i/a,e-=s.offsetY*n/l,i*=s.width/a,n*=s.height/l}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=de.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const nr=90,ir=1;function mi(t,e,n){if(de.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new et(nr,ir,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new M(1,0,0)),this.add(i);const r=new et(nr,ir,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new M(-1,0,0)),this.add(r);const s=new et(nr,ir,t,e);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(new M(0,1,0)),this.add(s);const o=new et(nr,ir,t,e);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new M(0,-1,0)),this.add(o);const a=new et(nr,ir,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new M(0,0,1)),this.add(a);const l=new et(nr,ir,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new M(0,0,-1)),this.add(l),this.update=function(c,u){this.parent===null&&this.updateMatrixWorld();const h=c.xr.enabled,f=c.getRenderTarget();c.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,c.setRenderTarget(n,0),c.render(u,i),c.setRenderTarget(n,1),c.render(u,r),c.setRenderTarget(n,2),c.render(u,s),c.setRenderTarget(n,3),c.render(u,o),c.setRenderTarget(n,4),c.render(u,a),n.texture.generateMipmaps=d,c.setRenderTarget(n,5),c.render(u,l),c.setRenderTarget(f),c.xr.enabled=h}}mi.prototype=Object.create(de.prototype),mi.prototype.constructor=mi;function ln(t,e,n,i,r,s,o,a,l,c){t=t!==void 0?t:[],e=e!==void 0?e:Ar,o=o!==void 0?o:Rn,Ue.call(this,t,e,n,i,r,s,o,a,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}ln.prototype=Object.create(Ue.prototype),ln.prototype.constructor=ln,ln.prototype.isCubeTexture=!0,Object.defineProperty(ln.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});class Ml extends In{constructor(e,n,i){Number.isInteger(n)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),n=i),super(e,e,n),Object.defineProperty(this,"isWebGLCubeRenderTarget",{value:!0}),n=n||{},this.texture=new ln(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,n){this.texture.type=n.type,this.texture.format=At,this.texture.encoding=n.encoding,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new pi(5,5,5),s=new bt({name:"CubemapFromEquirect",uniforms:tr(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Qe,blending:gn});s.uniforms.tEquirect.value=n;const o=new Ve(r,s),a=n.minFilter;return n.minFilter===Ui&&(n.minFilter=ot),new mi(1,10,this).update(e,o),n.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,n,i,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(n,i,r);e.setRenderTarget(s)}}function Sn(t,e,n,i,r,s,o,a,l,c,u,h){Ue.call(this,null,s,o,a,l,c,i,r,u,h),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=l!==void 0?l:nt,this.minFilter=c!==void 0?c:nt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Sn.prototype=Object.create(Ue.prototype),Sn.prototype.constructor=Sn,Sn.prototype.isDataTexture=!0;const rr=new Fn,co=new M;class Kr{constructor(e,n,i,r,s,o){this.planes=[e!==void 0?e:new sn,n!==void 0?n:new sn,i!==void 0?i:new sn,r!==void 0?r:new sn,s!==void 0?s:new sn,o!==void 0?o:new sn]}set(e,n,i,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(n),a[2].copy(i),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}clone(){return new this.constructor().copy(this)}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,r=i[0],s=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],h=i[7],f=i[8],d=i[9],p=i[10],v=i[11],y=i[12],g=i[13],m=i[14],_=i[15];return n[0].setComponents(a-r,h-l,v-f,_-y).normalize(),n[1].setComponents(a+r,h+l,v+f,_+y).normalize(),n[2].setComponents(a+s,h+c,v+d,_+g).normalize(),n[3].setComponents(a-s,h-c,v-d,_-g).normalize(),n[4].setComponents(a-o,h-u,v-p,_-m).normalize(),n[5].setComponents(a+o,h+u,v+p,_+m).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),rr.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(rr)}intersectsSprite(e){return rr.center.set(0,0,0),rr.radius=.7071067811865476,rr.applyMatrix4(e.matrixWorld),this.intersectsSphere(rr)}intersectsSphere(e){const n=this.planes,i=e.center,r=-e.radius;for(let s=0;s<6;s++)if(n[s].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(co.x=r.normal.x>0?e.max.x:e.min.x,co.y=r.normal.y>0?e.max.y:e.min.y,co.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(co)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}}function Tu(){let t=null,e=!1,n=null,i=null;function r(s,o){n(s,o),i=t.requestAnimationFrame(r)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(r),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){n=s},setContext:function(s){t=s}}}function Pp(t,e){const n=e.isWebGL2,i=new WeakMap;function r(c,u){const h=c.array,f=c.usage,d=t.createBuffer();t.bindBuffer(u,d),t.bufferData(u,h,f),c.onUploadCallback();let p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?n?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:h instanceof Uint8Array&&(p=5121),{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;t.bindBuffer(h,c),d.count===-1?t.bufferSubData(h,0,f):(n?t.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):t.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(t.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h===void 0?i.set(c,r(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class Qr extends ye{constructor(e=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:r};const s=e/2,o=n/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=n/l,d=[],p=[],v=[],y=[];for(let g=0;g<u;g++){const m=g*f-o;for(let _=0;_<c;_++){const b=_*h-s;p.push(b,-m,0),v.push(0,0,1),y.push(_/a),y.push(1-g/l)}}for(let g=0;g<l;g++)for(let m=0;m<a;m++){const _=m+c*g,b=m+c*(g+1),w=m+1+c*(g+1),x=m+1+c*g;d.push(_,b,x),d.push(b,w,x)}this.setIndex(d),this.setAttribute("position",new le(p,3)),this.setAttribute("normal",new le(v,3)),this.setAttribute("uv",new le(y,2))}}var Rp=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Ip=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Dp=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Op=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Fp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Np="vec3 transformed = vec3( position );",Bp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zp=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Up=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Hp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,kp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Gp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Vp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Wp=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,jp=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,qp=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Xp=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Yp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Zp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Jp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,$p=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Kp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Qp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,em=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,tm="gl_FragColor = linearToOutputTexel( gl_FragColor );",nm=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,im=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,rm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,sm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,om=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,am=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,lm=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,cm=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,hm=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,um=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,fm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,dm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,pm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,mm=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,gm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,ym=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,vm=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,xm=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,_m=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,bm=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,wm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,Mm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Sm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Em=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,Tm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Am=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Cm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Lm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Pm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Rm=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,Im=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Dm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Om=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Fm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Nm=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Bm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,zm=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Um=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Hm=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,km=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,Gm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,Vm=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Wm=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,jm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,qm=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Xm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Ym=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Zm=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Jm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,$m=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Km=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Qm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,eg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,tg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,ng=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,ig=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,rg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,sg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,og=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ag=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,lg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,cg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,hg=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,ug=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,fg=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,dg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,pg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,mg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,gg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,yg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,vg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,xg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,_g=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,wg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Mg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Sg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Eg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Tg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Ag=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Cg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Lg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Pg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Rg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ig=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Og=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fg=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ng=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bg=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,zg=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ug=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hg=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kg=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gg=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Vg=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wg=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,jg=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,qg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Xg=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Yg=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Zg=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Jg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,$g=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Pe={alphamap_fragment:Rp,alphamap_pars_fragment:Ip,alphatest_fragment:Dp,aomap_fragment:Op,aomap_pars_fragment:Fp,begin_vertex:Np,beginnormal_vertex:Bp,bsdfs:zp,bumpmap_pars_fragment:Up,clipping_planes_fragment:Hp,clipping_planes_pars_fragment:kp,clipping_planes_pars_vertex:Gp,clipping_planes_vertex:Vp,color_fragment:Wp,color_pars_fragment:jp,color_pars_vertex:qp,color_vertex:Xp,common:Yp,cube_uv_reflection_fragment:Zp,defaultnormal_vertex:Jp,displacementmap_pars_vertex:$p,displacementmap_vertex:Kp,emissivemap_fragment:Qp,emissivemap_pars_fragment:em,encodings_fragment:tm,encodings_pars_fragment:nm,envmap_fragment:im,envmap_common_pars_fragment:rm,envmap_pars_fragment:sm,envmap_pars_vertex:om,envmap_physical_pars_fragment:ym,envmap_vertex:am,fog_vertex:lm,fog_pars_vertex:cm,fog_fragment:hm,fog_pars_fragment:um,gradientmap_pars_fragment:fm,lightmap_fragment:dm,lightmap_pars_fragment:pm,lights_lambert_vertex:mm,lights_pars_begin:gm,lights_toon_fragment:vm,lights_toon_pars_fragment:xm,lights_phong_fragment:_m,lights_phong_pars_fragment:bm,lights_physical_fragment:wm,lights_physical_pars_fragment:Mm,lights_fragment_begin:Sm,lights_fragment_maps:Em,lights_fragment_end:Tm,logdepthbuf_fragment:Am,logdepthbuf_pars_fragment:Cm,logdepthbuf_pars_vertex:Lm,logdepthbuf_vertex:Pm,map_fragment:Rm,map_pars_fragment:Im,map_particle_fragment:Dm,map_particle_pars_fragment:Om,metalnessmap_fragment:Fm,metalnessmap_pars_fragment:Nm,morphnormal_vertex:Bm,morphtarget_pars_vertex:zm,morphtarget_vertex:Um,normal_fragment_begin:Hm,normal_fragment_maps:km,normalmap_pars_fragment:Gm,clearcoat_normal_fragment_begin:Vm,clearcoat_normal_fragment_maps:Wm,clearcoat_pars_fragment:jm,packing:qm,premultiplied_alpha_fragment:Xm,project_vertex:Ym,dithering_fragment:Zm,dithering_pars_fragment:Jm,roughnessmap_fragment:$m,roughnessmap_pars_fragment:Km,shadowmap_pars_fragment:Qm,shadowmap_pars_vertex:eg,shadowmap_vertex:tg,shadowmask_pars_fragment:ng,skinbase_vertex:ig,skinning_pars_vertex:rg,skinning_vertex:sg,skinnormal_vertex:og,specularmap_fragment:ag,specularmap_pars_fragment:lg,tonemapping_fragment:cg,tonemapping_pars_fragment:hg,transmissionmap_fragment:ug,transmissionmap_pars_fragment:fg,uv_pars_fragment:dg,uv_pars_vertex:pg,uv_vertex:mg,uv2_pars_fragment:gg,uv2_pars_vertex:yg,uv2_vertex:vg,worldpos_vertex:xg,background_frag:_g,background_vert:bg,cube_frag:wg,cube_vert:Mg,depth_frag:Sg,depth_vert:Eg,distanceRGBA_frag:Tg,distanceRGBA_vert:Ag,equirect_frag:Cg,equirect_vert:Lg,linedashed_frag:Pg,linedashed_vert:Rg,meshbasic_frag:Ig,meshbasic_vert:Dg,meshlambert_frag:Og,meshlambert_vert:Fg,meshmatcap_frag:Ng,meshmatcap_vert:Bg,meshtoon_frag:zg,meshtoon_vert:Ug,meshphong_frag:Hg,meshphong_vert:kg,meshphysical_frag:Gg,meshphysical_vert:Vg,normal_frag:Wg,normal_vert:jg,points_frag:qg,points_vert:Xg,shadow_frag:Yg,shadow_vert:Zg,sprite_frag:Jg,sprite_vert:$g},ne={common:{diffuse:{value:new ae(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ct},uv2Transform:{value:new Ct},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new G(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ae(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ae(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Ct}},sprite:{diffuse:{value:new ae(15658734)},opacity:{value:1},center:{value:new G(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Ct}}},Xt={basic:{uniforms:pt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.fog]),vertexShader:Pe.meshbasic_vert,fragmentShader:Pe.meshbasic_frag},lambert:{uniforms:pt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.fog,ne.lights,{emissive:{value:new ae(0)}}]),vertexShader:Pe.meshlambert_vert,fragmentShader:Pe.meshlambert_frag},phong:{uniforms:pt([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,ne.lights,{emissive:{value:new ae(0)},specular:{value:new ae(1118481)},shininess:{value:30}}]),vertexShader:Pe.meshphong_vert,fragmentShader:Pe.meshphong_frag},standard:{uniforms:pt([ne.common,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.roughnessmap,ne.metalnessmap,ne.fog,ne.lights,{emissive:{value:new ae(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Pe.meshphysical_vert,fragmentShader:Pe.meshphysical_frag},toon:{uniforms:pt([ne.common,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.gradientmap,ne.fog,ne.lights,{emissive:{value:new ae(0)}}]),vertexShader:Pe.meshtoon_vert,fragmentShader:Pe.meshtoon_frag},matcap:{uniforms:pt([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,{matcap:{value:null}}]),vertexShader:Pe.meshmatcap_vert,fragmentShader:Pe.meshmatcap_frag},points:{uniforms:pt([ne.points,ne.fog]),vertexShader:Pe.points_vert,fragmentShader:Pe.points_frag},dashed:{uniforms:pt([ne.common,ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Pe.linedashed_vert,fragmentShader:Pe.linedashed_frag},depth:{uniforms:pt([ne.common,ne.displacementmap]),vertexShader:Pe.depth_vert,fragmentShader:Pe.depth_frag},normal:{uniforms:pt([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,{opacity:{value:1}}]),vertexShader:Pe.normal_vert,fragmentShader:Pe.normal_frag},sprite:{uniforms:pt([ne.sprite,ne.fog]),vertexShader:Pe.sprite_vert,fragmentShader:Pe.sprite_frag},background:{uniforms:{uvTransform:{value:new Ct},t2D:{value:null}},vertexShader:Pe.background_vert,fragmentShader:Pe.background_frag},cube:{uniforms:pt([ne.envmap,{opacity:{value:1}}]),vertexShader:Pe.cube_vert,fragmentShader:Pe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Pe.equirect_vert,fragmentShader:Pe.equirect_frag},distanceRGBA:{uniforms:pt([ne.common,ne.displacementmap,{referencePosition:{value:new M},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Pe.distanceRGBA_vert,fragmentShader:Pe.distanceRGBA_frag},shadow:{uniforms:pt([ne.lights,ne.fog,{color:{value:new ae(0)},opacity:{value:1}}]),vertexShader:Pe.shadow_vert,fragmentShader:Pe.shadow_frag}};Xt.physical={uniforms:pt([Xt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new G(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new ae(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Pe.meshphysical_vert,fragmentShader:Pe.meshphysical_frag};function Kg(t,e,n,i,r){const s=new ae(0);let o=0,a,l,c=null,u=0,h=null;function f(p,v,y,g){let m=v.isScene===!0?v.background:null;m&&m.isTexture&&(m=e.get(m));const _=t.xr,b=_.getSession&&_.getSession();b&&b.environmentBlendMode==="additive"&&(m=null),m===null?d(s,o):m&&m.isColor&&(d(m,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===zi)?(l===void 0&&(l=new Ve(new pi(1,1,1),new bt({name:"BackgroundCubeMaterial",uniforms:tr(Xt.cube.uniforms),vertexShader:Xt.cube.vertexShader,fragmentShader:Xt.cube.fragmentShader,side:Qe,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(w,x,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),m.isWebGLCubeRenderTarget&&(m=m.texture),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(c!==m||u!==m.version||h!==t.toneMapping)&&(l.material.needsUpdate=!0,c=m,u=m.version,h=t.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new Ve(new Qr(2,2),new bt({name:"BackgroundMaterial",uniforms:tr(Xt.background.uniforms),vertexShader:Xt.background.vertexShader,fragmentShader:Xt.background.fragmentShader,side:Ni,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||u!==m.version||h!==t.toneMapping)&&(a.material.needsUpdate=!0,c=m,u=m.version,h=t.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function d(p,v){n.buffers.color.setClear(p.r,p.g,p.b,v,r)}return{getClearColor:function(){return s},setClearColor:function(p,v=1){s.set(p),o=v,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,d(s,o)},render:f}}function Qg(t,e,n,i){const r=t.getParameter(34921),s=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||s!==null,a={},l=v(null);let c=l;function u(N,D,F,U,q){let $=!1;if(o){const ie=p(U,F,D);c!==ie&&(c=ie,f(c.object)),$=y(U,q),$&&g(U,q)}else{const ie=D.wireframe===!0;(c.geometry!==U.id||c.program!==F.id||c.wireframe!==ie)&&(c.geometry=U.id,c.program=F.id,c.wireframe=ie,$=!0)}N.isInstancedMesh===!0&&($=!0),q!==null&&n.update(q,34963),$&&(T(N,D,F,U),q!==null&&t.bindBuffer(34963,n.get(q).buffer))}function h(){return i.isWebGL2?t.createVertexArray():s.createVertexArrayOES()}function f(N){return i.isWebGL2?t.bindVertexArray(N):s.bindVertexArrayOES(N)}function d(N){return i.isWebGL2?t.deleteVertexArray(N):s.deleteVertexArrayOES(N)}function p(N,D,F){const U=F.wireframe===!0;let q=a[N.id];q===void 0&&(q={},a[N.id]=q);let $=q[D.id];$===void 0&&($={},q[D.id]=$);let ie=$[U];return ie===void 0&&(ie=v(h()),$[U]=ie),ie}function v(N){const D=[],F=[],U=[];for(let q=0;q<r;q++)D[q]=0,F[q]=0,U[q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:F,attributeDivisors:U,object:N,attributes:{},index:null}}function y(N,D){const F=c.attributes,U=N.attributes;let q=0;for(const $ in U){const ie=F[$],ue=U[$];if(ie===void 0||ie.attribute!==ue||ie.data!==ue.data)return!0;q++}return c.attributesNum!==q||c.index!==D}function g(N,D){const F={},U=N.attributes;let q=0;for(const $ in U){const ie=U[$],ue={};ue.attribute=ie,ie.data&&(ue.data=ie.data),F[$]=ue,q++}c.attributes=F,c.attributesNum=q,c.index=D}function m(){const N=c.newAttributes;for(let D=0,F=N.length;D<F;D++)N[D]=0}function _(N){b(N,0)}function b(N,D){const F=c.newAttributes,U=c.enabledAttributes,q=c.attributeDivisors;F[N]=1,U[N]===0&&(t.enableVertexAttribArray(N),U[N]=1),q[N]!==D&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](N,D),q[N]=D)}function w(){const N=c.newAttributes,D=c.enabledAttributes;for(let F=0,U=D.length;F<U;F++)D[F]!==N[F]&&(t.disableVertexAttribArray(F),D[F]=0)}function x(N,D,F,U,q,$){i.isWebGL2===!0&&(F===5124||F===5125)?t.vertexAttribIPointer(N,D,F,q,$):t.vertexAttribPointer(N,D,F,U,q,$)}function T(N,D,F,U){if(i.isWebGL2===!1&&(N.isInstancedMesh||U.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;m();const q=U.attributes,$=F.getAttributes(),ie=D.defaultAttributeValues;for(const ue in $){const ce=$[ue];if(ce>=0){const Me=q[ue];if(Me!==void 0){const Se=Me.normalized,ze=Me.itemSize,V=n.get(Me);if(V===void 0)continue;const rt=V.buffer,we=V.type,De=V.bytesPerElement;if(Me.isInterleavedBufferAttribute){const be=Me.data,Fe=be.stride,Ee=Me.offset;be&&be.isInstancedInterleavedBuffer?(b(ce,be.meshPerAttribute),U._maxInstanceCount===void 0&&(U._maxInstanceCount=be.meshPerAttribute*be.count)):_(ce),t.bindBuffer(34962,rt),x(ce,ze,we,Se,Fe*De,Ee*De)}else Me.isInstancedBufferAttribute?(b(ce,Me.meshPerAttribute),U._maxInstanceCount===void 0&&(U._maxInstanceCount=Me.meshPerAttribute*Me.count)):_(ce),t.bindBuffer(34962,rt),x(ce,ze,we,Se,0,0)}else if(ue==="instanceMatrix"){const Se=n.get(N.instanceMatrix);if(Se===void 0)continue;const ze=Se.buffer,V=Se.type;b(ce+0,1),b(ce+1,1),b(ce+2,1),b(ce+3,1),t.bindBuffer(34962,ze),t.vertexAttribPointer(ce+0,4,V,!1,64,0),t.vertexAttribPointer(ce+1,4,V,!1,64,16),t.vertexAttribPointer(ce+2,4,V,!1,64,32),t.vertexAttribPointer(ce+3,4,V,!1,64,48)}else if(ue==="instanceColor"){const Se=n.get(N.instanceColor);if(Se===void 0)continue;const ze=Se.buffer,V=Se.type;b(ce,1),t.bindBuffer(34962,ze),t.vertexAttribPointer(ce,3,V,!1,12,0)}else if(ie!==void 0){const Se=ie[ue];if(Se!==void 0)switch(Se.length){case 2:t.vertexAttrib2fv(ce,Se);break;case 3:t.vertexAttrib3fv(ce,Se);break;case 4:t.vertexAttrib4fv(ce,Se);break;default:t.vertexAttrib1fv(ce,Se)}}}}w()}function I(){O();for(const N in a){const D=a[N];for(const F in D){const U=D[F];for(const q in U)d(U[q].object),delete U[q];delete D[F]}delete a[N]}}function L(N){if(a[N.id]===void 0)return;const D=a[N.id];for(const F in D){const U=D[F];for(const q in U)d(U[q].object),delete U[q];delete D[F]}delete a[N.id]}function P(N){for(const D in a){const F=a[D];if(F[N.id]===void 0)continue;const U=F[N.id];for(const q in U)d(U[q].object),delete U[q];delete F[N.id]}}function O(){B(),c!==l&&(c=l,f(c.object))}function B(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:O,resetDefaultState:B,dispose:I,releaseStatesOfGeometry:L,releaseStatesOfProgram:P,initAttributes:m,enableAttribute:_,disableUnusedAttributes:w}}function ey(t,e,n,i){const r=i.isWebGL2;let s;function o(c){s=c}function a(c,u){t.drawArrays(s,c,u),n.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(r)f=t,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),n.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function ty(t,e,n){let i;function r(){if(i!==void 0)return i;const x=e.get("EXT_texture_filter_anisotropic");return x!==null?i=t.getParameter(x.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function s(x){if(x==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";x="mediump"}return x==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&t instanceof WebGL2ComputeRenderingContext;let a=n.precision!==void 0?n.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=n.logarithmicDepthBuffer===!0,u=t.getParameter(34930),h=t.getParameter(35660),f=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),v=t.getParameter(36347),y=t.getParameter(36348),g=t.getParameter(36349),m=h>0,_=o||!!e.get("OES_texture_float"),b=m&&_,w=o?t.getParameter(36183):0;return{isWebGL2:o,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:f,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:v,maxVaryings:y,maxFragmentUniforms:g,vertexTextures:m,floatFragmentTextures:_,floatVertexTextures:b,maxSamples:w}}function ny(t){const e=this;let n=null,i=0,r=!1,s=!1;const o=new sn,a=new Ct,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||i!==0||r;return r=f,n=u(h,d,0),i=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,v=h.clipIntersection,y=h.clipShadows,g=t.get(h);if(!r||p===null||p.length===0||s&&!y)s?u(null):c();else{const m=s?0:i,_=m*4;let b=g.clippingState||null;l.value=b,b=u(p,f,_,d);for(let w=0;w!==_;++w)b[w]=n[w];g.clippingState=b,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=m}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,f,d,p){const v=h!==null?h.length:0;let y=null;if(v!==0){if(y=l.value,p!==!0||y===null){const g=d+v*4,m=f.matrixWorldInverse;a.getNormalMatrix(m),(y===null||y.length<g)&&(y=new Float32Array(g));for(let _=0,b=d;_!==v;++_,b+=4)o.copy(h[_]).applyMatrix4(m,a),o.normal.toArray(y,b),y[b+3]=o.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=v,e.numIntersection=0,y}}function iy(t){let e=new WeakMap;function n(o,a){return a===Bs?o.mapping=Ar:a===zs&&(o.mapping=Cr),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Bs||a===zs)if(e.has(o)){const l=e.get(o).texture;return n(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=t.getRenderList(),u=t.getRenderTarget(),h=new Ml(l.height/2);return h.fromEquirectangularTexture(t,o),e.set(o,h),t.setRenderTarget(u),t.setRenderList(c),o.addEventListener("dispose",r),n(h.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}function ry(t){const e={};function n(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(i)}return e[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function sy(t,e,n,i){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,n.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const v=d[p];for(let y=0,g=v.length;y<g;y++)e.update(v[y],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let v=0;if(d!==null){const m=d.array;v=d.version;for(let _=0,b=m.length;_<b;_+=3){const w=m[_+0],x=m[_+1],T=m[_+2];f.push(w,x,x,T,T,w)}}else{const m=p.array;v=p.version;for(let _=0,b=m.length/3-1;_<b;_+=3){const w=_+0,x=_+1,T=_+2;f.push(w,x,x,T,T,w)}}const y=new(Mu(f)>65535?di:fi)(f,1);y.version=v;const g=s.get(h);g&&e.remove(g),s.set(h,y)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function oy(t,e,n,i){const r=i.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){t.drawElements(s,d,a,f*l),n.update(d,s,1)}function h(f,d,p){if(p===0)return;let v,y;if(r)v=t,y="drawElementsInstanced";else if(v=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[y](s,d,a,f*l,p),n.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function ay(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(n.calls++,o){case 4:n.triangles+=a*(s/3);break;case 1:n.lines+=a*(s/2);break;case 3:n.lines+=a*(s-1);break;case 2:n.lines+=a*s;break;case 0:n.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:r,update:i}}function ly(t,e){return t[0]-e[0]}function cy(t,e){return Math.abs(e[1])-Math.abs(t[1])}function hy(t){const e={},n=new Float32Array(8),i=[];for(let s=0;s<8;s++)i[s]=[s,0];function r(s,o,a,l){const c=s.morphTargetInfluences,u=c===void 0?0:c.length;let h=e[o.id];if(h===void 0){h=[];for(let y=0;y<u;y++)h[y]=[y,0];e[o.id]=h}for(let y=0;y<u;y++){const g=h[y];g[0]=y,g[1]=c[y]}h.sort(cy);for(let y=0;y<8;y++)y<u&&h[y][1]?(i[y][0]=h[y][0],i[y][1]=h[y][1]):(i[y][0]=Number.MAX_SAFE_INTEGER,i[y][1]=0);i.sort(ly);const f=a.morphTargets&&o.morphAttributes.position,d=a.morphNormals&&o.morphAttributes.normal;let p=0;for(let y=0;y<8;y++){const g=i[y],m=g[0],_=g[1];m!==Number.MAX_SAFE_INTEGER&&_?(f&&o.getAttribute("morphTarget"+y)!==f[m]&&o.setAttribute("morphTarget"+y,f[m]),d&&o.getAttribute("morphNormal"+y)!==d[m]&&o.setAttribute("morphNormal"+y,d[m]),n[y]=_,p+=_):(f&&o.hasAttribute("morphTarget"+y)===!0&&o.deleteAttribute("morphTarget"+y),d&&o.hasAttribute("morphNormal"+y)===!0&&o.deleteAttribute("morphNormal"+y),n[y]=0)}const v=o.morphTargetsRelative?1:1-p;l.getUniforms().setValue(t,"morphTargetBaseInfluence",v),l.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:r}}function uy(t,e,n,i){let r=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);return r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.update(l.instanceMatrix,34962),l.instanceColor!==null&&n.update(l.instanceColor,34962)),h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:s,dispose:o}}function sr(t=null,e=1,n=1,i=1){Ue.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=nt,this.minFilter=nt,this.wrapR=xt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}sr.prototype=Object.create(Ue.prototype),sr.prototype.constructor=sr,sr.prototype.isDataTexture2DArray=!0;function or(t=null,e=1,n=1,i=1){Ue.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=nt,this.minFilter=nt,this.wrapR=xt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}or.prototype=Object.create(Ue.prototype),or.prototype.constructor=or,or.prototype.isDataTexture3D=!0;const Au=new Ue,fy=new sr,dy=new or,Cu=new ln,Lu=[],Pu=[],Ru=new Float32Array(16),Iu=new Float32Array(9),Du=new Float32Array(4);function ar(t,e,n){const i=t[0];if(i<=0||i>0)return t;const r=e*n;let s=Lu[r];if(s===void 0&&(s=new Float32Array(r),Lu[r]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=n,t[o].toArray(s,a)}return s}function Bt(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function It(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function Ou(t,e){let n=Pu[e];n===void 0&&(n=new Int32Array(e),Pu[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function py(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function my(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Bt(n,e))return;t.uniform2fv(this.addr,e),It(n,e)}}function gy(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Bt(n,e))return;t.uniform3fv(this.addr,e),It(n,e)}}function yy(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Bt(n,e))return;t.uniform4fv(this.addr,e),It(n,e)}}function vy(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Bt(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),It(n,e)}else{if(Bt(n,i))return;Du.set(i),t.uniformMatrix2fv(this.addr,!1,Du),It(n,i)}}function xy(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Bt(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),It(n,e)}else{if(Bt(n,i))return;Iu.set(i),t.uniformMatrix3fv(this.addr,!1,Iu),It(n,i)}}function _y(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Bt(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),It(n,e)}else{if(Bt(n,i))return;Ru.set(i),t.uniformMatrix4fv(this.addr,!1,Ru),It(n,i)}}function by(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(e||Au,r)}function wy(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(e||fy,r)}function My(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(e||dy,r)}function Sy(t,e,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(t.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(e||Cu,r)}function Ey(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ty(t,e){const n=this.cache;Bt(n,e)||(t.uniform2iv(this.addr,e),It(n,e))}function Ay(t,e){const n=this.cache;Bt(n,e)||(t.uniform3iv(this.addr,e),It(n,e))}function Cy(t,e){const n=this.cache;Bt(n,e)||(t.uniform4iv(this.addr,e),It(n,e))}function Ly(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function Py(t){switch(t){case 5126:return py;case 35664:return my;case 35665:return gy;case 35666:return yy;case 35674:return vy;case 35675:return xy;case 35676:return _y;case 5124:case 35670:return Ey;case 35667:case 35671:return Ty;case 35668:case 35672:return Ay;case 35669:case 35673:return Cy;case 5125:return Ly;case 35678:case 36198:case 36298:case 36306:case 35682:return by;case 35679:case 36299:case 36307:return My;case 35680:case 36300:case 36308:case 36293:return Sy;case 36289:case 36303:case 36311:case 36292:return wy}}function Ry(t,e){t.uniform1fv(this.addr,e)}function Iy(t,e){t.uniform1iv(this.addr,e)}function Dy(t,e){t.uniform2iv(this.addr,e)}function Oy(t,e){t.uniform3iv(this.addr,e)}function Fy(t,e){t.uniform4iv(this.addr,e)}function Ny(t,e){const n=ar(e,this.size,2);t.uniform2fv(this.addr,n)}function By(t,e){const n=ar(e,this.size,3);t.uniform3fv(this.addr,n)}function zy(t,e){const n=ar(e,this.size,4);t.uniform4fv(this.addr,n)}function Uy(t,e){const n=ar(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Hy(t,e){const n=ar(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function ky(t,e){const n=ar(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Gy(t,e,n){const i=e.length,r=Ou(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTexture2D(e[s]||Au,r[s])}function Vy(t,e,n){const i=e.length,r=Ou(n,i);t.uniform1iv(this.addr,r);for(let s=0;s!==i;++s)n.safeSetTextureCube(e[s]||Cu,r[s])}function Wy(t){switch(t){case 5126:return Ry;case 35664:return Ny;case 35665:return By;case 35666:return zy;case 35674:return Uy;case 35675:return Hy;case 35676:return ky;case 5124:case 35670:return Iy;case 35667:case 35671:return Dy;case 35668:case 35672:return Oy;case 35669:case 35673:return Fy;case 35678:case 36198:case 36298:case 36306:case 35682:return Gy;case 35680:case 36300:case 36308:case 36293:return Vy}}function jy(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=Py(e.type)}function Fu(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Wy(e.type)}Fu.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),It(e,t)};function Nu(t){this.id=t,this.seq=[],this.map={}}Nu.prototype.setValue=function(t,e,n){const i=this.seq;for(let r=0,s=i.length;r!==s;++r){const o=i[r];o.setValue(t,e[o.id],n)}};const Sl=/(\w+)(\])?(\[|\.)?/g;function Bu(t,e){t.seq.push(e),t.map[e.id]=e}function qy(t,e,n){const i=t.name,r=i.length;for(Sl.lastIndex=0;;){const s=Sl.exec(i),o=Sl.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Bu(n,c===void 0?new jy(a,t,e):new Fu(a,t,e));break}else{let h=n.map[a];h===void 0&&(h=new Nu(a),Bu(n,h)),n=h}}}function kn(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const r=t.getActiveUniform(e,i),s=t.getUniformLocation(e,r.name);qy(r,s,this)}}kn.prototype.setValue=function(t,e,n,i){const r=this.map[e];r!==void 0&&r.setValue(t,n,i)},kn.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)},kn.upload=function(t,e,n,i){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=n[o.id];a.needsUpdate!==!1&&o.setValue(t,a.value,i)}},kn.seqWithValue=function(t,e){const n=[];for(let i=0,r=t.length;i!==r;++i){const s=t[i];s.id in e&&n.push(s)}return n};function zu(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let Xy=0;function Yy(t){const e=t.split(`
`);for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function Uu(t){switch(t){case _t:return["Linear","( value )"];case zr:return["sRGB","( value )"];case Ws:return["RGBE","( value )"];case Ja:return["RGBM","( value, 7.0 )"];case $a:return["RGBM","( value, 16.0 )"];case Ka:return["RGBD","( value, 256.0 )"];case Vs:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case lu:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function Hu(t,e,n){const i=t.getShaderParameter(e,35713),r=t.getShaderInfoLog(e).trim();if(i&&r==="")return"";const s=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+r+Yy(s)}function es(t,e){const n=Uu(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Zy(t,e){const n=Uu(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Jy(t,e){let n;switch(e){case ah:n="Linear";break;case lh:n="Reinhard";break;case ch:n="OptimizedCineon";break;case hh:n="ACESFilmic";break;case uh:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function $y(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ts).join(`
`)}function Ky(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function Qy(t,e){const n={},i=t.getProgramParameter(e,35721);for(let r=0;r<i;r++){const o=t.getActiveAttrib(e,r).name;n[o]=t.getAttribLocation(e,o)}return n}function ts(t){return t!==""}function ku(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Gu(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const ev=/^[ \t]*#include +<([\w\d./]+)>/gm;function El(t){return t.replace(ev,tv)}function tv(t,e){const n=Pe[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return El(n)}const nv=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,iv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vu(t){return t.replace(iv,Wu).replace(nv,rv)}function rv(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Wu(t,e,n,i)}function Wu(t,e,n,i){let r="";for(let s=parseInt(e);s<parseInt(n);s++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function ju(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function sv(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===La?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===Uc?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Fi&&(e="SHADOWMAP_TYPE_VSM"),e}function ov(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Ar:case Cr:e="ENVMAP_TYPE_CUBE";break;case zi:case Lr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function av(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Cr:case Lr:e="ENVMAP_MODE_REFRACTION";break}return e}function lv(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case Tr:e="ENVMAP_BLENDING_MULTIPLY";break;case sh:e="ENVMAP_BLENDING_MIX";break;case oh:e="ENVMAP_BLENDING_ADD";break}return e}function cv(t,e,n,i){const r=t.getContext(),s=n.defines;let o=n.vertexShader,a=n.fragmentShader;const l=sv(n),c=ov(n),u=av(n),h=lv(n),f=t.gammaFactor>0?t.gammaFactor:1,d=n.isWebGL2?"":$y(n),p=Ky(s),v=r.createProgram();let y,g,m=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=[p].filter(ts).join(`
`),y.length>0&&(y+=`
`),g=[d,p].filter(ts).join(`
`),g.length>0&&(g+=`
`)):(y=[ju(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ts).join(`
`),g=[d,ju(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+u:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ii?"#define TONE_MAPPING":"",n.toneMapping!==ii?Pe.tonemapping_pars_fragment:"",n.toneMapping!==ii?Jy("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Pe.encodings_pars_fragment,n.map?es("mapTexelToLinear",n.mapEncoding):"",n.matcap?es("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?es("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?es("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?es("lightMapTexelToLinear",n.lightMapEncoding):"",Zy("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(ts).join(`
`)),o=El(o),o=ku(o,n),o=Gu(o,n),a=El(a),a=ku(a,n),a=Gu(a,n),o=Vu(o),a=Vu(a),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,y=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===Qa?"":"out highp vec4 pc_fragColor;",n.glslVersion===Qa?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const _=m+y+o,b=m+g+a,w=zu(r,35633,_),x=zu(r,35632,b);if(r.attachShader(v,w),r.attachShader(v,x),n.index0AttributeName!==void 0?r.bindAttribLocation(v,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(v,0,"position"),r.linkProgram(v),t.debug.checkShaderErrors){const L=r.getProgramInfoLog(v).trim(),P=r.getShaderInfoLog(w).trim(),O=r.getShaderInfoLog(x).trim();let B=!0,N=!0;if(r.getProgramParameter(v,35714)===!1){B=!1;const D=Hu(r,w,"vertex"),F=Hu(r,x,"fragment");console.error("THREE.WebGLProgram: shader error: ",r.getError(),"35715",r.getProgramParameter(v,35715),"gl.getProgramInfoLog",L,D,F)}else L!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",L):(P===""||O==="")&&(N=!1);N&&(this.diagnostics={runnable:B,programLog:L,vertexShader:{log:P,prefix:y},fragmentShader:{log:O,prefix:g}})}r.deleteShader(w),r.deleteShader(x);let T;this.getUniforms=function(){return T===void 0&&(T=new kn(r,v)),T};let I;return this.getAttributes=function(){return I===void 0&&(I=Qy(r,v)),I},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(v),this.program=void 0},this.name=n.shaderName,this.id=Xy++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=w,this.fragmentShader=x,this}function hv(t,e,n,i,r,s){const o=[],a=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,u=i.maxVertexUniforms,h=i.vertexTextures;let f=i.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function v(x){const I=x.skeleton.bones;if(c)return 1024;{const P=Math.floor((u-20)/4),O=Math.min(P,I.length);return O<I.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+I.length+" bones. This GPU supports "+O+"."),0):O}}function y(x){let T;return x&&x.isTexture?T=x.encoding:x&&x.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),T=x.texture.encoding):T=_t,T}function g(x,T,I,L,P){const O=L.fog,B=x.isMeshStandardMaterial?L.environment:null,N=e.get(x.envMap||B),D=d[x.type],F=P.isSkinnedMesh?v(P):0;x.precision!==null&&(f=i.getMaxPrecision(x.precision),f!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",f,"instead."));let U,q;if(D){const ue=Xt[D];U=ue.vertexShader,q=ue.fragmentShader}else U=x.vertexShader,q=x.fragmentShader;const $=t.getRenderTarget();return{isWebGL2:a,shaderID:D,shaderName:x.type,vertexShader:U,fragmentShader:q,defines:x.defines,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:f,instancing:P.isInstancedMesh===!0,instancingColor:P.isInstancedMesh===!0&&P.instanceColor!==null,supportsVertexTextures:h,outputEncoding:$!==null?y($.texture):t.outputEncoding,map:!!x.map,mapEncoding:y(x.map),matcap:!!x.matcap,matcapEncoding:y(x.matcap),envMap:!!N,envMapMode:N&&N.mapping,envMapEncoding:y(N),envMapCubeUV:!!N&&(N.mapping===zi||N.mapping===Lr),lightMap:!!x.lightMap,lightMapEncoding:y(x.lightMap),aoMap:!!x.aoMap,emissiveMap:!!x.emissiveMap,emissiveMapEncoding:y(x.emissiveMap),bumpMap:!!x.bumpMap,normalMap:!!x.normalMap,objectSpaceNormalMap:x.normalMapType===uu,tangentSpaceNormalMap:x.normalMapType===ai,clearcoatMap:!!x.clearcoatMap,clearcoatRoughnessMap:!!x.clearcoatRoughnessMap,clearcoatNormalMap:!!x.clearcoatNormalMap,displacementMap:!!x.displacementMap,roughnessMap:!!x.roughnessMap,metalnessMap:!!x.metalnessMap,specularMap:!!x.specularMap,alphaMap:!!x.alphaMap,gradientMap:!!x.gradientMap,sheen:!!x.sheen,transmissionMap:!!x.transmissionMap,combine:x.combine,vertexTangents:x.normalMap&&x.vertexTangents,vertexColors:x.vertexColors,vertexUvs:!!x.map||!!x.bumpMap||!!x.normalMap||!!x.specularMap||!!x.alphaMap||!!x.emissiveMap||!!x.roughnessMap||!!x.metalnessMap||!!x.clearcoatMap||!!x.clearcoatRoughnessMap||!!x.clearcoatNormalMap||!!x.displacementMap||!!x.transmissionMap,uvsVertexOnly:!(x.map||x.bumpMap||x.normalMap||x.specularMap||x.alphaMap||x.emissiveMap||x.roughnessMap||x.metalnessMap||x.clearcoatNormalMap||x.transmissionMap)&&!!x.displacementMap,fog:!!O,useFog:x.fog,fogExp2:O&&O.isFogExp2,flatShading:x.flatShading,sizeAttenuation:x.sizeAttenuation,logarithmicDepthBuffer:l,skinning:x.skinning&&F>0,maxBones:F,useVertexTexture:c,morphTargets:x.morphTargets,morphNormals:x.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:x.dithering,shadowMapEnabled:t.shadowMap.enabled&&I.length>0,shadowMapType:t.shadowMap.type,toneMapping:x.toneMapped?t.toneMapping:ii,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:x.premultipliedAlpha,alphaTest:x.alphaTest,doubleSided:x.side===Er,flipSided:x.side===Qe,depthPacking:x.depthPacking!==void 0?x.depthPacking:!1,index0AttributeName:x.index0AttributeName,extensionDerivatives:x.extensions&&x.extensions.derivatives,extensionFragDepth:x.extensions&&x.extensions.fragDepth,extensionDrawBuffers:x.extensions&&x.extensions.drawBuffers,extensionShaderTextureLOD:x.extensions&&x.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:x.customProgramCacheKey()}}function m(x){const T=[];if(x.shaderID?T.push(x.shaderID):(T.push(x.fragmentShader),T.push(x.vertexShader)),x.defines!==void 0)for(const I in x.defines)T.push(I),T.push(x.defines[I]);if(x.isRawShaderMaterial===!1){for(let I=0;I<p.length;I++)T.push(x[p[I]]);T.push(t.outputEncoding),T.push(t.gammaFactor)}return T.push(x.customProgramCacheKey),T.join()}function _(x){const T=d[x.type];let I;if(T){const L=Xt[T];I=Eu.clone(L.uniforms)}else I=x.uniforms;return I}function b(x,T){let I;for(let L=0,P=o.length;L<P;L++){const O=o[L];if(O.cacheKey===T){I=O,++I.usedTimes;break}}return I===void 0&&(I=new cv(t,T,x,r),o.push(I)),I}function w(x){if(--x.usedTimes===0){const T=o.indexOf(x);o[T]=o[o.length-1],o.pop(),x.destroy()}}return{getParameters:g,getProgramCacheKey:m,getUniforms:_,acquireProgram:b,releaseProgram:w,programs:o}}function uv(){let t=new WeakMap;function e(s){let o=t.get(s);return o===void 0&&(o={},t.set(s,o)),o}function n(s){t.delete(s)}function i(s,o,a){t.get(s)[o]=a}function r(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:r}}function fv(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function dv(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function qu(t){const e=[];let n=0;const i=[],r=[],s={id:-1};function o(){n=0,i.length=0,r.length=0}function a(f,d,p,v,y,g){let m=e[n];const _=t.get(p);return m===void 0?(m={id:f.id,object:f,geometry:d,material:p,program:_.program||s,groupOrder:v,renderOrder:f.renderOrder,z:y,group:g},e[n]=m):(m.id=f.id,m.object=f,m.geometry=d,m.material=p,m.program=_.program||s,m.groupOrder=v,m.renderOrder=f.renderOrder,m.z=y,m.group=g),n++,m}function l(f,d,p,v,y,g){const m=a(f,d,p,v,y,g);(p.transparent===!0?r:i).push(m)}function c(f,d,p,v,y,g){const m=a(f,d,p,v,y,g);(p.transparent===!0?r:i).unshift(m)}function u(f,d){i.length>1&&i.sort(f||fv),r.length>1&&r.sort(d||dv)}function h(){for(let f=n,d=e.length;f<d;f++){const p=e[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:r,init:o,push:l,unshift:c,finish:h,sort:u}}function pv(t){let e=new WeakMap;function n(r,s){const o=e.get(r);let a;return o===void 0?(a=new qu(t),e.set(r,new WeakMap),e.get(r).set(s,a)):(a=o.get(s),a===void 0&&(a=new qu(t),o.set(s,a))),a}function i(){e=new WeakMap}return{get:n,dispose:i}}function mv(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new M,color:new ae};break;case"SpotLight":n={position:new M,direction:new M,color:new ae,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new M,color:new ae,distance:0,decay:0};break;case"HemisphereLight":n={direction:new M,skyColor:new ae,groundColor:new ae};break;case"RectAreaLight":n={color:new ae,position:new M,halfWidth:new M,halfHeight:new M};break}return t[e.id]=n,n}}}function gv(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new G,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let yv=0;function vv(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function xv(t,e){const n=new mv,i=gv(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new M);const s=new M,o=new Ae,a=new Ae;function l(u){let h=0,f=0,d=0;for(let T=0;T<9;T++)r.probe[T].set(0,0,0);let p=0,v=0,y=0,g=0,m=0,_=0,b=0,w=0;u.sort(vv);for(let T=0,I=u.length;T<I;T++){const L=u[T],P=L.color,O=L.intensity,B=L.distance,N=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)h+=P.r*O,f+=P.g*O,d+=P.b*O;else if(L.isLightProbe)for(let D=0;D<9;D++)r.probe[D].addScaledVector(L.sh.coefficients[D],O);else if(L.isDirectionalLight){const D=n.get(L);if(D.color.copy(L.color).multiplyScalar(L.intensity),L.castShadow){const F=L.shadow,U=i.get(L);U.shadowBias=F.bias,U.shadowNormalBias=F.normalBias,U.shadowRadius=F.radius,U.shadowMapSize=F.mapSize,r.directionalShadow[p]=U,r.directionalShadowMap[p]=N,r.directionalShadowMatrix[p]=L.shadow.matrix,_++}r.directional[p]=D,p++}else if(L.isSpotLight){const D=n.get(L);if(D.position.setFromMatrixPosition(L.matrixWorld),D.color.copy(P).multiplyScalar(O),D.distance=B,D.coneCos=Math.cos(L.angle),D.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),D.decay=L.decay,L.castShadow){const F=L.shadow,U=i.get(L);U.shadowBias=F.bias,U.shadowNormalBias=F.normalBias,U.shadowRadius=F.radius,U.shadowMapSize=F.mapSize,r.spotShadow[y]=U,r.spotShadowMap[y]=N,r.spotShadowMatrix[y]=L.shadow.matrix,w++}r.spot[y]=D,y++}else if(L.isRectAreaLight){const D=n.get(L);D.color.copy(P).multiplyScalar(O),D.halfWidth.set(L.width*.5,0,0),D.halfHeight.set(0,L.height*.5,0),r.rectArea[g]=D,g++}else if(L.isPointLight){const D=n.get(L);if(D.color.copy(L.color).multiplyScalar(L.intensity),D.distance=L.distance,D.decay=L.decay,L.castShadow){const F=L.shadow,U=i.get(L);U.shadowBias=F.bias,U.shadowNormalBias=F.normalBias,U.shadowRadius=F.radius,U.shadowMapSize=F.mapSize,U.shadowCameraNear=F.camera.near,U.shadowCameraFar=F.camera.far,r.pointShadow[v]=U,r.pointShadowMap[v]=N,r.pointShadowMatrix[v]=L.shadow.matrix,b++}r.point[v]=D,v++}else if(L.isHemisphereLight){const D=n.get(L);D.skyColor.copy(L.color).multiplyScalar(O),D.groundColor.copy(L.groundColor).multiplyScalar(O),r.hemi[m]=D,m++}}g>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=ne.LTC_FLOAT_1,r.rectAreaLTC2=ne.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=ne.LTC_HALF_1,r.rectAreaLTC2=ne.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=f,r.ambient[2]=d;const x=r.hash;(x.directionalLength!==p||x.pointLength!==v||x.spotLength!==y||x.rectAreaLength!==g||x.hemiLength!==m||x.numDirectionalShadows!==_||x.numPointShadows!==b||x.numSpotShadows!==w)&&(r.directional.length=p,r.spot.length=y,r.rectArea.length=g,r.point.length=v,r.hemi.length=m,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=b,r.pointShadowMap.length=b,r.spotShadow.length=w,r.spotShadowMap.length=w,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=b,r.spotShadowMatrix.length=w,x.directionalLength=p,x.pointLength=v,x.spotLength=y,x.rectAreaLength=g,x.hemiLength=m,x.numDirectionalShadows=_,x.numPointShadows=b,x.numSpotShadows=w,r.version=yv++)}function c(u,h){let f=0,d=0,p=0,v=0,y=0;const g=h.matrixWorldInverse;for(let m=0,_=u.length;m<_;m++){const b=u[m];if(b.isDirectionalLight){const w=r.directional[f];w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(g),f++}else if(b.isSpotLight){const w=r.spot[p];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),w.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),w.direction.sub(s),w.direction.transformDirection(g),p++}else if(b.isRectAreaLight){const w=r.rectArea[v];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),a.identity(),o.copy(b.matrixWorld),o.premultiply(g),a.extractRotation(o),w.halfWidth.set(b.width*.5,0,0),w.halfHeight.set(0,b.height*.5,0),w.halfWidth.applyMatrix4(a),w.halfHeight.applyMatrix4(a),v++}else if(b.isPointLight){const w=r.point[d];w.position.setFromMatrixPosition(b.matrixWorld),w.position.applyMatrix4(g),d++}else if(b.isHemisphereLight){const w=r.hemi[y];w.direction.setFromMatrixPosition(b.matrixWorld),w.direction.transformDirection(g),w.direction.normalize(),y++}}}return{setup:l,setupView:c,state:r}}function Xu(t,e){const n=new xv(t,e),i=[],r=[];function s(){i.length=0,r.length=0}function o(h){i.push(h)}function a(h){r.push(h)}function l(){n.setup(i)}function c(h){n.setupView(i,h)}return{init:s,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function _v(t,e){let n=new WeakMap;function i(s,o=0){let a;return n.has(s)===!1?(a=new Xu(t,e),n.set(s,[]),n.get(s).push(a)):o>=n.get(s).length?(a=new Xu(t,e),n.get(s).push(a)):a=n.get(s)[o],a}function r(){n=new WeakMap}return{get:i,dispose:r}}function Gn(t){ve.call(this),this.type="MeshDepthMaterial",this.depthPacking=cu,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}Gn.prototype=Object.create(ve.prototype),Gn.prototype.constructor=Gn,Gn.prototype.isMeshDepthMaterial=!0,Gn.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function Vn(t){ve.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new M,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Vn.prototype=Object.create(ve.prototype),Vn.prototype.constructor=Vn,Vn.prototype.isMeshDistanceMaterial=!0,Vn.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var bv=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,wv=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Yu(t,e,n){let i=new Kr;const r=new G,s=new G,o=new He,a=[],l=[],c={},u={0:Qe,1:Ni,2:Er},h=new bt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new G},radius:{value:4}},vertexShader:wv,fragmentShader:bv}),f=h.clone();f.defines.HORIZONTAL_PASS=1;const d=new ye;d.setAttribute("position",new xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new Ve(d,h),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=La,this.render=function(w,x,T){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||w.length===0)return;const I=t.getRenderTarget(),L=t.getActiveCubeFace(),P=t.getActiveMipmapLevel(),O=t.state;O.setBlending(gn),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);for(let B=0,N=w.length;B<N;B++){const D=w[B],F=D.shadow;if(F===void 0){console.warn("THREE.WebGLShadowMap:",D,"has no shadow.");continue}if(F.autoUpdate===!1&&F.needsUpdate===!1)continue;r.copy(F.mapSize);const U=F.getFrameExtents();if(r.multiply(U),s.copy(F.mapSize),(r.x>n||r.y>n)&&(r.x>n&&(s.x=Math.floor(n/U.x),r.x=s.x*U.x,F.mapSize.x=s.x),r.y>n&&(s.y=Math.floor(n/U.y),r.y=s.y*U.y,F.mapSize.y=s.y)),F.map===null&&!F.isPointLightShadow&&this.type===Fi){const $={minFilter:ot,magFilter:ot,format:At};F.map=new In(r.x,r.y,$),F.map.texture.name=D.name+".shadowMap",F.mapPass=new In(r.x,r.y,$),F.camera.updateProjectionMatrix()}if(F.map===null){const $={minFilter:nt,magFilter:nt,format:At};F.map=new In(r.x,r.y,$),F.map.texture.name=D.name+".shadowMap",F.camera.updateProjectionMatrix()}t.setRenderTarget(F.map),t.clear();const q=F.getViewportCount();for(let $=0;$<q;$++){const ie=F.getViewport($);o.set(s.x*ie.x,s.y*ie.y,s.x*ie.z,s.y*ie.w),O.viewport(o),F.updateMatrices(D,$),i=F.getFrustum(),b(x,T,F.camera,D,this.type)}!F.isPointLightShadow&&this.type===Fi&&y(F,T),F.needsUpdate=!1}v.needsUpdate=!1,t.setRenderTarget(I,L,P)};function y(w,x){const T=e.update(p);h.uniforms.shadow_pass.value=w.map.texture,h.uniforms.resolution.value=w.mapSize,h.uniforms.radius.value=w.radius,t.setRenderTarget(w.mapPass),t.clear(),t.renderBufferDirect(x,null,T,h,p,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,t.setRenderTarget(w.map),t.clear(),t.renderBufferDirect(x,null,T,f,p,null)}function g(w,x,T){const I=w<<0|x<<1|T<<2;let L=a[I];return L===void 0&&(L=new Gn({depthPacking:hu,morphTargets:w,skinning:x}),a[I]=L),L}function m(w,x,T){const I=w<<0|x<<1|T<<2;let L=l[I];return L===void 0&&(L=new Vn({morphTargets:w,skinning:x}),l[I]=L),L}function _(w,x,T,I,L,P,O){let B=null,N=g,D=w.customDepthMaterial;if(I.isPointLight===!0&&(N=m,D=w.customDistanceMaterial),D===void 0){let F=!1;T.morphTargets===!0&&(F=x.morphAttributes&&x.morphAttributes.position&&x.morphAttributes.position.length>0);let U=!1;w.isSkinnedMesh===!0&&(T.skinning===!0?U=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",w));const q=w.isInstancedMesh===!0;B=N(F,U,q)}else B=D;if(t.localClippingEnabled&&T.clipShadows===!0&&T.clippingPlanes.length!==0){const F=B.uuid,U=T.uuid;let q=c[F];q===void 0&&(q={},c[F]=q);let $=q[U];$===void 0&&($=B.clone(),q[U]=$),B=$}return B.visible=T.visible,B.wireframe=T.wireframe,O===Fi?B.side=T.shadowSide!==null?T.shadowSide:T.side:B.side=T.shadowSide!==null?T.shadowSide:u[T.side],B.clipShadows=T.clipShadows,B.clippingPlanes=T.clippingPlanes,B.clipIntersection=T.clipIntersection,B.wireframeLinewidth=T.wireframeLinewidth,B.linewidth=T.linewidth,I.isPointLight===!0&&B.isMeshDistanceMaterial===!0&&(B.referencePosition.setFromMatrixPosition(I.matrixWorld),B.nearDistance=L,B.farDistance=P),B}function b(w,x,T,I,L){if(w.visible===!1)return;if(w.layers.test(x.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&L===Fi)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,w.matrixWorld);const B=e.update(w),N=w.material;if(Array.isArray(N)){const D=B.groups;for(let F=0,U=D.length;F<U;F++){const q=D[F],$=N[q.materialIndex];if($&&$.visible){const ie=_(w,B,$,I,T.near,T.far,L);t.renderBufferDirect(T,null,B,ie,w,q)}}}else if(N.visible){const D=_(w,B,N,I,T.near,T.far,L);t.renderBufferDirect(T,null,B,D,w,null)}}const O=w.children;for(let B=0,N=O.length;B<N;B++)b(O[B],x,T,I,L)}}function Mv(t,e,n){const i=n.isWebGL2;function r(){let R=!1;const Z=new He;let re=null;const fe=new He(0,0,0,0);return{setMask:function(Q){re!==Q&&!R&&(t.colorMask(Q,Q,Q,Q),re=Q)},setLocked:function(Q){R=Q},setClear:function(Q,C,J,he,te){te===!0&&(Q*=he,C*=he,J*=he),Z.set(Q,C,J,he),fe.equals(Z)===!1&&(t.clearColor(Q,C,J,he),fe.copy(Z))},reset:function(){R=!1,re=null,fe.set(-1,0,0,0)}}}function s(){let R=!1,Z=null,re=null,fe=null;return{setTest:function(Q){Q?ue(2929):ce(2929)},setMask:function(Q){Z!==Q&&!R&&(t.depthMask(Q),Z=Q)},setFunc:function(Q){if(re!==Q){if(Q)switch(Q){case Kc:t.depthFunc(512);break;case Qc:t.depthFunc(519);break;case eh:t.depthFunc(513);break;case Fs:t.depthFunc(515);break;case th:t.depthFunc(514);break;case nh:t.depthFunc(518);break;case ih:t.depthFunc(516);break;case rh:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);re=Q}},setLocked:function(Q){R=Q},setClear:function(Q){fe!==Q&&(t.clearDepth(Q),fe=Q)},reset:function(){R=!1,Z=null,re=null,fe=null}}}function o(){let R=!1,Z=null,re=null,fe=null,Q=null,C=null,J=null,he=null,te=null;return{setTest:function(ge){R||(ge?ue(2960):ce(2960))},setMask:function(ge){Z!==ge&&!R&&(t.stencilMask(ge),Z=ge)},setFunc:function(ge,Ne,st){(re!==ge||fe!==Ne||Q!==st)&&(t.stencilFunc(ge,Ne,st),re=ge,fe=Ne,Q=st)},setOp:function(ge,Ne,st){(C!==ge||J!==Ne||he!==st)&&(t.stencilOp(ge,Ne,st),C=ge,J=Ne,he=st)},setLocked:function(ge){R=ge},setClear:function(ge){te!==ge&&(t.clearStencil(ge),te=ge)},reset:function(){R=!1,Z=null,re=null,fe=null,Q=null,C=null,J=null,he=null,te=null}}}const a=new r,l=new s,c=new o;let u={},h=null,f=null,d=null,p=null,v=null,y=null,g=null,m=null,_=null,b=!1,w=null,x=null,T=null,I=null,L=null;const P=t.getParameter(35661);let O=!1,B=0;const N=t.getParameter(7938);N.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(N)[1]),O=B>=1):N.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(N)[1]),O=B>=2);let D=null,F={};const U=new He,q=new He;function $(R,Z,re){const fe=new Uint8Array(4),Q=t.createTexture();t.bindTexture(R,Q),t.texParameteri(R,10241,9728),t.texParameteri(R,10240,9728);for(let C=0;C<re;C++)t.texImage2D(Z+C,0,6408,1,1,0,6408,5121,fe);return Q}const ie={};ie[3553]=$(3553,3553,1),ie[34067]=$(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ue(2929),l.setFunc(Fs),we(!1),De(Ca),ue(2884),V(gn);function ue(R){u[R]!==!0&&(t.enable(R),u[R]=!0)}function ce(R){u[R]!==!1&&(t.disable(R),u[R]=!1)}function Me(R){return h!==R?(t.useProgram(R),h=R,!0):!1}const Se={[ni]:32774,[kc]:32778,[Gc]:32779};if(i)Se[Oa]=32775,Se[Fa]=32776;else{const R=e.get("EXT_blend_minmax");R!==null&&(Se[Oa]=R.MIN_EXT,Se[Fa]=R.MAX_EXT)}const ze={[Vc]:0,[Wc]:1,[jc]:768,[Na]:770,[$c]:776,[Zc]:774,[Xc]:772,[qc]:769,[Ba]:771,[Jc]:775,[Yc]:773};function V(R,Z,re,fe,Q,C,J,he){if(R===gn){f&&(ce(3042),f=!1);return}if(f||(ue(3042),f=!0),R!==Hc){if(R!==d||he!==b){if((p!==ni||g!==ni)&&(t.blendEquation(32774),p=ni,g=ni),he)switch(R){case Bi:t.blendFuncSeparate(1,771,1,771);break;case Ra:t.blendFunc(1,1);break;case Ia:t.blendFuncSeparate(0,0,769,771);break;case Da:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}else switch(R){case Bi:t.blendFuncSeparate(770,771,1,771);break;case Ra:t.blendFunc(770,1);break;case Ia:t.blendFunc(0,769);break;case Da:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",R);break}v=null,y=null,m=null,_=null,d=R,b=he}return}Q=Q||Z,C=C||re,J=J||fe,(Z!==p||Q!==g)&&(t.blendEquationSeparate(Se[Z],Se[Q]),p=Z,g=Q),(re!==v||fe!==y||C!==m||J!==_)&&(t.blendFuncSeparate(ze[re],ze[fe],ze[C],ze[J]),v=re,y=fe,m=C,_=J),d=R,b=null}function rt(R,Z){R.side===Er?ce(2884):ue(2884);let re=R.side===Qe;Z&&(re=!re),we(re),R.blending===Bi&&R.transparent===!1?V(gn):V(R.blending,R.blendEquation,R.blendSrc,R.blendDst,R.blendEquationAlpha,R.blendSrcAlpha,R.blendDstAlpha,R.premultipliedAlpha),l.setFunc(R.depthFunc),l.setTest(R.depthTest),l.setMask(R.depthWrite),a.setMask(R.colorWrite);const fe=R.stencilWrite;c.setTest(fe),fe&&(c.setMask(R.stencilWriteMask),c.setFunc(R.stencilFunc,R.stencilRef,R.stencilFuncMask),c.setOp(R.stencilFail,R.stencilZFail,R.stencilZPass)),Fe(R.polygonOffset,R.polygonOffsetFactor,R.polygonOffsetUnits)}function we(R){w!==R&&(R?t.frontFace(2304):t.frontFace(2305),w=R)}function De(R){R!==Bc?(ue(2884),R!==x&&(R===Ca?t.cullFace(1029):R===zc?t.cullFace(1028):t.cullFace(1032))):ce(2884),x=R}function be(R){R!==T&&(O&&t.lineWidth(R),T=R)}function Fe(R,Z,re){R?(ue(32823),(I!==Z||L!==re)&&(t.polygonOffset(Z,re),I=Z,L=re)):ce(32823)}function Ee(R){R?ue(3089):ce(3089)}function X(R){R===void 0&&(R=33984+P-1),D!==R&&(t.activeTexture(R),D=R)}function K(R,Z){D===null&&X();let re=F[D];re===void 0&&(re={type:void 0,texture:void 0},F[D]=re),(re.type!==R||re.texture!==Z)&&(t.bindTexture(R,Z||ie[R]),re.type=R,re.texture=Z)}function ee(){const R=F[D];R!==void 0&&R.type!==void 0&&(t.bindTexture(R.type,null),R.type=void 0,R.texture=void 0)}function pe(){try{t.compressedTexImage2D.apply(t,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function se(){try{t.texImage2D.apply(t,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function A(){try{t.texImage3D.apply(t,arguments)}catch(R){console.error("THREE.WebGLState:",R)}}function S(R){U.equals(R)===!1&&(t.scissor(R.x,R.y,R.z,R.w),U.copy(R))}function Y(R){q.equals(R)===!1&&(t.viewport(R.x,R.y,R.z,R.w),q.copy(R))}function j(){u={},D=null,F={},h=null,f=null,d=null,p=null,v=null,y=null,g=null,m=null,_=null,b=!1,w=null,x=null,T=null,I=null,L=null,a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ue,disable:ce,useProgram:Me,setBlending:V,setMaterial:rt,setFlipSided:we,setCullFace:De,setLineWidth:be,setPolygonOffset:Fe,setScissorTest:Ee,activeTexture:X,bindTexture:K,unbindTexture:ee,compressedTexImage2D:pe,texImage2D:se,texImage3D:A,scissor:S,viewport:Y,reset:j}}function Sv(t,e,n,i,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,f=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function v(A,S){return p?new OffscreenCanvas(A,S):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(A,S,Y,j){let R=1;if((A.width>j||A.height>j)&&(R=j/Math.max(A.width,A.height)),R<1||S===!0)if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap){const Z=S?_e.floorPowerOfTwo:Math.floor,re=Z(R*A.width),fe=Z(R*A.height);d===void 0&&(d=v(re,fe));const Q=Y?v(re,fe):d;return Q.width=re,Q.height=fe,Q.getContext("2d").drawImage(A,0,0,re,fe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+re+"x"+fe+")."),Q}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A;return A}function g(A){return _e.isPowerOfTwo(A.width)&&_e.isPowerOfTwo(A.height)}function m(A){return a?!1:A.wrapS!==xt||A.wrapT!==xt||A.minFilter!==nt&&A.minFilter!==ot}function _(A,S){return A.generateMipmaps&&S&&A.minFilter!==nt&&A.minFilter!==ot}function b(A,S,Y,j){t.generateMipmap(A);const R=i.get(S);R.__maxMipLevel=Math.log(Math.max(Y,j))*Math.LOG2E}function w(A,S,Y){if(a===!1)return S;if(A!==null){if(t[A]!==void 0)return t[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let j=S;return S===6403&&(Y===5126&&(j=33326),Y===5131&&(j=33325),Y===5121&&(j=33321)),S===6407&&(Y===5126&&(j=34837),Y===5131&&(j=34843),Y===5121&&(j=32849)),S===6408&&(Y===5126&&(j=34836),Y===5131&&(j=34842),Y===5121&&(j=32856)),(j===33325||j===33326||j===34842||j===34836)&&e.get("EXT_color_buffer_float"),j}function x(A){return A===nt||A===Us||A===Hs?9728:9729}function T(A){const S=A.target;S.removeEventListener("dispose",T),L(S),S.isVideoTexture&&f.delete(S),o.memory.textures--}function I(A){const S=A.target;S.removeEventListener("dispose",I),P(S),o.memory.textures--}function L(A){const S=i.get(A);S.__webglInit!==void 0&&(t.deleteTexture(S.__webglTexture),i.remove(A))}function P(A){const S=i.get(A),Y=i.get(A.texture);if(A){if(Y.__webglTexture!==void 0&&t.deleteTexture(Y.__webglTexture),A.depthTexture&&A.depthTexture.dispose(),A.isWebGLCubeRenderTarget)for(let j=0;j<6;j++)t.deleteFramebuffer(S.__webglFramebuffer[j]),S.__webglDepthbuffer&&t.deleteRenderbuffer(S.__webglDepthbuffer[j]);else t.deleteFramebuffer(S.__webglFramebuffer),S.__webglDepthbuffer&&t.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&t.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer&&t.deleteRenderbuffer(S.__webglColorRenderbuffer),S.__webglDepthRenderbuffer&&t.deleteRenderbuffer(S.__webglDepthRenderbuffer);i.remove(A.texture),i.remove(A)}}let O=0;function B(){O=0}function N(){const A=O;return A>=l&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+l),O+=1,A}function D(A,S){const Y=i.get(A);if(A.isVideoTexture&&X(A),A.version>0&&Y.__version!==A.version){const j=A.image;if(j===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(j.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Me(Y,A,S);return}}n.activeTexture(33984+S),n.bindTexture(3553,Y.__webglTexture)}function F(A,S){const Y=i.get(A);if(A.version>0&&Y.__version!==A.version){Me(Y,A,S);return}n.activeTexture(33984+S),n.bindTexture(35866,Y.__webglTexture)}function U(A,S){const Y=i.get(A);if(A.version>0&&Y.__version!==A.version){Me(Y,A,S);return}n.activeTexture(33984+S),n.bindTexture(32879,Y.__webglTexture)}function q(A,S){const Y=i.get(A);if(A.version>0&&Y.__version!==A.version){Se(Y,A,S);return}n.activeTexture(33984+S),n.bindTexture(34067,Y.__webglTexture)}const $={[Pr]:10497,[xt]:33071,[Rr]:33648},ie={[nt]:9728,[Us]:9984,[Hs]:9986,[ot]:9729,[za]:9985,[Ui]:9987};function ue(A,S,Y){Y?(t.texParameteri(A,10242,$[S.wrapS]),t.texParameteri(A,10243,$[S.wrapT]),(A===32879||A===35866)&&t.texParameteri(A,32882,$[S.wrapR]),t.texParameteri(A,10240,ie[S.magFilter]),t.texParameteri(A,10241,ie[S.minFilter])):(t.texParameteri(A,10242,33071),t.texParameteri(A,10243,33071),(A===32879||A===35866)&&t.texParameteri(A,32882,33071),(S.wrapS!==xt||S.wrapT!==xt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(A,10240,x(S.magFilter)),t.texParameteri(A,10241,x(S.minFilter)),S.minFilter!==nt&&S.minFilter!==ot&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const j=e.get("EXT_texture_filter_anisotropic");if(j){if(S.type===yn&&e.get("OES_texture_float_linear")===null||S.type===Or&&(a||e.get("OES_texture_half_float_linear"))===null)return;(S.anisotropy>1||i.get(S).__currentAnisotropy)&&(t.texParameterf(A,j.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,r.getMaxAnisotropy())),i.get(S).__currentAnisotropy=S.anisotropy)}}function ce(A,S){A.__webglInit===void 0&&(A.__webglInit=!0,S.addEventListener("dispose",T),A.__webglTexture=t.createTexture(),o.memory.textures++)}function Me(A,S,Y){let j=3553;S.isDataTexture2DArray&&(j=35866),S.isDataTexture3D&&(j=32879),ce(A,S),n.activeTexture(33984+Y),n.bindTexture(j,A.__webglTexture),t.pixelStorei(37440,S.flipY),t.pixelStorei(37441,S.premultiplyAlpha),t.pixelStorei(3317,S.unpackAlignment);const R=m(S)&&g(S.image)===!1,Z=y(S.image,R,!1,u),re=g(Z)||a,fe=s.convert(S.format);let Q=s.convert(S.type),C=w(S.internalFormat,fe,Q);ue(j,S,re);let J;const he=S.mipmaps;if(S.isDepthTexture)C=6402,a?S.type===yn?C=36012:S.type===Dr?C=33190:S.type===ki?C=35056:C=33189:S.type===yn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),S.format===ri&&C===6402&&S.type!==Ir&&S.type!==Dr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),S.type=Ir,Q=s.convert(S.type)),S.format===Gi&&C===6402&&(C=34041,S.type!==ki&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),S.type=ki,Q=s.convert(S.type))),n.texImage2D(3553,0,C,Z.width,Z.height,0,fe,Q,null);else if(S.isDataTexture)if(he.length>0&&re){for(let te=0,ge=he.length;te<ge;te++)J=he[te],n.texImage2D(3553,te,C,J.width,J.height,0,fe,Q,J.data);S.generateMipmaps=!1,A.__maxMipLevel=he.length-1}else n.texImage2D(3553,0,C,Z.width,Z.height,0,fe,Q,Z.data),A.__maxMipLevel=0;else if(S.isCompressedTexture){for(let te=0,ge=he.length;te<ge;te++)J=he[te],S.format!==At&&S.format!==Rn?fe!==null?n.compressedTexImage2D(3553,te,C,J.width,J.height,0,J.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,te,C,J.width,J.height,0,fe,Q,J.data);A.__maxMipLevel=he.length-1}else if(S.isDataTexture2DArray)n.texImage3D(35866,0,C,Z.width,Z.height,Z.depth,0,fe,Q,Z.data),A.__maxMipLevel=0;else if(S.isDataTexture3D)n.texImage3D(32879,0,C,Z.width,Z.height,Z.depth,0,fe,Q,Z.data),A.__maxMipLevel=0;else if(he.length>0&&re){for(let te=0,ge=he.length;te<ge;te++)J=he[te],n.texImage2D(3553,te,C,fe,Q,J);S.generateMipmaps=!1,A.__maxMipLevel=he.length-1}else n.texImage2D(3553,0,C,fe,Q,Z),A.__maxMipLevel=0;_(S,re)&&b(j,S,Z.width,Z.height),A.__version=S.version,S.onUpdate&&S.onUpdate(S)}function Se(A,S,Y){if(S.image.length!==6)return;ce(A,S),n.activeTexture(33984+Y),n.bindTexture(34067,A.__webglTexture),t.pixelStorei(37440,S.flipY),t.pixelStorei(37441,S.premultiplyAlpha),t.pixelStorei(3317,S.unpackAlignment);const j=S&&(S.isCompressedTexture||S.image[0].isCompressedTexture),R=S.image[0]&&S.image[0].isDataTexture,Z=[];for(let te=0;te<6;te++)!j&&!R?Z[te]=y(S.image[te],!1,!0,c):Z[te]=R?S.image[te].image:S.image[te];const re=Z[0],fe=g(re)||a,Q=s.convert(S.format),C=s.convert(S.type),J=w(S.internalFormat,Q,C);ue(34067,S,fe);let he;if(j){for(let te=0;te<6;te++){he=Z[te].mipmaps;for(let ge=0;ge<he.length;ge++){const Ne=he[ge];S.format!==At&&S.format!==Rn?Q!==null?n.compressedTexImage2D(34069+te,ge,J,Ne.width,Ne.height,0,Ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+te,ge,J,Ne.width,Ne.height,0,Q,C,Ne.data)}}A.__maxMipLevel=he.length-1}else{he=S.mipmaps;for(let te=0;te<6;te++)if(R){n.texImage2D(34069+te,0,J,Z[te].width,Z[te].height,0,Q,C,Z[te].data);for(let ge=0;ge<he.length;ge++){const st=he[ge].image[te].image;n.texImage2D(34069+te,ge+1,J,st.width,st.height,0,Q,C,st.data)}}else{n.texImage2D(34069+te,0,J,Q,C,Z[te]);for(let ge=0;ge<he.length;ge++){const Ne=he[ge];n.texImage2D(34069+te,ge+1,J,Q,C,Ne.image[te])}}A.__maxMipLevel=he.length}_(S,fe)&&b(34067,S,re.width,re.height),A.__version=S.version,S.onUpdate&&S.onUpdate(S)}function ze(A,S,Y,j){const R=s.convert(S.texture.format),Z=s.convert(S.texture.type),re=w(S.texture.internalFormat,R,Z);n.texImage2D(j,0,re,S.width,S.height,0,R,Z,null),t.bindFramebuffer(36160,A),t.framebufferTexture2D(36160,Y,j,i.get(S.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function V(A,S,Y){if(t.bindRenderbuffer(36161,A),S.depthBuffer&&!S.stencilBuffer){let j=33189;if(Y){const R=S.depthTexture;R&&R.isDepthTexture&&(R.type===yn?j=36012:R.type===Dr&&(j=33190));const Z=Ee(S);t.renderbufferStorageMultisample(36161,Z,j,S.width,S.height)}else t.renderbufferStorage(36161,j,S.width,S.height);t.framebufferRenderbuffer(36160,36096,36161,A)}else if(S.depthBuffer&&S.stencilBuffer){if(Y){const j=Ee(S);t.renderbufferStorageMultisample(36161,j,35056,S.width,S.height)}else t.renderbufferStorage(36161,34041,S.width,S.height);t.framebufferRenderbuffer(36160,33306,36161,A)}else{const j=s.convert(S.texture.format),R=s.convert(S.texture.type),Z=w(S.texture.internalFormat,j,R);if(Y){const re=Ee(S);t.renderbufferStorageMultisample(36161,re,Z,S.width,S.height)}else t.renderbufferStorage(36161,Z,S.width,S.height)}t.bindRenderbuffer(36161,null)}function rt(A,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,A),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(S.depthTexture).__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),D(S.depthTexture,0);const j=i.get(S.depthTexture).__webglTexture;if(S.depthTexture.format===ri)t.framebufferTexture2D(36160,36096,3553,j,0);else if(S.depthTexture.format===Gi)t.framebufferTexture2D(36160,33306,3553,j,0);else throw new Error("Unknown depthTexture format")}function we(A){const S=i.get(A),Y=A.isWebGLCubeRenderTarget===!0;if(A.depthTexture){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");rt(S.__webglFramebuffer,A)}else if(Y){S.__webglDepthbuffer=[];for(let j=0;j<6;j++)t.bindFramebuffer(36160,S.__webglFramebuffer[j]),S.__webglDepthbuffer[j]=t.createRenderbuffer(),V(S.__webglDepthbuffer[j],A,!1)}else t.bindFramebuffer(36160,S.__webglFramebuffer),S.__webglDepthbuffer=t.createRenderbuffer(),V(S.__webglDepthbuffer,A,!1);t.bindFramebuffer(36160,null)}function De(A){const S=i.get(A),Y=i.get(A.texture);A.addEventListener("dispose",I),Y.__webglTexture=t.createTexture(),o.memory.textures++;const j=A.isWebGLCubeRenderTarget===!0,R=A.isWebGLMultisampleRenderTarget===!0,Z=g(A)||a;if(a&&A.texture.format===Rn&&(A.texture.type===yn||A.texture.type===Or)&&(A.texture.format=At,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),j){S.__webglFramebuffer=[];for(let re=0;re<6;re++)S.__webglFramebuffer[re]=t.createFramebuffer()}else if(S.__webglFramebuffer=t.createFramebuffer(),R)if(a){S.__webglMultisampledFramebuffer=t.createFramebuffer(),S.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,S.__webglColorRenderbuffer);const re=s.convert(A.texture.format),fe=s.convert(A.texture.type),Q=w(A.texture.internalFormat,re,fe),C=Ee(A);t.renderbufferStorageMultisample(36161,C,Q,A.width,A.height),t.bindFramebuffer(36160,S.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,S.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),A.depthBuffer&&(S.__webglDepthRenderbuffer=t.createRenderbuffer(),V(S.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(j){n.bindTexture(34067,Y.__webglTexture),ue(34067,A.texture,Z);for(let re=0;re<6;re++)ze(S.__webglFramebuffer[re],A,36064,34069+re);_(A.texture,Z)&&b(34067,A.texture,A.width,A.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Y.__webglTexture),ue(3553,A.texture,Z),ze(S.__webglFramebuffer,A,36064,3553),_(A.texture,Z)&&b(3553,A.texture,A.width,A.height),n.bindTexture(3553,null);A.depthBuffer&&we(A)}function be(A){const S=A.texture,Y=g(A)||a;if(_(S,Y)){const j=A.isWebGLCubeRenderTarget?34067:3553,R=i.get(S).__webglTexture;n.bindTexture(j,R),b(j,S,A.width,A.height),n.bindTexture(j,null)}}function Fe(A){if(A.isWebGLMultisampleRenderTarget)if(a){const S=i.get(A);t.bindFramebuffer(36008,S.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,S.__webglFramebuffer);const Y=A.width,j=A.height;let R=16384;A.depthBuffer&&(R|=256),A.stencilBuffer&&(R|=1024),t.blitFramebuffer(0,0,Y,j,0,0,Y,j,R,9728),t.bindFramebuffer(36160,S.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Ee(A){return a&&A.isWebGLMultisampleRenderTarget?Math.min(h,A.samples):0}function X(A){const S=o.render.frame;f.get(A)!==S&&(f.set(A,S),A.update())}let K=!1,ee=!1;function pe(A,S){A&&A.isWebGLRenderTarget&&(K===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),K=!0),A=A.texture),D(A,S)}function se(A,S){A&&A.isWebGLCubeRenderTarget&&(ee===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ee=!0),A=A.texture),q(A,S)}this.allocateTextureUnit=N,this.resetTextureUnits=B,this.setTexture2D=D,this.setTexture2DArray=F,this.setTexture3D=U,this.setTextureCube=q,this.setupRenderTarget=De,this.updateRenderTargetMipmap=be,this.updateMultisampleRenderTarget=Fe,this.safeSetTexture2D=pe,this.safeSetTextureCube=se}function Zu(t,e,n){const i=n.isWebGL2;function r(s){let o;if(s===Hi)return 5121;if(s===mh)return 32819;if(s===gh)return 32820;if(s===yh)return 33635;if(s===fh)return 5120;if(s===dh)return 5122;if(s===Ir)return 5123;if(s===ph)return 5124;if(s===Dr)return 5125;if(s===yn)return 5126;if(s===Or)return i?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===vh)return 6406;if(s===Rn)return 6407;if(s===At)return 6408;if(s===xh)return 6409;if(s===_h)return 6410;if(s===ri)return 6402;if(s===Gi)return 34041;if(s===wh)return 6403;if(s===Mh)return 36244;if(s===Sh)return 33319;if(s===Eh)return 33320;if(s===Th)return 36248;if(s===Ah)return 36249;if(s===Ua||s===Ha||s===ka||s===Ga)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Ua)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Ha)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===ka)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Ga)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Va||s===Wa||s===ja||s===qa)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Va)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Wa)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===ja)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===qa)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Ch)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===Xa||s===Ya)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===Xa)return o.COMPRESSED_RGB8_ETC2;if(s===Ya)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===Lh||s===Ph||s===Rh||s===Ih||s===Dh||s===Oh||s===Fh||s===Nh||s===Bh||s===zh||s===Uh||s===Hh||s===kh||s===Gh||s===Wh||s===jh||s===qh||s===Xh||s===Yh||s===Zh||s===Jh||s===$h||s===Kh||s===Qh||s===eu||s===tu||s===nu||s===iu)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===Vh)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===ki)return i?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}function ho(t=[]){et.call(this),this.cameras=t}ho.prototype=Object.assign(Object.create(et.prototype),{constructor:ho,isArrayCamera:!0});function Wn(){de.call(this),this.type="Group"}Wn.prototype=Object.assign(Object.create(de.prototype),{constructor:Wn,isGroup:!0});function ns(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(ns.prototype,{constructor:ns,getHandSpace:function(){return this._hand===null&&(this._hand=new Wn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new Wn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new Wn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,r=null,s=null;const o=this._targetRay,a=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(l&&t.hand){s=!0;for(const p of t.hand.values()){const v=e.getJointPose(p,n);if(l.joints[p.jointName]===void 0){const g=new Wn;g.matrixAutoUpdate=!1,g.visible=!1,l.joints[p.jointName]=g,l.add(g)}const y=l.joints[p.jointName];v!==null&&(y.matrix.fromArray(v.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=v.radius),y.visible=v!==null}const c=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],h=c.position.distanceTo(u.position),f=.02,d=.005;l.inputState.pinching&&h>f+d?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&h<=f-d&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else o!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale))),a!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return o!==null&&(o.visible=i!==null),a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),this}});function Ju(t,e){const n=this;let i=null,r=1,s=null,o="local-floor",a=null;const l=[],c=new Map,u=new et;u.layers.enable(1),u.viewport=new He;const h=new et;h.layers.enable(2),h.viewport=new He;const f=[u,h],d=new ho;d.layers.enable(1),d.layers.enable(2);let p=null,v=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(P){let O=l[P];return O===void 0&&(O=new ns,l[P]=O),O.getTargetRaySpace()},this.getControllerGrip=function(P){let O=l[P];return O===void 0&&(O=new ns,l[P]=O),O.getGripSpace()},this.getHand=function(P){let O=l[P];return O===void 0&&(O=new ns,l[P]=O),O.getHandSpace()};function y(P){const O=c.get(P.inputSource);O&&O.dispatchEvent({type:P.type,data:P.inputSource})}function g(){c.forEach(function(P,O){P.disconnect(O)}),c.clear(),p=null,v=null,t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),L.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(P){r=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(P){o=P,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return s},this.getSession=function(){return i},this.setSession=async function(P){if(i=P,i!==null){i.addEventListener("select",y),i.addEventListener("selectstart",y),i.addEventListener("selectend",y),i.addEventListener("squeeze",y),i.addEventListener("squeezestart",y),i.addEventListener("squeezeend",y),i.addEventListener("end",g),i.addEventListener("inputsourceschange",m);const O=e.getContextAttributes();O.xrCompatible!==!0&&await e.makeXRCompatible();const B={antialias:O.antialias,alpha:O.alpha,depth:O.depth,stencil:O.stencil,framebufferScaleFactor:r},N=new XRWebGLLayer(i,e,B);i.updateRenderState({baseLayer:N}),s=await i.requestReferenceSpace(o),L.setContext(i),L.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function m(P){const O=i.inputSources;for(let B=0;B<l.length;B++)c.set(O[B],l[B]);for(let B=0;B<P.removed.length;B++){const N=P.removed[B],D=c.get(N);D&&(D.dispatchEvent({type:"disconnected",data:N}),c.delete(N))}for(let B=0;B<P.added.length;B++){const N=P.added[B],D=c.get(N);D&&D.dispatchEvent({type:"connected",data:N})}}const _=new M,b=new M;function w(P,O,B){_.setFromMatrixPosition(O.matrixWorld),b.setFromMatrixPosition(B.matrixWorld);const N=_.distanceTo(b),D=O.projectionMatrix.elements,F=B.projectionMatrix.elements,U=D[14]/(D[10]-1),q=D[14]/(D[10]+1),$=(D[9]+1)/D[5],ie=(D[9]-1)/D[5],ue=(D[8]-1)/D[0],ce=(F[8]+1)/F[0],Me=U*ue,Se=U*ce,ze=N/(-ue+ce),V=ze*-ue;O.matrixWorld.decompose(P.position,P.quaternion,P.scale),P.translateX(V),P.translateZ(ze),P.matrixWorld.compose(P.position,P.quaternion,P.scale),P.matrixWorldInverse.copy(P.matrixWorld).invert();const rt=U+ze,we=q+ze,De=Me-V,be=Se+(N-V),Fe=$*q/we*rt,Ee=ie*q/we*rt;P.projectionMatrix.makePerspective(De,be,Fe,Ee,rt,we)}function x(P,O){O===null?P.matrixWorld.copy(P.matrix):P.matrixWorld.multiplyMatrices(O.matrixWorld,P.matrix),P.matrixWorldInverse.copy(P.matrixWorld).invert()}this.getCamera=function(P){d.near=h.near=u.near=P.near,d.far=h.far=u.far=P.far,(p!==d.near||v!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),p=d.near,v=d.far);const O=P.parent,B=d.cameras;x(d,O);for(let D=0;D<B.length;D++)x(B[D],O);P.matrixWorld.copy(d.matrixWorld),P.matrix.copy(d.matrix),P.matrix.decompose(P.position,P.quaternion,P.scale);const N=P.children;for(let D=0,F=N.length;D<F;D++)N[D].updateMatrixWorld(!0);return B.length===2?w(d,u,h):d.projectionMatrix.copy(u.projectionMatrix),d};let T=null;function I(P,O){if(a=O.getViewerPose(s),a!==null){const N=a.views,D=i.renderState.baseLayer;t.setFramebuffer(D.framebuffer);let F=!1;N.length!==d.cameras.length&&(d.cameras.length=0,F=!0);for(let U=0;U<N.length;U++){const q=N[U],$=D.getViewport(q),ie=f[U];ie.matrix.fromArray(q.transform.matrix),ie.projectionMatrix.fromArray(q.projectionMatrix),ie.viewport.set($.x,$.y,$.width,$.height),U===0&&d.matrix.copy(ie.matrix),F===!0&&d.cameras.push(ie)}}const B=i.inputSources;for(let N=0;N<l.length;N++){const D=l[N],F=B[N];D.update(F,O,s)}T&&T(P,O)}const L=new Tu;L.setAnimationLoop(I),this.setAnimationLoop=function(P){T=P},this.dispose=function(){}}Object.assign(Ju.prototype,Vt.prototype);function Ev(t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,_,b){m.isMeshBasicMaterial?i(g,m):m.isMeshLambertMaterial?(i(g,m),l(g,m)):m.isMeshToonMaterial?(i(g,m),u(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),m.isMeshPhysicalMaterial?f(g,m):h(g,m)):m.isMeshMatcapMaterial?(i(g,m),d(g,m)):m.isMeshDepthMaterial?(i(g,m),p(g,m)):m.isMeshDistanceMaterial?(i(g,m),v(g,m)):m.isMeshNormalMaterial?(i(g,m),y(g,m)):m.isLineBasicMaterial?(r(g,m),m.isLineDashedMaterial&&s(g,m)):m.isPointsMaterial?o(g,m,_,b):m.isSpriteMaterial?a(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.specularMap&&(g.specularMap.value=m.specularMap);const _=t.get(m).envMap;if(_){g.envMap.value=_,g.flipEnvMap.value=_.isCubeTexture&&_._needsFlipEnvMap?-1:1,g.reflectivity.value=m.reflectivity,g.refractionRatio.value=m.refractionRatio;const x=t.get(_).__maxMipLevel;x!==void 0&&(g.maxMipLevel.value=x)}m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let b;m.map?b=m.map:m.specularMap?b=m.specularMap:m.displacementMap?b=m.displacementMap:m.normalMap?b=m.normalMap:m.bumpMap?b=m.bumpMap:m.roughnessMap?b=m.roughnessMap:m.metalnessMap?b=m.metalnessMap:m.alphaMap?b=m.alphaMap:m.emissiveMap?b=m.emissiveMap:m.clearcoatMap?b=m.clearcoatMap:m.clearcoatNormalMap?b=m.clearcoatNormalMap:m.clearcoatRoughnessMap&&(b=m.clearcoatRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),g.uvTransform.value.copy(b.matrix));let w;m.aoMap?w=m.aoMap:m.lightMap&&(w=m.lightMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),g.uv2Transform.value.copy(w.matrix))}function r(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function s(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function o(g,m,_,b){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*_,g.scale.value=b*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let w;m.map?w=m.map:m.alphaMap&&(w=m.alphaMap),w!==void 0&&(w.matrixAutoUpdate===!0&&w.updateMatrix(),g.uvTransform.value.copy(w.matrix))}function a(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let _;m.map?_=m.map:m.alphaMap&&(_=m.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),g.uvTransform.value.copy(_.matrix))}function l(g,m){m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap)}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Qe&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Qe&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Qe&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Qe&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Qe&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Qe&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m){h(g,m),g.reflectivity.value=m.reflectivity,g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.sheen&&g.sheen.value.copy(m.sheen),m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===Qe&&g.clearcoatNormalScale.value.negate()),g.transmission.value=m.transmission,m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap)}function d(g,m){m.matcap&&(g.matcap.value=m.matcap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Qe&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Qe&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function p(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function v(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}function y(g,m){m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===Qe&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===Qe&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function Tv(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}function is(t){t=t||{};const e=t.canvas!==void 0?t.canvas:Tv(),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,r=t.depth!==void 0?t.depth:!0,s=t.stencil!==void 0?t.stencil:!0,o=t.antialias!==void 0?t.antialias:!1,a=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",u=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let h=null,f=null;const d=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=_t,this.physicallyCorrectLights=!1,this.toneMapping=ii,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const p=this;let v=!1,y=null,g=0,m=0,_=null,b=null,w=-1,x=null;const T=new He,I=new He;let L=null,P=e.width,O=e.height,B=1,N=null,D=null;const F=new He(0,0,P,O),U=new He(0,0,P,O);let q=!1;const $=new Kr;let ie=!1,ue=!1;const ce=new Ae,Me=new M,Se={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ze(){return _===null?B:1}let V=n;function rt(E,H){for(let z=0;z<E.length;z++){const k=E[z],oe=e.getContext(k,H);if(oe!==null)return oe}return null}try{const E={alpha:i,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",Ne,!1),e.addEventListener("webglcontextrestored",st,!1),V===null){const H=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&H.shift(),V=rt(H,E),V===null)throw rt(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(E){throw console.error("THREE.WebGLRenderer: "+E.message),E}let we,De,be,Fe,Ee,X,K,ee,pe,se,A,S,Y,j,R,Z,re,fe,Q,C,J;function he(){we=new ry(V),De=new ty(V,we,t),we.init(De),C=new Zu(V,we,De),be=new Mv(V,we,De),be.scissor(I.copy(U).multiplyScalar(B).floor()),be.viewport(T.copy(F).multiplyScalar(B).floor()),Fe=new ay,Ee=new uv,X=new Sv(V,we,be,Ee,De,C,Fe),K=new iy(p),ee=new Pp(V,De),J=new Qg(V,we,ee,De),pe=new sy(V,ee,Fe,J),se=new uy(V,pe,ee,Fe),re=new hy(V),R=new ny(Ee),A=new hv(p,K,we,De,J,R),S=new Ev(Ee),Y=new pv(Ee),j=new _v(we,De),Z=new Kg(p,K,be,se,a),fe=new ey(V,we,Fe,De),Q=new oy(V,we,Fe,De),Fe.programs=A.programs,p.capabilities=De,p.extensions=we,p.properties=Ee,p.renderLists=Y,p.state=be,p.info=Fe}he();const te=new Ju(p,V);this.xr=te;const ge=new Yu(p,se,De.maxTextureSize);this.shadowMap=ge,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const E=we.get("WEBGL_lose_context");E&&E.loseContext()},this.forceContextRestore=function(){const E=we.get("WEBGL_lose_context");E&&E.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(E){E!==void 0&&(B=E,this.setSize(P,O,!1))},this.getSize=function(E){return E===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),E=new G),E.set(P,O)},this.setSize=function(E,H,z){if(te.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}P=E,O=H,e.width=Math.floor(E*B),e.height=Math.floor(H*B),z!==!1&&(e.style.width=E+"px",e.style.height=H+"px"),this.setViewport(0,0,E,H)},this.getDrawingBufferSize=function(E){return E===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),E=new G),E.set(P*B,O*B).floor()},this.setDrawingBufferSize=function(E,H,z){P=E,O=H,B=z,e.width=Math.floor(E*z),e.height=Math.floor(H*z),this.setViewport(0,0,E,H)},this.getCurrentViewport=function(E){return E===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),E=new He),E.copy(T)},this.getViewport=function(E){return E.copy(F)},this.setViewport=function(E,H,z,k){E.isVector4?F.set(E.x,E.y,E.z,E.w):F.set(E,H,z,k),be.viewport(T.copy(F).multiplyScalar(B).floor())},this.getScissor=function(E){return E.copy(U)},this.setScissor=function(E,H,z,k){E.isVector4?U.set(E.x,E.y,E.z,E.w):U.set(E,H,z,k),be.scissor(I.copy(U).multiplyScalar(B).floor())},this.getScissorTest=function(){return q},this.setScissorTest=function(E){be.setScissorTest(q=E)},this.setOpaqueSort=function(E){N=E},this.setTransparentSort=function(E){D=E},this.getClearColor=function(E){return E===void 0&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),E=new ae),E.copy(Z.getClearColor())},this.setClearColor=function(){Z.setClearColor.apply(Z,arguments)},this.getClearAlpha=function(){return Z.getClearAlpha()},this.setClearAlpha=function(){Z.setClearAlpha.apply(Z,arguments)},this.clear=function(E,H,z){let k=0;(E===void 0||E)&&(k|=16384),(H===void 0||H)&&(k|=256),(z===void 0||z)&&(k|=1024),V.clear(k)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ne,!1),e.removeEventListener("webglcontextrestored",st,!1),Y.dispose(),j.dispose(),Ee.dispose(),K.dispose(),se.dispose(),J.dispose(),te.dispose(),Is.stop()};function Ne(E){E.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function st(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1,he()}function Rs(E){const H=E.target;H.removeEventListener("dispose",Rs),rn(H)}function rn(E){Gt(E),Ee.remove(E)}function Gt(E){const H=Ee.get(E).program;H!==void 0&&A.releaseProgram(H)}function z_(E,H){E.render(function(z){p.renderBufferImmediate(z,H)})}this.renderBufferImmediate=function(E,H){J.initAttributes();const z=Ee.get(E);E.hasPositions&&!z.position&&(z.position=V.createBuffer()),E.hasNormals&&!z.normal&&(z.normal=V.createBuffer()),E.hasUvs&&!z.uv&&(z.uv=V.createBuffer()),E.hasColors&&!z.color&&(z.color=V.createBuffer());const k=H.getAttributes();E.hasPositions&&(V.bindBuffer(34962,z.position),V.bufferData(34962,E.positionArray,35048),J.enableAttribute(k.position),V.vertexAttribPointer(k.position,3,5126,!1,0,0)),E.hasNormals&&(V.bindBuffer(34962,z.normal),V.bufferData(34962,E.normalArray,35048),J.enableAttribute(k.normal),V.vertexAttribPointer(k.normal,3,5126,!1,0,0)),E.hasUvs&&(V.bindBuffer(34962,z.uv),V.bufferData(34962,E.uvArray,35048),J.enableAttribute(k.uv),V.vertexAttribPointer(k.uv,2,5126,!1,0,0)),E.hasColors&&(V.bindBuffer(34962,z.color),V.bufferData(34962,E.colorArray,35048),J.enableAttribute(k.color),V.vertexAttribPointer(k.color,3,5126,!1,0,0)),J.disableUnusedAttributes(),V.drawArrays(4,0,E.count),E.count=0},this.renderBufferDirect=function(E,H,z,k,oe,Re){H===null&&(H=Se);const Ce=oe.isMesh&&oe.matrixWorld.determinant()<0,Ie=Id(E,H,k,oe);be.setMaterial(k,Ce);let Le=z.index;const tt=z.attributes.position;if(Le===null){if(tt===void 0||tt.count===0)return}else if(Le.count===0)return;let $e=1;k.wireframe===!0&&(Le=pe.getWireframeAttribute(z),$e=2),(k.morphTargets||k.morphNormals)&&re.update(oe,z,k,Ie),J.setup(oe,k,Ie,z,Le);let Te,ke=fe;Le!==null&&(Te=ee.get(Le),ke=Q,ke.setIndex(Te));const Pn=Le!==null?Le.count:tt.count,Xe=z.drawRange.start*$e,Oi=z.drawRange.count*$e,ht=Re!==null?Re.start*$e:0,Oc=Re!==null?Re.count*$e:1/0,Tt=Math.max(Xe,ht),Ds=Math.min(Pn,Xe+Oi,ht+Oc)-1,Sr=Math.max(0,Ds-Tt+1);if(Sr!==0){if(oe.isMesh)k.wireframe===!0?(be.setLineWidth(k.wireframeLinewidth*ze()),ke.setMode(1)):ke.setMode(4);else if(oe.isLine){let Os=k.linewidth;Os===void 0&&(Os=1),be.setLineWidth(Os*ze()),oe.isLineSegments?ke.setMode(1):oe.isLineLoop?ke.setMode(2):ke.setMode(3)}else oe.isPoints?ke.setMode(0):oe.isSprite&&ke.setMode(4);if(oe.isInstancedMesh)ke.renderInstances(Tt,Sr,oe.count);else if(z.isInstancedBufferGeometry){const Os=Math.min(z.instanceCount,z._maxInstanceCount);ke.renderInstances(Tt,Sr,Os)}else ke.render(Tt,Sr)}},this.compile=function(E,H){f=j.get(E),f.init(),E.traverseVisible(function(k){k.isLight&&k.layers.test(H.layers)&&(f.pushLight(k),k.castShadow&&f.pushShadow(k))}),f.setupLights();const z=new WeakMap;E.traverse(function(k){const oe=k.material;if(oe)if(Array.isArray(oe))for(let Re=0;Re<oe.length;Re++){const Ce=oe[Re];z.has(Ce)===!1&&(Ln(Ce,E,k),z.set(Ce))}else z.has(oe)===!1&&(Ln(oe,E,k),z.set(oe))})};let Dc=null;function U_(E){te.isPresenting||Dc&&Dc(E)}const Is=new Tu;Is.setAnimationLoop(U_),typeof window<"u"&&Is.setContext(window),this.setAnimationLoop=function(E){Dc=E,te.setAnimationLoop(E),E===null?Is.stop():Is.start()},this.render=function(E,H){let z,k;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),z=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),k=arguments[3]),H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;J.resetDefaultState(),w=-1,x=null,E.autoUpdate===!0&&E.updateMatrixWorld(),H.parent===null&&H.updateMatrixWorld(),te.enabled===!0&&te.isPresenting===!0&&(H=te.getCamera(H)),E.isScene===!0&&E.onBeforeRender(p,E,H,z||_),f=j.get(E,d.length),f.init(),d.push(f),ce.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),$.setFromProjectionMatrix(ce),ue=this.localClippingEnabled,ie=R.init(this.clippingPlanes,ue,H),h=Y.get(E,H),h.init(),Ld(E,H,0,p.sortObjects),h.finish(),p.sortObjects===!0&&h.sort(N,D),ie===!0&&R.beginShadows();const oe=f.state.shadowsArray;ge.render(oe,E,H),f.setupLights(),f.setupLightsView(H),ie===!0&&R.endShadows(),this.info.autoReset===!0&&this.info.reset(),z!==void 0&&this.setRenderTarget(z),Z.render(h,E,H,k);const Re=h.opaque,Ce=h.transparent;Re.length>0&&Pd(Re,E,H),Ce.length>0&&Pd(Ce,E,H),E.isScene===!0&&E.onAfterRender(p,E,H),_!==null&&(X.updateRenderTargetMipmap(_),X.updateMultisampleRenderTarget(_)),be.buffers.depth.setTest(!0),be.buffers.depth.setMask(!0),be.buffers.color.setMask(!0),be.setPolygonOffset(!1),d.pop(),d.length>0?f=d[d.length-1]:f=null,h=null};function Ld(E,H,z,k){if(E.visible===!1)return;if(E.layers.test(H.layers)){if(E.isGroup)z=E.renderOrder;else if(E.isLOD)E.autoUpdate===!0&&E.update(H);else if(E.isLight)f.pushLight(E),E.castShadow&&f.pushShadow(E);else if(E.isSprite){if(!E.frustumCulled||$.intersectsSprite(E)){k&&Me.setFromMatrixPosition(E.matrixWorld).applyMatrix4(ce);const Ce=se.update(E),Ie=E.material;Ie.visible&&h.push(E,Ce,Ie,z,Me.z,null)}}else if(E.isImmediateRenderObject)k&&Me.setFromMatrixPosition(E.matrixWorld).applyMatrix4(ce),h.push(E,null,E.material,z,Me.z,null);else if((E.isMesh||E.isLine||E.isPoints)&&(E.isSkinnedMesh&&E.skeleton.frame!==Fe.render.frame&&(E.skeleton.update(),E.skeleton.frame=Fe.render.frame),!E.frustumCulled||$.intersectsObject(E))){k&&Me.setFromMatrixPosition(E.matrixWorld).applyMatrix4(ce);const Ce=se.update(E),Ie=E.material;if(Array.isArray(Ie)){const Le=Ce.groups;for(let tt=0,$e=Le.length;tt<$e;tt++){const Te=Le[tt],ke=Ie[Te.materialIndex];ke&&ke.visible&&h.push(E,Ce,ke,z,Me.z,Te)}}else Ie.visible&&h.push(E,Ce,Ie,z,Me.z,null)}}const Re=E.children;for(let Ce=0,Ie=Re.length;Ce<Ie;Ce++)Ld(Re[Ce],H,z,k)}function Pd(E,H,z){const k=H.isScene===!0?H.overrideMaterial:null;for(let oe=0,Re=E.length;oe<Re;oe++){const Ce=E[oe],Ie=Ce.object,Le=Ce.geometry,tt=k===null?Ce.material:k,$e=Ce.group;if(z.isArrayCamera){const Te=z.cameras;for(let ke=0,Pn=Te.length;ke<Pn;ke++){const Xe=Te[ke];Ie.layers.test(Xe.layers)&&(be.viewport(T.copy(Xe.viewport)),f.setupLightsView(Xe),Rd(Ie,H,Xe,Le,tt,$e))}}else Rd(Ie,H,z,Le,tt,$e)}}function Rd(E,H,z,k,oe,Re){if(E.onBeforeRender(p,H,z,k,oe,Re),E.modelViewMatrix.multiplyMatrices(z.matrixWorldInverse,E.matrixWorld),E.normalMatrix.getNormalMatrix(E.modelViewMatrix),E.isImmediateRenderObject){const Ce=Id(z,H,oe,E);be.setMaterial(oe),J.reset(),z_(E,Ce)}else p.renderBufferDirect(z,H,k,oe,E,Re);E.onAfterRender(p,H,z,k,oe,Re)}function Ln(E,H,z){H.isScene!==!0&&(H=Se);const k=Ee.get(E),oe=f.state.lights,Re=f.state.shadowsArray,Ce=oe.state.version,Ie=A.getParameters(E,oe.state,Re,H,z),Le=A.getProgramCacheKey(Ie);let tt=k.program,$e=!0;if(k.environment=E.isMeshStandardMaterial?H.environment:null,k.fog=H.fog,k.envMap=K.get(E.envMap||k.environment),tt===void 0)E.addEventListener("dispose",Rs);else if(tt.cacheKey!==Le)Gt(E);else if(k.lightsStateVersion!==Ce)$e=!1;else{if(Ie.shaderID!==void 0)return;$e=!1}$e&&(Ie.uniforms=A.getUniforms(E),E.onBeforeCompile(Ie,p),tt=A.acquireProgram(Ie,Le),k.program=tt,k.uniforms=Ie.uniforms,k.outputEncoding=Ie.outputEncoding);const Te=k.uniforms;(!E.isShaderMaterial&&!E.isRawShaderMaterial||E.clipping===!0)&&(k.numClippingPlanes=R.numPlanes,k.numIntersection=R.numIntersection,Te.clippingPlanes=R.uniform),k.needsLights=k_(E),k.lightsStateVersion=Ce,k.needsLights&&(Te.ambientLightColor.value=oe.state.ambient,Te.lightProbe.value=oe.state.probe,Te.directionalLights.value=oe.state.directional,Te.directionalLightShadows.value=oe.state.directionalShadow,Te.spotLights.value=oe.state.spot,Te.spotLightShadows.value=oe.state.spotShadow,Te.rectAreaLights.value=oe.state.rectArea,Te.ltc_1.value=oe.state.rectAreaLTC1,Te.ltc_2.value=oe.state.rectAreaLTC2,Te.pointLights.value=oe.state.point,Te.pointLightShadows.value=oe.state.pointShadow,Te.hemisphereLights.value=oe.state.hemi,Te.directionalShadowMap.value=oe.state.directionalShadowMap,Te.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,Te.spotShadowMap.value=oe.state.spotShadowMap,Te.spotShadowMatrix.value=oe.state.spotShadowMatrix,Te.pointShadowMap.value=oe.state.pointShadowMap,Te.pointShadowMatrix.value=oe.state.pointShadowMatrix);const ke=k.program.getUniforms(),Pn=kn.seqWithValue(ke.seq,Te);k.uniformsList=Pn}function Id(E,H,z,k){H.isScene!==!0&&(H=Se),X.resetTextureUnits();const oe=H.fog,Re=z.isMeshStandardMaterial?H.environment:null,Ce=_===null?p.outputEncoding:_.texture.encoding,Ie=K.get(z.envMap||Re),Le=Ee.get(z),tt=f.state.lights;if(ie===!0&&(ue===!0||E!==x)){const ht=E===x&&z.id===w;R.setState(z,E,ht)}z.version===Le.__version?(z.fog&&Le.fog!==oe||Le.environment!==Re||Le.needsLights&&Le.lightsStateVersion!==tt.state.version||Le.numClippingPlanes!==void 0&&(Le.numClippingPlanes!==R.numPlanes||Le.numIntersection!==R.numIntersection)||Le.outputEncoding!==Ce||Le.envMap!==Ie)&&Ln(z,H,k):(Ln(z,H,k),Le.__version=z.version);let $e=!1,Te=!1,ke=!1;const Pn=Le.program,Xe=Pn.getUniforms(),Oi=Le.uniforms;if(be.useProgram(Pn.program)&&($e=!0,Te=!0,ke=!0),z.id!==w&&(w=z.id,Te=!0),$e||x!==E){if(Xe.setValue(V,"projectionMatrix",E.projectionMatrix),De.logarithmicDepthBuffer&&Xe.setValue(V,"logDepthBufFC",2/(Math.log(E.far+1)/Math.LN2)),x!==E&&(x=E,Te=!0,ke=!0),z.isShaderMaterial||z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshStandardMaterial||z.envMap){const ht=Xe.map.cameraPosition;ht!==void 0&&ht.setValue(V,Me.setFromMatrixPosition(E.matrixWorld))}(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial)&&Xe.setValue(V,"isOrthographic",E.isOrthographicCamera===!0),(z.isMeshPhongMaterial||z.isMeshToonMaterial||z.isMeshLambertMaterial||z.isMeshBasicMaterial||z.isMeshStandardMaterial||z.isShaderMaterial||z.isShadowMaterial||z.skinning)&&Xe.setValue(V,"viewMatrix",E.matrixWorldInverse)}if(z.skinning){Xe.setOptional(V,k,"bindMatrix"),Xe.setOptional(V,k,"bindMatrixInverse");const ht=k.skeleton;if(ht){const Oc=ht.bones;if(De.floatVertexTextures){if(ht.boneTexture===null){let Tt=Math.sqrt(Oc.length*4);Tt=_e.ceilPowerOfTwo(Tt),Tt=Math.max(Tt,4);const Ds=new Float32Array(Tt*Tt*4);Ds.set(ht.boneMatrices);const Sr=new Sn(Ds,Tt,Tt,At,yn);ht.boneMatrices=Ds,ht.boneTexture=Sr,ht.boneTextureSize=Tt}Xe.setValue(V,"boneTexture",ht.boneTexture,X),Xe.setValue(V,"boneTextureSize",ht.boneTextureSize)}else Xe.setOptional(V,ht,"boneMatrices")}}return(Te||Le.receiveShadow!==k.receiveShadow)&&(Le.receiveShadow=k.receiveShadow,Xe.setValue(V,"receiveShadow",k.receiveShadow)),Te&&(Xe.setValue(V,"toneMappingExposure",p.toneMappingExposure),Le.needsLights&&H_(Oi,ke),oe&&z.fog&&S.refreshFogUniforms(Oi,oe),S.refreshMaterialUniforms(Oi,z,B,O),kn.upload(V,Le.uniformsList,Oi,X)),z.isShaderMaterial&&z.uniformsNeedUpdate===!0&&(kn.upload(V,Le.uniformsList,Oi,X),z.uniformsNeedUpdate=!1),z.isSpriteMaterial&&Xe.setValue(V,"center",k.center),Xe.setValue(V,"modelViewMatrix",k.modelViewMatrix),Xe.setValue(V,"normalMatrix",k.normalMatrix),Xe.setValue(V,"modelMatrix",k.matrixWorld),Pn}function H_(E,H){E.ambientLightColor.needsUpdate=H,E.lightProbe.needsUpdate=H,E.directionalLights.needsUpdate=H,E.directionalLightShadows.needsUpdate=H,E.pointLights.needsUpdate=H,E.pointLightShadows.needsUpdate=H,E.spotLights.needsUpdate=H,E.spotLightShadows.needsUpdate=H,E.rectAreaLights.needsUpdate=H,E.hemisphereLights.needsUpdate=H}function k_(E){return E.isMeshLambertMaterial||E.isMeshToonMaterial||E.isMeshPhongMaterial||E.isMeshStandardMaterial||E.isShadowMaterial||E.isShaderMaterial&&E.lights===!0}this.setFramebuffer=function(E){y!==E&&_===null&&V.bindFramebuffer(36160,E),y=E},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return m},this.getRenderList=function(){return h},this.setRenderList=function(E){h=E},this.getRenderTarget=function(){return _},this.setRenderTarget=function(E,H=0,z=0){_=E,g=H,m=z,E&&Ee.get(E).__webglFramebuffer===void 0&&X.setupRenderTarget(E);let k=y,oe=!1;if(E){const Re=Ee.get(E).__webglFramebuffer;E.isWebGLCubeRenderTarget?(k=Re[H],oe=!0):E.isWebGLMultisampleRenderTarget?k=Ee.get(E).__webglMultisampledFramebuffer:k=Re,T.copy(E.viewport),I.copy(E.scissor),L=E.scissorTest}else T.copy(F).multiplyScalar(B).floor(),I.copy(U).multiplyScalar(B).floor(),L=q;if(b!==k&&(V.bindFramebuffer(36160,k),b=k),be.viewport(T),be.scissor(I),be.setScissorTest(L),oe){const Re=Ee.get(E.texture);V.framebufferTexture2D(36160,36064,34069+H,Re.__webglTexture,z)}},this.readRenderTargetPixels=function(E,H,z,k,oe,Re,Ce){if(!(E&&E.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ie=Ee.get(E).__webglFramebuffer;if(E.isWebGLCubeRenderTarget&&Ce!==void 0&&(Ie=Ie[Ce]),Ie){let Le=!1;Ie!==b&&(V.bindFramebuffer(36160,Ie),Le=!0);try{const tt=E.texture,$e=tt.format,Te=tt.type;if($e!==At&&C.convert($e)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ke=Te===Or&&(we.has("EXT_color_buffer_half_float")||De.isWebGL2&&we.has("EXT_color_buffer_float"));if(Te!==Hi&&C.convert(Te)!==V.getParameter(35738)&&!(Te===yn&&(De.isWebGL2||we.has("OES_texture_float")||we.has("WEBGL_color_buffer_float")))&&!ke){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}V.checkFramebufferStatus(36160)===36053?H>=0&&H<=E.width-k&&z>=0&&z<=E.height-oe&&V.readPixels(H,z,k,oe,C.convert($e),C.convert(Te),Re):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Le&&V.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(E,H,z=0){const k=Math.pow(2,-z),oe=Math.floor(H.image.width*k),Re=Math.floor(H.image.height*k),Ce=C.convert(H.format);X.setTexture2D(H,0),V.copyTexImage2D(3553,z,Ce,E.x,E.y,oe,Re,0),be.unbindTexture()},this.copyTextureToTexture=function(E,H,z,k=0){const oe=H.image.width,Re=H.image.height,Ce=C.convert(z.format),Ie=C.convert(z.type);X.setTexture2D(z,0),V.pixelStorei(37440,z.flipY),V.pixelStorei(37441,z.premultiplyAlpha),V.pixelStorei(3317,z.unpackAlignment),H.isDataTexture?V.texSubImage2D(3553,k,E.x,E.y,oe,Re,Ce,Ie,H.image.data):H.isCompressedTexture?V.compressedTexSubImage2D(3553,k,E.x,E.y,H.mipmaps[0].width,H.mipmaps[0].height,Ce,H.mipmaps[0].data):V.texSubImage2D(3553,k,E.x,E.y,Ce,Ie,H.image),k===0&&z.generateMipmaps&&V.generateMipmap(3553),be.unbindTexture()},this.initTexture=function(E){X.setTexture2D(E,0),be.unbindTexture()},this.resetState=function(){be.reset(),J.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Tl(t){is.call(this,t)}Tl.prototype=Object.assign(Object.create(is.prototype),{constructor:Tl,isWebGL1Renderer:!0});class uo{constructor(e,n){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new ae(e),this.density=n!==void 0?n:25e-5}clone(){return new uo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class fo{constructor(e,n,i){Object.defineProperty(this,"isFog",{value:!0}),this.name="",this.color=new ae(e),this.near=n!==void 0?n:1,this.far=i!==void 0?i:1e3}clone(){return new fo(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class Al extends de{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.background!==null&&(n.object.background=this.background.toJSON(e)),this.environment!==null&&(n.object.environment=this.environment.toJSON(e)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}function Dt(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Ur,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=_e.generateUUID()}Object.defineProperty(Dt.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}}),Object.assign(Dt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,r=this.stride;i<r;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_e.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new Dt(e,this.stride);return n.setUsage(this.usage),n},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=_e.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const gi=new M;function jn(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(jn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(jn.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)gi.x=this.getX(e),gi.y=this.getY(e),gi.z=this.getZ(e),gi.applyMatrix4(t),this.setXYZ(e,gi.x,gi.y,gi.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=r,this},clone:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return new xe(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new jn(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)e.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function qn(t){ve.call(this),this.type="SpriteMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}qn.prototype=Object.create(ve.prototype),qn.prototype.constructor=qn,qn.prototype.isSpriteMaterial=!0,qn.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};let lr;const rs=new M,cr=new M,hr=new M,ur=new G,ss=new G,$u=new Ae,po=new M,os=new M,mo=new M,Ku=new G,Cl=new G,Qu=new G;function as(t){if(de.call(this),this.type="Sprite",lr===void 0){lr=new ye;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Dt(e,5);lr.setIndex([0,1,2,0,2,3]),lr.setAttribute("position",new jn(n,3,0,!1)),lr.setAttribute("uv",new jn(n,2,3,!1))}this.geometry=lr,this.material=t!==void 0?t:new qn,this.center=new G(.5,.5)}as.prototype=Object.assign(Object.create(de.prototype),{constructor:as,isSprite:!0,raycast:function(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),cr.setFromMatrixScale(this.matrixWorld),$u.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),hr.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&cr.multiplyScalar(-hr.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const s=this.center;go(po.set(-.5,-.5,0),hr,s,cr,i,r),go(os.set(.5,-.5,0),hr,s,cr,i,r),go(mo.set(.5,.5,0),hr,s,cr,i,r),Ku.set(0,0),Cl.set(1,0),Qu.set(1,1);let o=t.ray.intersectTriangle(po,os,mo,!1,rs);if(o===null&&(go(os.set(-.5,.5,0),hr,s,cr,i,r),Cl.set(0,1),o=t.ray.intersectTriangle(po,mo,os,!1,rs),o===null))return;const a=t.ray.origin.distanceTo(rs);a<t.near||a>t.far||e.push({distance:a,point:rs.clone(),uv:dt.getUV(rs,po,os,mo,Ku,Cl,Qu,new G),face:null,object:this})},copy:function(t){return de.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}});function go(t,e,n,i,r,s){ur.subVectors(t,n).addScalar(.5).multiply(i),r!==void 0?(ss.x=s*ur.x-r*ur.y,ss.y=r*ur.x+s*ur.y):ss.copy(ur),t.copy(e),t.x+=ss.x,t.y+=ss.y,t.applyMatrix4($u)}const yo=new M,ef=new M;function ls(){de.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}ls.prototype=Object.assign(Object.create(de.prototype),{constructor:ls,isLOD:!0,copy:function(t){de.prototype.copy.call(this,t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const r=e[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){yo.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(yo);this.getObjectForDistance(i).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){yo.setFromMatrixPosition(t.matrixWorld),ef.setFromMatrixPosition(this.matrixWorld);const n=yo.distanceTo(ef)/t.zoom;e[0].object.visible=!0;let i,r;for(i=1,r=e.length;i<r&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)e[i].object.visible=!1}},toJSON:function(t){const e=de.prototype.toJSON.call(this,t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const s=n[i];e.object.levels.push({object:s.object.uuid,distance:s.distance})}return e}});const tf=new M,nf=new He,rf=new He,Av=new M,sf=new Ae;function cs(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Ve.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ae,this.bindMatrixInverse=new Ae}cs.prototype=Object.assign(Object.create(Ve.prototype),{constructor:cs,isSkinnedMesh:!0,copy:function(t){return Ve.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new He,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){Ve.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,i=this.geometry;nf.fromBufferAttribute(i.attributes.skinIndex,t),rf.fromBufferAttribute(i.attributes.skinWeight,t),tf.fromBufferAttribute(i.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let r=0;r<4;r++){const s=rf.getComponent(r);if(s!==0){const o=nf.getComponent(r);sf.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),e.addScaledVector(Av.copy(tf).applyMatrix4(sf),s)}}return e.applyMatrix4(this.bindMatrixInverse)}});function hs(){de.call(this),this.type="Bone"}hs.prototype=Object.assign(Object.create(de.prototype),{constructor:hs,isBone:!0});const of=new Ae,Cv=new Ae;function us(t=[],e=[]){this.uuid=_e.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(us.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ae)}},calculateInverses:function(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Ae;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,s=t.length;r<s;r++){const o=t[r]?t[r].matrixWorld:Cv;of.multiplyMatrices(o,e[r]),of.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new us(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const r=t.bones[n];let s=e[r];s===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),s=new hs),this.bones.push(s),this.boneInverses.push(new Ae().fromArray(t.boneInverses[n]))}return this.init(),this},toJSON:function(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,r=e.length;i<r;i++){const s=e[i];t.bones.push(s.uuid);const o=n[i];t.boneInverses.push(o.toArray())}return t}});const af=new Ae,lf=new Ae,vo=[],fs=new Ve;function xo(t,e,n){Ve.call(this,t,e),this.instanceMatrix=new xe(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}xo.prototype=Object.assign(Object.create(Ve.prototype),{constructor:xo,isInstancedMesh:!0,copy:function(t){return Ve.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,t*3)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,t*16)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(fs.geometry=this.geometry,fs.material=this.material,fs.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,af),lf.multiplyMatrices(n,af),fs.matrixWorld=lf,fs.raycast(t,vo);for(let s=0,o=vo.length;s<o;s++){const a=vo[s];a.instanceId=r,a.object=this,e.push(a)}vo.length=0}},setColorAt:function(t,e){this.instanceColor===null&&(this.instanceColor=new xe(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,t*3)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,t*16)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}});function qe(t){ve.call(this),this.type="LineBasicMaterial",this.color=new ae(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}qe.prototype=Object.create(ve.prototype),qe.prototype.constructor=qe,qe.prototype.isLineBasicMaterial=!0,qe.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const cf=new M,hf=new M,uf=new Ae,Ll=new Xi,_o=new Fn;function zt(t=new ye,e=new qe){de.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}zt.prototype=Object.assign(Object.create(de.prototype),{constructor:zt,isLine:!0,copy:function(t){return de.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,r=e.count;i<r;i++)cf.fromBufferAttribute(e,i-1),hf.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=cf.distanceTo(hf);t.setAttribute("lineDistance",new le(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),_o.copy(n.boundingSphere),_o.applyMatrix4(i),_o.radius+=r,t.ray.intersectsSphere(_o)===!1)return;uf.copy(i).invert(),Ll.copy(t.ray).applyMatrix4(uf);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,a=new M,l=new M,c=new M,u=new M,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,p=n.attributes.position;if(f!==null){const v=f.array;for(let y=0,g=v.length-1;y<g;y+=h){const m=v[y],_=v[y+1];if(a.fromBufferAttribute(p,m),l.fromBufferAttribute(p,_),Ll.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const w=t.ray.origin.distanceTo(u);w<t.near||w>t.far||e.push({distance:w,point:c.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(let v=0,y=p.count-1;v<y;v+=h){if(a.fromBufferAttribute(p,v),l.fromBufferAttribute(p,v+1),Ll.distanceSqToSegment(a,l,u,c)>o)continue;u.applyMatrix4(this.matrixWorld);const m=t.ray.origin.distanceTo(u);m<t.near||m>t.far||e.push({distance:m,point:c.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const ff=new M,df=new M;function wt(t,e){zt.call(this,t,e),this.type="LineSegments"}wt.prototype=Object.assign(Object.create(zt.prototype),{constructor:wt,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,r=e.count;i<r;i+=2)ff.fromBufferAttribute(e,i),df.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ff.distanceTo(df);t.setAttribute("lineDistance",new le(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else t.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}});function bo(t,e){zt.call(this,t,e),this.type="LineLoop"}bo.prototype=Object.assign(Object.create(zt.prototype),{constructor:bo,isLineLoop:!0});function Yt(t){ve.call(this),this.type="PointsMaterial",this.color=new ae(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Yt.prototype=Object.create(ve.prototype),Yt.prototype.constructor=Yt,Yt.prototype.isPointsMaterial=!0,Yt.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const pf=new Ae,Pl=new Xi,wo=new Fn,Mo=new M;function fr(t=new ye,e=new Yt){de.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}fr.prototype=Object.assign(Object.create(de.prototype),{constructor:fr,isPoints:!0,copy:function(t){return de.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,r=t.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),wo.copy(n.boundingSphere),wo.applyMatrix4(i),wo.radius+=r,t.ray.intersectsSphere(wo)===!1)return;pf.copy(i).invert(),Pl.copy(t.ray).applyMatrix4(pf);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position;if(a!==null){const u=a.array;for(let h=0,f=u.length;h<f;h++){const d=u[h];Mo.fromBufferAttribute(c,d),mf(Mo,d,o,i,t,e,this)}}else for(let u=0,h=c.count;u<h;u++)Mo.fromBufferAttribute(c,u),mf(Mo,u,o,i,t,e,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,s=i.length;r<s;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function mf(t,e,n,i,r,s,o){const a=Pl.distanceSqToPoint(t);if(a<n){const l=new M;Pl.closestPointToPoint(t,l),l.applyMatrix4(i);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}function Rl(t,e,n,i,r,s,o,a,l){Ue.call(this,t,e,n,i,r,s,o,a,l),this.format=o!==void 0?o:Rn,this.minFilter=s!==void 0?s:ot,this.magFilter=r!==void 0?r:ot,this.generateMipmaps=!1;const c=this;function u(){c.needsUpdate=!0,t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(u)}Rl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:Rl,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function dr(t,e,n,i,r,s,o,a,l,c,u,h){Ue.call(this,null,s,o,a,l,c,i,r,u,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}dr.prototype=Object.create(Ue.prototype),dr.prototype.constructor=dr,dr.prototype.isCompressedTexture=!0;function ds(t,e,n,i,r,s,o,a,l){Ue.call(this,t,e,n,i,r,s,o,a,l),this.needsUpdate=!0}ds.prototype=Object.create(Ue.prototype),ds.prototype.constructor=ds,ds.prototype.isCanvasTexture=!0;function ps(t,e,n,i,r,s,o,a,l,c){if(c=c!==void 0?c:ri,c!==ri&&c!==Gi)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===ri&&(n=Ir),n===void 0&&c===Gi&&(n=ki),Ue.call(this,null,i,r,s,o,a,c,n,l),this.image={width:t,height:e},this.magFilter=o!==void 0?o:nt,this.minFilter=a!==void 0?a:nt,this.flipY=!1,this.generateMipmaps=!1}ps.prototype=Object.create(Ue.prototype),ps.prototype.constructor=ps,ps.prototype.isDepthTexture=!0;class So extends ye{constructor(e=1,n=8,i=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:n,thetaStart:i,thetaLength:r},n=Math.max(3,n);const s=[],o=[],a=[],l=[],c=new M,u=new G;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=n;h++,f+=3){const d=i+h/n*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=n;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new le(o,3)),this.setAttribute("normal",new le(a,3)),this.setAttribute("uv",new le(l,2))}}class pr extends ye{constructor(e=1,n=1,i=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:n,height:i,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const v=[],y=i/2;let g=0;m(),o===!1&&(e>0&&_(!0),n>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new le(h,3)),this.setAttribute("normal",new le(f,3)),this.setAttribute("uv",new le(d,2));function m(){const b=new M,w=new M;let x=0;const T=(n-e)/i;for(let I=0;I<=s;I++){const L=[],P=I/s,O=P*(n-e)+e;for(let B=0;B<=r;B++){const N=B/r,D=N*l+a,F=Math.sin(D),U=Math.cos(D);w.x=O*F,w.y=-P*i+y,w.z=O*U,h.push(w.x,w.y,w.z),b.set(F,T,U).normalize(),f.push(b.x,b.y,b.z),d.push(N,1-P),L.push(p++)}v.push(L)}for(let I=0;I<r;I++)for(let L=0;L<s;L++){const P=v[L][I],O=v[L+1][I],B=v[L+1][I+1],N=v[L][I+1];u.push(P,O,N),u.push(O,B,N),x+=6}c.addGroup(g,x,0),g+=x}function _(b){const w=p,x=new G,T=new M;let I=0;const L=b===!0?e:n,P=b===!0?1:-1;for(let B=1;B<=r;B++)h.push(0,y*P,0),f.push(0,P,0),d.push(.5,.5),p++;const O=p;for(let B=0;B<=r;B++){const D=B/r*l+a,F=Math.cos(D),U=Math.sin(D);T.x=L*U,T.y=y*P,T.z=L*F,h.push(T.x,T.y,T.z),f.push(0,P,0),x.x=F*.5+.5,x.y=U*.5*P+.5,d.push(x.x,x.y),p++}for(let B=0;B<r;B++){const N=w+B,D=O+B;b===!0?u.push(D,D+1,N):u.push(D+1,D,N),I+=3}c.addGroup(g,I,b===!0?1:2),g+=I}}}class Eo extends pr{constructor(e=1,n=1,i=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,n,i,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:n,radialSegments:i,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}}class Xn extends ye{constructor(e,n,i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:n,radius:i,detail:r};const s=[],o=[];a(r),c(i),u(),this.setAttribute("position",new le(s,3)),this.setAttribute("normal",new le(s.slice(),3)),this.setAttribute("uv",new le(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(m){const _=new M,b=new M,w=new M;for(let x=0;x<n.length;x+=3)d(n[x+0],_),d(n[x+1],b),d(n[x+2],w),l(_,b,w,m)}function l(m,_,b,w){const x=w+1,T=[];for(let I=0;I<=x;I++){T[I]=[];const L=m.clone().lerp(b,I/x),P=_.clone().lerp(b,I/x),O=x-I;for(let B=0;B<=O;B++)B===0&&I===x?T[I][B]=L:T[I][B]=L.clone().lerp(P,B/O)}for(let I=0;I<x;I++)for(let L=0;L<2*(x-I)-1;L++){const P=Math.floor(L/2);L%2===0?(f(T[I][P+1]),f(T[I+1][P]),f(T[I][P])):(f(T[I][P+1]),f(T[I+1][P+1]),f(T[I+1][P]))}}function c(m){const _=new M;for(let b=0;b<s.length;b+=3)_.x=s[b+0],_.y=s[b+1],_.z=s[b+2],_.normalize().multiplyScalar(m),s[b+0]=_.x,s[b+1]=_.y,s[b+2]=_.z}function u(){const m=new M;for(let _=0;_<s.length;_+=3){m.x=s[_+0],m.y=s[_+1],m.z=s[_+2];const b=y(m)/2/Math.PI+.5,w=g(m)/Math.PI+.5;o.push(b,1-w)}p(),h()}function h(){for(let m=0;m<o.length;m+=6){const _=o[m+0],b=o[m+2],w=o[m+4],x=Math.max(_,b,w),T=Math.min(_,b,w);x>.9&&T<.1&&(_<.2&&(o[m+0]+=1),b<.2&&(o[m+2]+=1),w<.2&&(o[m+4]+=1))}}function f(m){s.push(m.x,m.y,m.z)}function d(m,_){const b=m*3;_.x=e[b+0],_.y=e[b+1],_.z=e[b+2]}function p(){const m=new M,_=new M,b=new M,w=new M,x=new G,T=new G,I=new G;for(let L=0,P=0;L<s.length;L+=9,P+=6){m.set(s[L+0],s[L+1],s[L+2]),_.set(s[L+3],s[L+4],s[L+5]),b.set(s[L+6],s[L+7],s[L+8]),x.set(o[P+0],o[P+1]),T.set(o[P+2],o[P+3]),I.set(o[P+4],o[P+5]),w.copy(m).add(_).add(b).divideScalar(3);const O=y(w);v(x,P+0,m,O),v(T,P+2,_,O),v(I,P+4,b,O)}}function v(m,_,b,w){w<0&&m.x===1&&(o[_]=m.x-1),b.x===0&&b.z===0&&(o[_]=w/2/Math.PI+.5)}function y(m){return Math.atan2(m.z,-m.x)}function g(m){return Math.atan2(-m.y,Math.sqrt(m.x*m.x+m.z*m.z))}}}class To extends Xn{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,n),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:n}}}const Ao=new M,Co=new M,Il=new M,Lo=new dt;class Dl extends ye{constructor(e,n){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:n},n=n!==void 0?n:1,e.isGeometry===!0){console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const r=Math.pow(10,4),s=Math.cos(_e.DEG2RAD*n),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:v,b:y,c:g}=Lo;if(v.fromBufferAttribute(a,c[0]),y.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),Lo.getNormal(Il),h[0]=`${Math.round(v.x*r)},${Math.round(v.y*r)},${Math.round(v.z*r)}`,h[1]=`${Math.round(y.x*r)},${Math.round(y.y*r)},${Math.round(y.z*r)}`,h[2]=`${Math.round(g.x*r)},${Math.round(g.y*r)},${Math.round(g.z*r)}`,!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let m=0;m<3;m++){const _=(m+1)%3,b=h[m],w=h[_],x=Lo[u[m]],T=Lo[u[_]],I=`${b}_${w}`,L=`${w}_${b}`;L in f&&f[L]?(Il.dot(f[L].normal)<=s&&(d.push(x.x,x.y,x.z),d.push(T.x,T.y,T.z)),f[L]=null):I in f||(f[I]={index0:c[m],index1:c[_],normal:Il.clone()})}}for(const p in f)if(f[p]){const{index0:v,index1:y}=f[p];Ao.fromBufferAttribute(a,v),Co.fromBufferAttribute(a,y),d.push(Ao.x,Ao.y,Ao.z),d.push(Co.x,Co.y,Co.z)}this.setAttribute("position",new le(d,3))}}const Lv={triangulate:function(t,e,n){n=n||2;const i=e&&e.length,r=i?e[0]*n:t.length;let s=gf(t,0,r,n,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(i&&(s=Ov(t,e,s,n)),t.length>80*n){a=c=t[0],l=u=t[1];for(let p=n;p<r;p+=n)h=t[p],f=t[p+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return ms(s,o,n,a,l,d),o}};function gf(t,e,n,i,r){let s,o;if(r===jv(t,e,n,i)>0)for(s=e;s<n;s+=i)o=xf(s,t[s],t[s+1],o);else for(s=n-i;s>=e;s-=i)o=xf(s,t[s],t[s+1],o);return o&&Po(o,o.next)&&(ys(o),o=o.next),o}function Yn(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(Po(n,n.next)||Ye(n.prev,n,n.next)===0)){if(ys(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function ms(t,e,n,i,r,s,o){if(!t)return;!o&&s&&Uv(t,i,r,s);let a=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,s?Rv(t,i,r,s):Pv(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),ys(t),t=c.next,a=c.next;continue}if(t=c,t===a){o?o===1?(t=Iv(Yn(t),e,n),ms(t,e,n,i,r,s,2)):o===2&&Dv(t,e,n,i,r,s):ms(Yn(t),e,n,i,r,s,1);break}}}function Pv(t){const e=t.prev,n=t,i=t.next;if(Ye(e,n,i)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(mr(e.x,e.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Ye(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Rv(t,e,n,i){const r=t.prev,s=t,o=t.next;if(Ye(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,u=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,h=Ol(a,l,e,n,i),f=Ol(c,u,e,n,i);let d=t.prevZ,p=t.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==t.prev&&d!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ye(d.prev,d,d.next)>=0||(d=d.prevZ,p!==t.prev&&p!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Ye(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==t.prev&&d!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Ye(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==t.prev&&p!==t.next&&mr(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Ye(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function Iv(t,e,n){let i=t;do{const r=i.prev,s=i.next.next;!Po(r,s)&&yf(r,i,i.next,s)&&gs(r,s)&&gs(s,r)&&(e.push(r.i/n),e.push(i.i/n),e.push(s.i/n),ys(i),ys(i.next),i=t=s),i=i.next}while(i!==t);return Yn(i)}function Dv(t,e,n,i,r,s){let o=t;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Gv(o,a)){let l=vf(o,a);o=Yn(o,o.next),l=Yn(l,l.next),ms(o,e,n,i,r,s),ms(l,e,n,i,r,s);return}a=a.next}o=o.next}while(o!==t)}function Ov(t,e,n,i){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*i,l=s<o-1?e[s+1]*i:t.length,c=gf(t,a,l,i,!1),c===c.next&&(c.steiner=!0),r.push(kv(c));for(r.sort(Fv),s=0;s<r.length;s++)Nv(r[s],n),n=Yn(n,n.next);return n}function Fv(t,e){return t.x-e.x}function Nv(t,e){if(e=Bv(t,e),e){const n=vf(e,t);Yn(e,e.next),Yn(n,n.next)}}function Bv(t,e){let n=e;const i=t.x,r=t.y;let s=-1/0,o;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){const f=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>s){if(s=f,f===i){if(r===n.y)return n;if(r===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(i===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;n=o;do i>=n.x&&n.x>=l&&i!==n.x&&mr(r<c?i:s,r,l,c,r<c?s:i,r,n.x,n.y)&&(h=Math.abs(r-n.y)/(i-n.x),gs(n,t)&&(h<u||h===u&&(n.x>o.x||n.x===o.x&&zv(o,n)))&&(o=n,u=h)),n=n.next;while(n!==a);return o}function zv(t,e){return Ye(t.prev,t,e.prev)<0&&Ye(e.next,t,t.next)<0}function Uv(t,e,n,i){let r=t;do r.z===null&&(r.z=Ol(r.x,r.y,e,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,Hv(r)}function Hv(t){let e,n,i,r,s,o,a,l,c=1;do{for(n=t,t=null,s=null,o=0;n;){for(o++,i=n,a=0,e=0;e<c&&(a++,i=i.nextZ,!!i);e++);for(l=c;a>0||l>0&&i;)a!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,a--):(r=i,i=i.nextZ,l--),s?s.nextZ=r:t=r,r.prevZ=s,s=r;n=i}s.nextZ=null,c*=2}while(o>1);return t}function Ol(t,e,n,i,r){return t=32767*(t-n)*r,e=32767*(e-i)*r,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function kv(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function mr(t,e,n,i,r,s,o,a){return(r-o)*(e-a)-(t-o)*(s-a)>=0&&(t-o)*(i-a)-(n-o)*(e-a)>=0&&(n-o)*(s-a)-(r-o)*(i-a)>=0}function Gv(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!Vv(t,e)&&(gs(t,e)&&gs(e,t)&&Wv(t,e)&&(Ye(t.prev,t,e.prev)||Ye(t,e.prev,e))||Po(t,e)&&Ye(t.prev,t,t.next)>0&&Ye(e.prev,e,e.next)>0)}function Ye(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Po(t,e){return t.x===e.x&&t.y===e.y}function yf(t,e,n,i){const r=Io(Ye(t,e,n)),s=Io(Ye(t,e,i)),o=Io(Ye(n,i,t)),a=Io(Ye(n,i,e));return!!(r!==s&&o!==a||r===0&&Ro(t,n,e)||s===0&&Ro(t,i,e)||o===0&&Ro(n,t,i)||a===0&&Ro(n,e,i))}function Ro(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Io(t){return t>0?1:t<0?-1:0}function Vv(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&yf(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function gs(t,e){return Ye(t.prev,t,t.next)<0?Ye(t,e,t.next)>=0&&Ye(t,t.prev,e)>=0:Ye(t,e,t.prev)<0||Ye(t,t.next,e)<0}function Wv(t,e){let n=t,i=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do n.y>s!=n.next.y>s&&n.next.y!==n.y&&r<(n.next.x-n.x)*(s-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function vf(t,e){const n=new Fl(t.i,t.x,t.y),i=new Fl(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,n.next=r,r.prev=n,i.next=n,n.prev=i,s.next=i,i.prev=s,i}function xf(t,e,n,i){const r=new Fl(t,e,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function ys(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Fl(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function jv(t,e,n,i){let r=0;for(let s=e,o=n-i;s<n;s+=i)r+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return r}const En={area:function(t){const e=t.length;let n=0;for(let i=e-1,r=0;r<e;i=r++)n+=t[i].x*t[r].y-t[r].x*t[i].y;return n*.5},isClockWise:function(t){return En.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],r=[];_f(t),bf(n,t);let s=t.length;e.forEach(_f);for(let a=0;a<e.length;a++)i.push(s),s+=e[a].length,bf(n,e[a]);const o=Lv.triangulate(n,i);for(let a=0;a<o.length;a+=3)r.push(o.slice(a,a+3));return r}};function _f(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function bf(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class yi extends ye{constructor(e,n){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new le(r,3)),this.setAttribute("uv",new le(s,2)),this.computeVertexNormals();function o(a){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,u=n.steps!==void 0?n.steps:1;let h=n.depth!==void 0?n.depth:100,f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,d=n.bevelThickness!==void 0?n.bevelThickness:6,p=n.bevelSize!==void 0?n.bevelSize:d-2,v=n.bevelOffset!==void 0?n.bevelOffset:0,y=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,m=n.UVGenerator!==void 0?n.UVGenerator:qv;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=n.amount);let _,b=!1,w,x,T,I;g&&(_=g.getSpacedPoints(u),b=!0,f=!1,w=g.computeFrenetFrames(u,!1),x=new M,T=new M,I=new M),f||(y=0,d=0,p=0,v=0);const L=a.extractPoints(c);let P=L.shape;const O=L.holes;if(!En.isClockWise(P)){P=P.reverse();for(let X=0,K=O.length;X<K;X++){const ee=O[X];En.isClockWise(ee)&&(O[X]=ee.reverse())}}const N=En.triangulateShape(P,O),D=P;for(let X=0,K=O.length;X<K;X++){const ee=O[X];P=P.concat(ee)}function F(X,K,ee){return K||console.error("THREE.ExtrudeGeometry: vec does not exist"),K.clone().multiplyScalar(ee).add(X)}const U=P.length,q=N.length;function $(X,K,ee){let pe,se,A;const S=X.x-K.x,Y=X.y-K.y,j=ee.x-X.x,R=ee.y-X.y,Z=S*S+Y*Y,re=S*R-Y*j;if(Math.abs(re)>Number.EPSILON){const fe=Math.sqrt(Z),Q=Math.sqrt(j*j+R*R),C=K.x-Y/fe,J=K.y+S/fe,he=ee.x-R/Q,te=ee.y+j/Q,ge=((he-C)*R-(te-J)*j)/(S*R-Y*j);pe=C+S*ge-X.x,se=J+Y*ge-X.y;const Ne=pe*pe+se*se;if(Ne<=2)return new G(pe,se);A=Math.sqrt(Ne/2)}else{let fe=!1;S>Number.EPSILON?j>Number.EPSILON&&(fe=!0):S<-Number.EPSILON?j<-Number.EPSILON&&(fe=!0):Math.sign(Y)===Math.sign(R)&&(fe=!0),fe?(pe=-Y,se=S,A=Math.sqrt(Z)):(pe=S,se=Y,A=Math.sqrt(Z/2))}return new G(pe/A,se/A)}const ie=[];for(let X=0,K=D.length,ee=K-1,pe=X+1;X<K;X++,ee++,pe++)ee===K&&(ee=0),pe===K&&(pe=0),ie[X]=$(D[X],D[ee],D[pe]);const ue=[];let ce,Me=ie.concat();for(let X=0,K=O.length;X<K;X++){const ee=O[X];ce=[];for(let pe=0,se=ee.length,A=se-1,S=pe+1;pe<se;pe++,A++,S++)A===se&&(A=0),S===se&&(S=0),ce[pe]=$(ee[pe],ee[A],ee[S]);ue.push(ce),Me=Me.concat(ce)}for(let X=0;X<y;X++){const K=X/y,ee=d*Math.cos(K*Math.PI/2),pe=p*Math.sin(K*Math.PI/2)+v;for(let se=0,A=D.length;se<A;se++){const S=F(D[se],ie[se],pe);we(S.x,S.y,-ee)}for(let se=0,A=O.length;se<A;se++){const S=O[se];ce=ue[se];for(let Y=0,j=S.length;Y<j;Y++){const R=F(S[Y],ce[Y],pe);we(R.x,R.y,-ee)}}}const Se=p+v;for(let X=0;X<U;X++){const K=f?F(P[X],Me[X],Se):P[X];b?(T.copy(w.normals[0]).multiplyScalar(K.x),x.copy(w.binormals[0]).multiplyScalar(K.y),I.copy(_[0]).add(T).add(x),we(I.x,I.y,I.z)):we(K.x,K.y,0)}for(let X=1;X<=u;X++)for(let K=0;K<U;K++){const ee=f?F(P[K],Me[K],Se):P[K];b?(T.copy(w.normals[X]).multiplyScalar(ee.x),x.copy(w.binormals[X]).multiplyScalar(ee.y),I.copy(_[X]).add(T).add(x),we(I.x,I.y,I.z)):we(ee.x,ee.y,h/u*X)}for(let X=y-1;X>=0;X--){const K=X/y,ee=d*Math.cos(K*Math.PI/2),pe=p*Math.sin(K*Math.PI/2)+v;for(let se=0,A=D.length;se<A;se++){const S=F(D[se],ie[se],pe);we(S.x,S.y,h+ee)}for(let se=0,A=O.length;se<A;se++){const S=O[se];ce=ue[se];for(let Y=0,j=S.length;Y<j;Y++){const R=F(S[Y],ce[Y],pe);b?we(R.x,R.y+_[u-1].y,_[u-1].x+ee):we(R.x,R.y,h+ee)}}}ze(),V();function ze(){const X=r.length/3;if(f){let K=0,ee=U*K;for(let pe=0;pe<q;pe++){const se=N[pe];De(se[2]+ee,se[1]+ee,se[0]+ee)}K=u+y*2,ee=U*K;for(let pe=0;pe<q;pe++){const se=N[pe];De(se[0]+ee,se[1]+ee,se[2]+ee)}}else{for(let K=0;K<q;K++){const ee=N[K];De(ee[2],ee[1],ee[0])}for(let K=0;K<q;K++){const ee=N[K];De(ee[0]+U*u,ee[1]+U*u,ee[2]+U*u)}}i.addGroup(X,r.length/3-X,0)}function V(){const X=r.length/3;let K=0;rt(D,K),K+=D.length;for(let ee=0,pe=O.length;ee<pe;ee++){const se=O[ee];rt(se,K),K+=se.length}i.addGroup(X,r.length/3-X,1)}function rt(X,K){let ee=X.length;for(;--ee>=0;){const pe=ee;let se=ee-1;se<0&&(se=X.length-1);for(let A=0,S=u+y*2;A<S;A++){const Y=U*A,j=U*(A+1),R=K+pe+Y,Z=K+se+Y,re=K+se+j,fe=K+pe+j;be(R,Z,re,fe)}}}function we(X,K,ee){l.push(X),l.push(K),l.push(ee)}function De(X,K,ee){Fe(X),Fe(K),Fe(ee);const pe=r.length/3,se=m.generateTopUV(i,r,pe-3,pe-2,pe-1);Ee(se[0]),Ee(se[1]),Ee(se[2])}function be(X,K,ee,pe){Fe(X),Fe(K),Fe(pe),Fe(K),Fe(ee),Fe(pe);const se=r.length/3,A=m.generateSideWallUV(i,r,se-6,se-3,se-2,se-1);Ee(A[0]),Ee(A[1]),Ee(A[3]),Ee(A[1]),Ee(A[2]),Ee(A[3])}function Fe(X){r.push(l[X*3+0]),r.push(l[X*3+1]),r.push(l[X*3+2])}function Ee(X){s.push(X.x),s.push(X.y)}}}toJSON(){const e=ye.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return Xv(n,i,e)}}const qv={generateTopUV:function(t,e,n,i,r){const s=e[n*3],o=e[n*3+1],a=e[i*3],l=e[i*3+1],c=e[r*3],u=e[r*3+1];return[new G(s,o),new G(a,l),new G(c,u)]},generateSideWallUV:function(t,e,n,i,r,s){const o=e[n*3],a=e[n*3+1],l=e[n*3+2],c=e[i*3],u=e[i*3+1],h=e[i*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],v=e[s*3],y=e[s*3+1],g=e[s*3+2];return Math.abs(a-u)<.01?[new G(o,1-l),new G(c,1-h),new G(f,1-p),new G(v,1-g)]:[new G(a,1-l),new G(u,1-h),new G(d,1-p),new G(y,1-g)]}};function Xv(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const s=t[i];n.shapes.push(s.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Do extends Xn{constructor(e=1,n=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,n),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:n}}}class Oo extends ye{constructor(e,n=12,i=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:n,phiStart:i,phiLength:r},n=Math.floor(n),r=_e.clamp(r,0,Math.PI*2);const s=[],o=[],a=[],l=1/n,c=new M,u=new G;for(let h=0;h<=n;h++){const f=i+h*l*r,d=Math.sin(f),p=Math.cos(f);for(let v=0;v<=e.length-1;v++)c.x=e[v].x*d,c.y=e[v].y,c.z=e[v].x*p,o.push(c.x,c.y,c.z),u.x=h/n,u.y=v/(e.length-1),a.push(u.x,u.y)}for(let h=0;h<n;h++)for(let f=0;f<e.length-1;f++){const d=f+h*e.length,p=d,v=d+e.length,y=d+e.length+1,g=d+1;s.push(p,v,g),s.push(v,y,g)}if(this.setIndex(s),this.setAttribute("position",new le(o,3)),this.setAttribute("uv",new le(a,2)),this.computeVertexNormals(),r===Math.PI*2){const h=this.attributes.normal.array,f=new M,d=new M,p=new M,v=n*e.length*3;for(let y=0,g=0;y<e.length;y++,g+=3)f.x=h[g+0],f.y=h[g+1],f.z=h[g+2],d.x=h[v+g+0],d.y=h[v+g+1],d.z=h[v+g+2],p.addVectors(f,d).normalize(),h[g+0]=h[v+g+0]=p.x,h[g+1]=h[v+g+1]=p.y,h[g+2]=h[v+g+2]=p.z}}}class vs extends Xn{constructor(e=1,n=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,r,e,n),this.type="OctahedronGeometry",this.parameters={radius:e,detail:n}}}function vi(t,e,n){ye.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],r=[],s=[],o=[],a=1e-5,l=new M,c=new M,u=new M,h=new M,f=new M;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let p=0;p<=n;p++){const v=p/n;for(let y=0;y<=e;y++){const g=y/e;t(g,v,c),r.push(c.x,c.y,c.z),g-a>=0?(t(g-a,v,u),h.subVectors(c,u)):(t(g+a,v,u),h.subVectors(u,c)),v-a>=0?(t(g,v-a,u),f.subVectors(c,u)):(t(g,v+a,u),f.subVectors(u,c)),l.crossVectors(h,f).normalize(),s.push(l.x,l.y,l.z),o.push(g,v)}}for(let p=0;p<n;p++)for(let v=0;v<e;v++){const y=p*d+v,g=p*d+v+1,m=(p+1)*d+v+1,_=(p+1)*d+v;i.push(y,g,_),i.push(g,m,_)}this.setIndex(i),this.setAttribute("position",new le(r,3)),this.setAttribute("normal",new le(s,3)),this.setAttribute("uv",new le(o,2))}vi.prototype=Object.create(ye.prototype),vi.prototype.constructor=vi;class Fo extends ye{constructor(e=.5,n=1,i=8,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:n,thetaSegments:i,phiSegments:r,thetaStart:s,thetaLength:o},i=Math.max(3,i),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let h=e;const f=(n-e)/r,d=new M,p=new G;for(let v=0;v<=r;v++){for(let y=0;y<=i;y++){const g=s+y/i*o;d.x=h*Math.cos(g),d.y=h*Math.sin(g),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/n+1)/2,p.y=(d.y/n+1)/2,u.push(p.x,p.y)}h+=f}for(let v=0;v<r;v++){const y=v*(i+1);for(let g=0;g<i;g++){const m=g+y,_=m,b=m+i+1,w=m+i+2,x=m+1;a.push(_,b,x),a.push(b,w,x)}}this.setIndex(a),this.setAttribute("position",new le(l,3)),this.setAttribute("normal",new le(c,3)),this.setAttribute("uv",new le(u,2))}}class xs extends ye{constructor(e,n=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(i),this.setAttribute("position",new le(r,3)),this.setAttribute("normal",new le(s,3)),this.setAttribute("uv",new le(o,2));function c(u){const h=r.length/3,f=u.extractPoints(n);let d=f.shape;const p=f.holes;En.isClockWise(d)===!1&&(d=d.reverse());for(let y=0,g=p.length;y<g;y++){const m=p[y];En.isClockWise(m)===!0&&(p[y]=m.reverse())}const v=En.triangulateShape(d,p);for(let y=0,g=p.length;y<g;y++){const m=p[y];d=d.concat(m)}for(let y=0,g=d.length;y<g;y++){const m=d[y];r.push(m.x,m.y,0),s.push(0,0,1),o.push(m.x,m.y)}for(let y=0,g=v.length;y<g;y++){const m=v[y],_=m[0]+h,b=m[1]+h,w=m[2]+h;i.push(_,b,w),l+=3}}}toJSON(){const e=ye.prototype.toJSON.call(this),n=this.parameters.shapes;return Yv(n,e)}}function Yv(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}class _s extends ye{constructor(e=1,n=8,i=6,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:n,heightSegments:i,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new M,f=new M,d=[],p=[],v=[],y=[];for(let g=0;g<=i;g++){const m=[],_=g/i;let b=0;g==0&&o==0?b=.5/n:g==i&&l==Math.PI&&(b=-.5/n);for(let w=0;w<=n;w++){const x=w/n;h.x=-e*Math.cos(r+x*s)*Math.sin(o+_*a),h.y=e*Math.cos(o+_*a),h.z=e*Math.sin(r+x*s)*Math.sin(o+_*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),v.push(f.x,f.y,f.z),y.push(x+b,1-_),m.push(c++)}u.push(m)}for(let g=0;g<i;g++)for(let m=0;m<n;m++){const _=u[g][m+1],b=u[g][m],w=u[g+1][m],x=u[g+1][m+1];(g!==0||o>0)&&d.push(_,b,x),(g!==i-1||l<Math.PI)&&d.push(b,w,x)}this.setIndex(d),this.setAttribute("position",new le(p,3)),this.setAttribute("normal",new le(v,3)),this.setAttribute("uv",new le(y,2))}}class No extends Xn{constructor(e=1,n=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,r,e,n),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:n}}}class Bo extends yi{constructor(e,n={}){const i=n.font;if(!(i&&i.isFont))return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ye;const r=i.generateShapes(e,n.size);n.depth=n.height!==void 0?n.height:50,n.bevelThickness===void 0&&(n.bevelThickness=10),n.bevelSize===void 0&&(n.bevelSize=8),n.bevelEnabled===void 0&&(n.bevelEnabled=!1),super(r,n),this.type="TextGeometry"}}class zo extends ye{constructor(e=1,n=.4,i=8,r=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:n,radialSegments:i,tubularSegments:r,arc:s},i=Math.floor(i),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new M,h=new M,f=new M;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){const v=p/r*s,y=d/i*Math.PI*2;h.x=(e+n*Math.cos(y))*Math.cos(v),h.y=(e+n*Math.cos(y))*Math.sin(v),h.z=n*Math.sin(y),a.push(h.x,h.y,h.z),u.x=e*Math.cos(v),u.y=e*Math.sin(v),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/i)}for(let d=1;d<=i;d++)for(let p=1;p<=r;p++){const v=(r+1)*d+p-1,y=(r+1)*(d-1)+p-1,g=(r+1)*(d-1)+p,m=(r+1)*d+p;o.push(v,y,m),o.push(y,g,m)}this.setIndex(o),this.setAttribute("position",new le(a,3)),this.setAttribute("normal",new le(l,3)),this.setAttribute("uv",new le(c,2))}}class Uo extends ye{constructor(e=1,n=.4,i=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:i,radialSegments:r,p:s,q:o},i=Math.floor(i),r=Math.floor(r);const a=[],l=[],c=[],u=[],h=new M,f=new M,d=new M,p=new M,v=new M,y=new M,g=new M;for(let _=0;_<=i;++_){const b=_/i*s*Math.PI*2;m(b,s,o,e,d),m(b+.01,s,o,e,p),y.subVectors(p,d),g.addVectors(p,d),v.crossVectors(y,g),g.crossVectors(v,y),v.normalize(),g.normalize();for(let w=0;w<=r;++w){const x=w/r*Math.PI*2,T=-n*Math.cos(x),I=n*Math.sin(x);h.x=d.x+(T*g.x+I*v.x),h.y=d.y+(T*g.y+I*v.y),h.z=d.z+(T*g.z+I*v.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(_/i),u.push(w/r)}}for(let _=1;_<=i;_++)for(let b=1;b<=r;b++){const w=(r+1)*(_-1)+(b-1),x=(r+1)*_+(b-1),T=(r+1)*_+b,I=(r+1)*(_-1)+b;a.push(w,x,I),a.push(x,T,I)}this.setIndex(a),this.setAttribute("position",new le(l,3)),this.setAttribute("normal",new le(c,3)),this.setAttribute("uv",new le(u,2));function m(_,b,w,x,T){const I=Math.cos(_),L=Math.sin(_),P=w/b*_,O=Math.cos(P);T.x=x*(2+O)*.5*I,T.y=x*(2+O)*L*.5,T.z=x*Math.sin(P)*.5}}}class Ho extends ye{constructor(e,n=64,i=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:n,radius:i,radialSegments:r,closed:s};const o=e.computeFrenetFrames(n,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new M,l=new M,c=new G;let u=new M;const h=[],f=[],d=[],p=[];v(),this.setIndex(p),this.setAttribute("position",new le(h,3)),this.setAttribute("normal",new le(f,3)),this.setAttribute("uv",new le(d,2));function v(){for(let _=0;_<n;_++)y(_);y(s===!1?n:0),m(),g()}function y(_){u=e.getPointAt(_/n,u);const b=o.normals[_],w=o.binormals[_];for(let x=0;x<=r;x++){const T=x/r*Math.PI*2,I=Math.sin(T),L=-Math.cos(T);l.x=L*b.x+I*w.x,l.y=L*b.y+I*w.y,l.z=L*b.z+I*w.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+i*l.x,a.y=u.y+i*l.y,a.z=u.z+i*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let _=1;_<=n;_++)for(let b=1;b<=r;b++){const w=(r+1)*(_-1)+(b-1),x=(r+1)*_+(b-1),T=(r+1)*_+b,I=(r+1)*(_-1)+b;p.push(w,x,I),p.push(x,T,I)}}function m(){for(let _=0;_<=n;_++)for(let b=0;b<=r;b++)c.x=_/n,c.y=b/r,d.push(c.x,c.y)}}toJSON(){const e=ye.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class Nl extends ye{constructor(e){if(super(),this.type="WireframeGeometry",e.isGeometry===!0){console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return}const n=[],i=[0,0],r={},s=new M;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,v=f+d;p<v;p+=3)for(let y=0;y<3;y++){const g=a.getX(p+y),m=a.getX(p+(y+1)%3);i[0]=Math.min(g,m),i[1]=Math.max(g,m);const _=i[0]+","+i[1];r[_]===void 0&&(r[_]={index1:i[0],index2:i[1]})}}for(const c in r){const u=r[c];s.fromBufferAttribute(o,u.index1),n.push(s.x,s.y,s.z),s.fromBufferAttribute(o,u.index2),n.push(s.x,s.y,s.z)}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c;s.fromBufferAttribute(o,u),n.push(s.x,s.y,s.z);const h=3*a+(c+1)%3;s.fromBufferAttribute(o,h),n.push(s.x,s.y,s.z)}}this.setAttribute("position",new le(n,3))}}var Mt=Object.freeze({__proto__:null,BoxGeometry:pi,BoxBufferGeometry:pi,CircleGeometry:So,CircleBufferGeometry:So,ConeGeometry:Eo,ConeBufferGeometry:Eo,CylinderGeometry:pr,CylinderBufferGeometry:pr,DodecahedronGeometry:To,DodecahedronBufferGeometry:To,EdgesGeometry:Dl,ExtrudeGeometry:yi,ExtrudeBufferGeometry:yi,IcosahedronGeometry:Do,IcosahedronBufferGeometry:Do,LatheGeometry:Oo,LatheBufferGeometry:Oo,OctahedronGeometry:vs,OctahedronBufferGeometry:vs,ParametricGeometry:vi,ParametricBufferGeometry:vi,PlaneGeometry:Qr,PlaneBufferGeometry:Qr,PolyhedronGeometry:Xn,PolyhedronBufferGeometry:Xn,RingGeometry:Fo,RingBufferGeometry:Fo,ShapeGeometry:xs,ShapeBufferGeometry:xs,SphereGeometry:_s,SphereBufferGeometry:_s,TetrahedronGeometry:No,TetrahedronBufferGeometry:No,TextGeometry:Bo,TextBufferGeometry:Bo,TorusGeometry:zo,TorusBufferGeometry:zo,TorusKnotGeometry:Uo,TorusKnotBufferGeometry:Uo,TubeGeometry:Ho,TubeBufferGeometry:Ho,WireframeGeometry:Nl});function xi(t){ve.call(this),this.type="ShadowMaterial",this.color=new ae(0),this.transparent=!0,this.setValues(t)}xi.prototype=Object.create(ve.prototype),xi.prototype.constructor=xi,xi.prototype.isShadowMaterial=!0,xi.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this};function Tn(t){bt.call(this,t),this.type="RawShaderMaterial"}Tn.prototype=Object.create(bt.prototype),Tn.prototype.constructor=Tn,Tn.prototype.isRawShaderMaterial=!0;function cn(t){ve.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ae(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}cn.prototype=Object.create(ve.prototype),cn.prototype.constructor=cn,cn.prototype.isMeshStandardMaterial=!0,cn.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};function Zn(t){cn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new G(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=_e.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}Zn.prototype=Object.create(cn.prototype),Zn.prototype.constructor=Zn,Zn.prototype.isMeshPhysicalMaterial=!0,Zn.prototype.copy=function(t){return cn.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new ae).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};function Jn(t){ve.call(this),this.type="MeshPhongMaterial",this.color=new ae(16777215),this.specular=new ae(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Tr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Jn.prototype=Object.create(ve.prototype),Jn.prototype.constructor=Jn,Jn.prototype.isMeshPhongMaterial=!0,Jn.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function _i(t){ve.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new ae(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}_i.prototype=Object.create(ve.prototype),_i.prototype.constructor=_i,_i.prototype.isMeshToonMaterial=!0,_i.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function bi(t){ve.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}bi.prototype=Object.create(ve.prototype),bi.prototype.constructor=bi,bi.prototype.isMeshNormalMaterial=!0,bi.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function wi(t){ve.call(this),this.type="MeshLambertMaterial",this.color=new ae(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ae(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Tr,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}wi.prototype=Object.create(ve.prototype),wi.prototype.constructor=wi,wi.prototype.isMeshLambertMaterial=!0,wi.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Mi(t){ve.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new ae(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ai,this.normalScale=new G(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Mi.prototype=Object.create(ve.prototype),Mi.prototype.constructor=Mi,Mi.prototype.isMeshMatcapMaterial=!0,Mi.prototype.copy=function(t){return ve.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Si(t){qe.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Si.prototype=Object.create(qe.prototype),Si.prototype.constructor=Si,Si.prototype.isLineDashedMaterial=!0,Si.prototype.copy=function(t){return qe.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Zv=Object.freeze({__proto__:null,ShadowMaterial:xi,SpriteMaterial:qn,RawShaderMaterial:Tn,ShaderMaterial:bt,PointsMaterial:Yt,MeshPhysicalMaterial:Zn,MeshStandardMaterial:cn,MeshPhongMaterial:Jn,MeshToonMaterial:_i,MeshNormalMaterial:bi,MeshLambertMaterial:wi,MeshDepthMaterial:Gn,MeshDistanceMaterial:Vn,MeshBasicMaterial:Pt,MeshMatcapMaterial:Mi,LineDashedMaterial:Si,LineBasicMaterial:qe,Material:ve});const je={arraySlice:function(t,e,n){return je.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(r,s){return t[r]-t[s]}const n=t.length,i=new Array(n);for(let r=0;r!==n;++r)i[r]=r;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,r=new t.constructor(i);for(let s=0,o=0;o!==i;++s){const a=n[s]*e;for(let l=0;l!==e;++l)r[o++]=t[a+l]}return r},flattenJSON:function(t,e,n,i){let r=1,s=t[0];for(;s!==void 0&&s[i]===void 0;)s=t[r++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),n.push.apply(n,o)),s=t[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(n,n.length)),s=t[r++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),n.push(o)),s=t[r++];while(s!==void 0)},subclip:function(t,e,n,i,r=30){const s=t.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<n||p>=i)){h.push(c.times[d]);for(let v=0;v<u;++v)f.push(c.values[d*u+v])}}h.length!==0&&(c.times=je.convertArray(h,c.times.constructor),c.values=je.convertArray(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const r=n.tracks.length,s=e/i;for(let o=0;o<r;++o){const a=n.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let v;if(s<=a.times[0]){const g=u,m=h-u;v=je.arraySlice(a.values,g,m)}else if(s>=a.times[p]){const g=p*h+u,m=g+h-u;v=je.arraySlice(a.values,g,m)}else{const g=a.createInterpolant(),m=u,_=h-u;g.evaluate(s),v=je.arraySlice(g.resultBuffer,m,_)}l==="quaternion"&&new at().fromArray(v).normalize().conjugate().toArray(v);const y=c.times.length;for(let g=0;g<y;++g){const m=g*d+f;if(l==="quaternion")at.multiplyQuaternionsFlat(c.values,m,v,0,c.values,m);else{const _=d-f*2;for(let b=0;b<_;++b)c.values[m+b]-=v[b]}}}return t.blendMode=Za,t}};function Ot(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(Ot.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],r=e[n-1];e:{t:{let s;n:{i:if(!(t<i)){for(let o=n+2;;){if(i===void 0){if(t<r)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,r)}if(n===o)break;if(r=i,i=e[++n],t<i)break t}s=e.length;break n}if(!(t>=r)){const o=e[1];t<o&&(n=2,r=o);for(let a=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===a)break;if(i=r,r=e[--n-1],t>=r)break t}s=n,n=0;break n}break e}for(;n<s;){const o=n+s>>>1;t<e[o]?s=o:n=o+1}if(i=e[n],r=e[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,r,t)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=t*i;for(let s=0;s!==i;++s)e[s]=n[r+s];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Ot.prototype,{beforeStart_:Ot.prototype.copySampleValue_,afterEnd_:Ot.prototype.copySampleValue_});function ko(t,e,n,i){Ot.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}ko.prototype=Object.assign(Object.create(Ot.prototype),{constructor:ko,DefaultSettings_:{endingStart:si,endingEnd:si},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let r=t-2,s=t+1,o=i[r],a=i[s];if(o===void 0)switch(this.getSettings_().endingStart){case oi:r=t,o=2*e-n;break;case Br:r=i.length-2,o=e+i[r]-i[r+1];break;default:r=t,o=n}if(a===void 0)switch(this.getSettings_().endingEnd){case oi:s=t,a=2*n-e;break;case Br:s=1,a=n+i[1]-i[0];break;default:s=t-1,a=e}const l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-o),this._weightNext=l/(a-n),this._offsetPrev=r*c,this._offsetNext=s*c},interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=this._offsetPrev,u=this._offsetNext,h=this._weightPrev,f=this._weightNext,d=(n-e)/(i-e),p=d*d,v=p*d,y=-h*v+2*h*p-h*d,g=(1+h)*v+(-1.5-2*h)*p+(-.5+h)*d+1,m=(-1-f)*v+(1.5+f)*p+.5*d,_=f*v-f*p;for(let b=0;b!==o;++b)r[b]=y*s[c+b]+g*s[l+b]+m*s[a+b]+_*s[u+b];return r}});function bs(t,e,n,i){Ot.call(this,t,e,n,i)}bs.prototype=Object.assign(Object.create(Ot.prototype),{constructor:bs,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=t*o,l=a-o,c=(n-e)/(i-e),u=1-c;for(let h=0;h!==o;++h)r[h]=s[l+h]*u+s[a+h]*c;return r}});function Go(t,e,n,i){Ot.call(this,t,e,n,i)}Go.prototype=Object.assign(Object.create(Ot.prototype),{constructor:Go,interpolate_:function(t){return this.copySampleValue_(t-1)}});function ft(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=je.convertArray(e,this.TimeBufferType),this.values=je.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(ft,{toJSON:function(t){const e=t.constructor;let n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:je.convertArray(t.times,Array),values:je.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}}),Object.assign(ft.prototype,{constructor:ft,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Nr,InterpolantFactoryMethodDiscrete:function(t){return new Go(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new bs(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new ko(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case Fr:e=this.InterpolantFactoryMethodDiscrete;break;case Nr:e=this.InterpolantFactoryMethodLinear;break;case ks:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Fr;case this.InterpolantFactoryMethodLinear:return Nr;case this.InterpolantFactoryMethodSmooth:return ks}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let r=0,s=i-1;for(;r!==i&&n[r]<t;)++r;for(;s!==-1&&n[s]>e;)--s;if(++s,r!==0||s!==i){r>=s&&(s=Math.max(s,1),r=s-1);const o=this.getValueSize();this.times=je.arraySlice(n,r,s),this.values=je.arraySlice(this.values,r*o,s*o)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let s=null;for(let o=0;o!==r;o++){const a=n[o];if(typeof a=="number"&&isNaN(a)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,a),t=!1;break}if(s!==null&&s>a){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,a,s),t=!1;break}s=a}if(i!==void 0&&je.isTypedArray(i))for(let o=0,a=i.length;o!==a;++o){const l=i[o];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,l),t=!1;break}}return t},optimize:function(){const t=je.arraySlice(this.times),e=je.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ks,r=t.length-1;let s=1;for(let o=1;o<r;++o){let a=!1;const l=t[o],c=t[o+1];if(l!==c&&(o!==1||l!==t[0]))if(i)a=!0;else{const u=o*n,h=u-n,f=u+n;for(let d=0;d!==n;++d){const p=e[u+d];if(p!==e[h+d]||p!==e[f+d]){a=!0;break}}}if(a){if(o!==s){t[s]=t[o];const u=o*n,h=s*n;for(let f=0;f!==n;++f)e[h+f]=e[u+f]}++s}}if(r>0){t[s]=t[r];for(let o=r*n,a=s*n,l=0;l!==n;++l)e[a+l]=e[o+l];++s}return s!==t.length?(this.times=je.arraySlice(t,0,s),this.values=je.arraySlice(e,0,s*n)):(this.times=t,this.values=e),this},clone:function(){const t=je.arraySlice(this.times,0),e=je.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}});function Vo(t,e,n){ft.call(this,t,e,n)}Vo.prototype=Object.assign(Object.create(ft.prototype),{constructor:Vo,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Fr,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Wo(t,e,n,i){ft.call(this,t,e,n,i)}Wo.prototype=Object.assign(Object.create(ft.prototype),{constructor:Wo,ValueTypeName:"color"});function gr(t,e,n,i){ft.call(this,t,e,n,i)}gr.prototype=Object.assign(Object.create(ft.prototype),{constructor:gr,ValueTypeName:"number"});function jo(t,e,n,i){Ot.call(this,t,e,n,i)}jo.prototype=Object.assign(Object.create(Ot.prototype),{constructor:jo,interpolate_:function(t,e,n,i){const r=this.resultBuffer,s=this.sampleValues,o=this.valueSize,a=(n-e)/(i-e);let l=t*o;for(let c=l+o;l!==c;l+=4)at.slerpFlat(r,0,s,l-o,s,l,a);return r}});function ws(t,e,n,i){ft.call(this,t,e,n,i)}ws.prototype=Object.assign(Object.create(ft.prototype),{constructor:ws,ValueTypeName:"quaternion",DefaultInterpolation:Nr,InterpolantFactoryMethodLinear:function(t){return new jo(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function qo(t,e,n,i){ft.call(this,t,e,n,i)}qo.prototype=Object.assign(Object.create(ft.prototype),{constructor:qo,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Fr,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function yr(t,e,n,i){ft.call(this,t,e,n,i)}yr.prototype=Object.assign(Object.create(ft.prototype),{constructor:yr,ValueTypeName:"vector"});function Ft(t,e=-1,n,i=Gs){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=_e.generateUUID(),this.duration<0&&this.resetDuration()}function Jv(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return gr;case"vector":case"vector2":case"vector3":case"vector4":return yr;case"color":return Wo;case"quaternion":return ws;case"bool":case"boolean":return Vo;case"string":return qo}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function $v(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Jv(t.type);if(t.times===void 0){const n=[],i=[];je.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Ft,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let s=0,o=n.length;s!==o;++s)e.push($v(n[s]).scale(i));const r=new Ft(t.name,t.duration,e,t.blendMode);return r.uuid=t.uuid,r},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let r=0,s=n.length;r!==s;++r)e.push(ft.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const r=e.length,s=[];for(let o=0;o<r;o++){let a=[],l=[];a.push((o+r-1)%r,o,(o+1)%r),l.push(0,1,0);const c=je.getKeyframeOrder(a);a=je.sortedArray(a,1,c),l=je.sortedArray(l,1,c),!i&&a[0]===0&&(a.push(r),l.push(l[0])),s.push(new gr(".morphTargetInfluences["+e[o].name+"]",a,l).scale(1/n))}return new Ft(t,-1,s)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,a=t.length;o<a;o++){const l=t[o],c=l.name.match(r);if(c&&c.length>1){const u=c[1];let h=i[u];h||(i[u]=h=[]),h.push(l)}}const s=[];for(const o in i)s.push(Ft.CreateFromMorphTargetSequence(o,i[o],e,n));return s},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,h,f,d,p){if(f.length!==0){const v=[],y=[];je.flattenJSON(f,v,y,d),v.length!==0&&p.push(new u(h,v,y))}},i=[],r=t.name||"default",s=t.fps||30,o=t.blendMode;let a=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const h=l[u].keys;if(!(!h||h.length===0))if(h[0].morphTargets){const f={};let d;for(d=0;d<h.length;d++)if(h[d].morphTargets)for(let p=0;p<h[d].morphTargets.length;p++)f[h[d].morphTargets[p]]=-1;for(const p in f){const v=[],y=[];for(let g=0;g!==h[d].morphTargets.length;++g){const m=h[d];v.push(m.time),y.push(m.morphTarget===p?1:0)}i.push(new gr(".morphTargetInfluence["+p+"]",v,y))}a=f.length*(s||1)}else{const f=".bones["+e[u].name+"]";n(yr,f+".position",h,"pos",i),n(ws,f+".quaternion",h,"rot",i),n(yr,f+".scale",h,"scl",i)}}return i.length===0?null:new Ft(r,a,i,o)}}),Object.assign(Ft.prototype,{resetDuration:function(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const r=this.tracks[n];e=Math.max(e,r.times[r.times.length-1])}return this.duration=e,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Ft(this.name,this.duration,t,this.blendMode)},toJSON:function(){return Ft.toJSON(this)}});const Ei={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Bl(t,e,n){const i=this;let r=!1,s=0,o=0,a;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(c){o++,r===!1&&i.onStart!==void 0&&i.onStart(c,s,o),r=!0},this.itemEnd=function(c){s++,i.onProgress!==void 0&&i.onProgress(c,s,o),s===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return a?a(c):c},this.setURLModifier=function(c){return a=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){const u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(let u=0,h=l.length;u<h;u+=2){const f=l[u],d=l[u+1];if(f.global&&(f.lastIndex=0),f.test(c))return d}return null}}const wf=new Bl;function Be(t){this.manager=t!==void 0?t:wf,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Be.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise(function(i,r){n.load(t,i,e,r)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const Zt={};function Ut(t){Be.call(this,t)}Ut.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ut,load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ei.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;if(Zt[t]!==void 0){Zt[t].push({onLoad:e,onProgress:n,onError:i});return}const o=/^data:(.*?)(;base64)?,(.*)$/,a=t.match(o);let l;if(a){const c=a[1],u=!!a[2];let h=a[3];h=decodeURIComponent(h),u&&(h=atob(h));try{let f;const d=(this.responseType||"").toLowerCase();switch(d){case"arraybuffer":case"blob":const p=new Uint8Array(h.length);for(let y=0;y<h.length;y++)p[y]=h.charCodeAt(y);d==="blob"?f=new Blob([p.buffer],{type:c}):f=p.buffer;break;case"document":f=new DOMParser().parseFromString(h,c);break;case"json":f=JSON.parse(h);break;default:f=h;break}setTimeout(function(){e&&e(f),r.manager.itemEnd(t)},0)}catch(f){setTimeout(function(){i&&i(f),r.manager.itemError(t),r.manager.itemEnd(t)},0)}}else{Zt[t]=[],Zt[t].push({onLoad:e,onProgress:n,onError:i}),l=new XMLHttpRequest,l.open("GET",t,!0),l.addEventListener("load",function(c){const u=this.response,h=Zt[t];if(delete Zt[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ei.add(t,u);for(let f=0,d=h.length;f<d;f++){const p=h[f];p.onLoad&&p.onLoad(u)}r.manager.itemEnd(t)}else{for(let f=0,d=h.length;f<d;f++){const p=h[f];p.onError&&p.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)}},!1),l.addEventListener("progress",function(c){const u=Zt[t];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onProgress&&d.onProgress(c)}},!1),l.addEventListener("error",function(c){const u=Zt[t];delete Zt[t];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),l.addEventListener("abort",function(c){const u=Zt[t];delete Zt[t];for(let h=0,f=u.length;h<f;h++){const d=u[h];d.onError&&d.onError(c)}r.manager.itemError(t),r.manager.itemEnd(t)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return r.manager.itemStart(t),l},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}});function zl(t){Be.call(this,t)}zl.prototype=Object.assign(Object.create(Be.prototype),{constructor:zl,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Ft.parse(t[n]);e.push(i)}return e}});function Ul(t){Be.call(this,t)}Ul.prototype=Object.assign(Object.create(Be.prototype),{constructor:Ul,load:function(t,e,n,i){const r=this,s=[],o=new dr,a=new Ut(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(r.withCredentials);let l=0;function c(u){a.load(t[u],function(h){const f=r.parse(h,!0);s[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(o.minFilter=ot),o.image=s,o.format=f.format,o.needsUpdate=!0,e&&e(o))},n,i)}if(Array.isArray(t))for(let u=0,h=t.length;u<h;++u)c(u);else a.load(t,function(u){const h=r.parse(u,!0);if(h.isCubemap){const f=h.mipmaps.length/h.mipmapCount;for(let d=0;d<f;d++){s[d]={mipmaps:[]};for(let p=0;p<h.mipmapCount;p++)s[d].mipmaps.push(h.mipmaps[d*h.mipmapCount+p]),s[d].format=h.format,s[d].width=h.width,s[d].height=h.height}o.image=s}else o.image.width=h.width,o.image.height=h.height,o.mipmaps=h.mipmaps;h.mipmapCount===1&&(o.minFilter=ot),o.format=h.format,o.needsUpdate=!0,e&&e(o)},n,i);return o}});function vr(t){Be.call(this,t)}vr.prototype=Object.assign(Object.create(Be.prototype),{constructor:vr,load:function(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ei.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;const o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),Ei.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(c){o.removeEventListener("load",a,!1),o.removeEventListener("error",l,!1),i&&i(c),r.manager.itemError(t),r.manager.itemEnd(t)}return o.addEventListener("load",a,!1),o.addEventListener("error",l,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}});function Xo(t){Be.call(this,t)}Xo.prototype=Object.assign(Object.create(Be.prototype),{constructor:Xo,load:function(t,e,n,i){const r=new ln,s=new vr(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;function a(l){s.load(t[l],function(c){r.images[l]=c,o++,o===6&&(r.needsUpdate=!0,e&&e(r))},void 0,i)}for(let l=0;l<t.length;++l)a(l);return r}});function Yo(t){Be.call(this,t)}Yo.prototype=Object.assign(Object.create(Be.prototype),{constructor:Yo,load:function(t,e,n,i){const r=this,s=new Sn,o=new Ut(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(t,function(a){const l=r.parse(a);l&&(l.image!==void 0?s.image=l.image:l.data!==void 0&&(s.image.width=l.width,s.image.height=l.height,s.image.data=l.data),s.wrapS=l.wrapS!==void 0?l.wrapS:xt,s.wrapT=l.wrapT!==void 0?l.wrapT:xt,s.magFilter=l.magFilter!==void 0?l.magFilter:ot,s.minFilter=l.minFilter!==void 0?l.minFilter:ot,s.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.encoding!==void 0&&(s.encoding=l.encoding),l.flipY!==void 0&&(s.flipY=l.flipY),l.format!==void 0&&(s.format=l.format),l.type!==void 0&&(s.type=l.type),l.mipmaps!==void 0&&(s.mipmaps=l.mipmaps,s.minFilter=Ui),l.mipmapCount===1&&(s.minFilter=ot),s.needsUpdate=!0,e&&e(s,l))},n,i),s}});function Zo(t){Be.call(this,t)}Zo.prototype=Object.assign(Object.create(Be.prototype),{constructor:Zo,load:function(t,e,n,i){const r=new Ue,s=new vr(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(o){r.image=o;const a=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;r.format=a?Rn:At,r.needsUpdate=!0,e!==void 0&&e(r)},n,i),r}});function me(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(me.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),r=0;e.push(0);for(let s=1;s<=t;s++)n=this.getPoint(s/t),r+=n.distanceTo(i),e.push(r),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const r=n.length;let s;e?s=e:s=t*n[r-1];let o=0,a=r-1,l;for(;o<=a;)if(i=Math.floor(o+(a-o)/2),l=n[i]-s,l<0)o=i+1;else if(l>0)a=i-1;else{a=i;break}if(i=a,n[i]===s)return i/(r-1);const c=n[i],h=n[i+1]-c,f=(s-c)/h;return(i+f)/(r-1)},getTangent:function(t,e){let i=t-1e-4,r=t+1e-4;i<0&&(i=0),r>1&&(r=1);const s=this.getPoint(i),o=this.getPoint(r),a=e||(s.isVector2?new G:new M);return a.copy(o).sub(s).normalize(),a},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new M,i=[],r=[],s=[],o=new M,a=new Ae;for(let f=0;f<=t;f++){const d=f/t;i[f]=this.getTangentAt(d,new M),i[f].normalize()}r[0]=new M,s[0]=new M;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),u=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),u<=l&&(l=u,n.set(0,1,0)),h<=l&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),s[0].crossVectors(i[0],r[0]);for(let f=1;f<=t;f++){if(r[f]=r[f-1].clone(),s[f]=s[f-1].clone(),o.crossVectors(i[f-1],i[f]),o.length()>Number.EPSILON){o.normalize();const d=Math.acos(_e.clamp(i[f-1].dot(i[f]),-1,1));r[f].applyMatrix4(a.makeRotationAxis(o,d))}s[f].crossVectors(i[f],r[f])}if(e===!0){let f=Math.acos(_e.clamp(r[0].dot(r[t]),-1,1));f/=t,i[0].dot(o.crossVectors(r[0],r[t]))>0&&(f=-f);for(let d=1;d<=t;d++)r[d].applyMatrix4(a.makeRotationAxis(i[d],f*d)),s[d].crossVectors(i[d],r[d])}return{tangents:i,normals:r,binormals:s}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function Nt(t,e,n,i,r,s,o,a){me.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=r||0,this.aEndAngle=s||2*Math.PI,this.aClockwise=o||!1,this.aRotation=a||0}Nt.prototype=Object.create(me.prototype),Nt.prototype.constructor=Nt,Nt.prototype.isEllipseCurve=!0,Nt.prototype.getPoint=function(t,e){const n=e||new G,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const s=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(s?r=0:r=i),this.aClockwise===!0&&!s&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+t*r;let a=this.aX+this.xRadius*Math.cos(o),l=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),h=a-this.aX,f=l-this.aY;a=h*c-f*u+this.aX,l=h*u+f*c+this.aY}return n.set(a,l)},Nt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Nt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Nt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function xr(t,e,n,i,r,s){Nt.call(this,t,e,n,n,i,r,s),this.type="ArcCurve"}xr.prototype=Object.create(Nt.prototype),xr.prototype.constructor=xr,xr.prototype.isArcCurve=!0;function Hl(){let t=0,e=0,n=0,i=0;function r(s,o,a,l){t=s,e=a,n=-3*s+3*o-2*a-l,i=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return t+e*s+n*o+i*a}}}const Jo=new M,kl=new Hl,Gl=new Hl,Vl=new Hl;function mt(t=[],e=!1,n="centripetal",i=.5){me.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}mt.prototype=Object.create(me.prototype),mt.prototype.constructor=mt,mt.prototype.isCatmullRomCurve3=!0,mt.prototype.getPoint=function(t,e=new M){const n=e,i=this.points,r=i.length,s=(r-(this.closed?0:1))*t;let o=Math.floor(s),a=s-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:a===0&&o===r-1&&(o=r-2,a=1);let l,c;this.closed||o>0?l=i[(o-1)%r]:(Jo.subVectors(i[0],i[1]).add(i[0]),l=Jo);const u=i[o%r],h=i[(o+1)%r];if(this.closed||o+2<r?c=i[(o+2)%r]:(Jo.subVectors(i[r-1],i[r-2]).add(i[r-1]),c=Jo),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let d=Math.pow(l.distanceToSquared(u),f),p=Math.pow(u.distanceToSquared(h),f),v=Math.pow(h.distanceToSquared(c),f);p<1e-4&&(p=1),d<1e-4&&(d=p),v<1e-4&&(v=p),kl.initNonuniformCatmullRom(l.x,u.x,h.x,c.x,d,p,v),Gl.initNonuniformCatmullRom(l.y,u.y,h.y,c.y,d,p,v),Vl.initNonuniformCatmullRom(l.z,u.z,h.z,c.z,d,p,v)}else this.curveType==="catmullrom"&&(kl.initCatmullRom(l.x,u.x,h.x,c.x,this.tension),Gl.initCatmullRom(l.y,u.y,h.y,c.y,this.tension),Vl.initCatmullRom(l.z,u.z,h.z,c.z,this.tension));return n.set(kl.calc(a),Gl.calc(a),Vl.calc(a)),n},mt.prototype.copy=function(t){me.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},mt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},mt.prototype.fromJSON=function(t){me.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new M().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function Mf(t,e,n,i,r){const s=(i-e)*.5,o=(r-n)*.5,a=t*t,l=t*a;return(2*n-2*i+s+o)*l+(-3*n+3*i-2*s-o)*a+s*t+n}function Kv(t,e){const n=1-t;return n*n*e}function Qv(t,e){return 2*(1-t)*t*e}function ex(t,e){return t*t*e}function Ms(t,e,n,i){return Kv(t,e)+Qv(t,n)+ex(t,i)}function tx(t,e){const n=1-t;return n*n*n*e}function nx(t,e){const n=1-t;return 3*n*n*t*e}function ix(t,e){return 3*(1-t)*t*t*e}function rx(t,e){return t*t*t*e}function Ss(t,e,n,i,r){return tx(t,e)+nx(t,n)+ix(t,i)+rx(t,r)}function Jt(t=new G,e=new G,n=new G,i=new G){me.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}Jt.prototype=Object.create(me.prototype),Jt.prototype.constructor=Jt,Jt.prototype.isCubicBezierCurve=!0,Jt.prototype.getPoint=function(t,e=new G){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Ss(t,i.x,r.x,s.x,o.x),Ss(t,i.y,r.y,s.y,o.y)),n},Jt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Jt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Jt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function hn(t=new M,e=new M,n=new M,i=new M){me.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}hn.prototype=Object.create(me.prototype),hn.prototype.constructor=hn,hn.prototype.isCubicBezierCurve3=!0,hn.prototype.getPoint=function(t,e=new M){const n=e,i=this.v0,r=this.v1,s=this.v2,o=this.v3;return n.set(Ss(t,i.x,r.x,s.x,o.x),Ss(t,i.y,r.y,s.y,o.y),Ss(t,i.z,r.z,s.z,o.z)),n},hn.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},hn.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},hn.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function Et(t=new G,e=new G){me.call(this),this.type="LineCurve",this.v1=t,this.v2=e}Et.prototype=Object.create(me.prototype),Et.prototype.constructor=Et,Et.prototype.isLineCurve=!0,Et.prototype.getPoint=function(t,e=new G){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Et.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Et.prototype.getTangent=function(t,e){const n=e||new G;return n.copy(this.v2).sub(this.v1).normalize(),n},Et.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Et.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Et.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function $t(t=new M,e=new M){me.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}$t.prototype=Object.create(me.prototype),$t.prototype.constructor=$t,$t.prototype.isLineCurve3=!0,$t.prototype.getPoint=function(t,e=new M){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},$t.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},$t.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},$t.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},$t.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Kt(t=new G,e=new G,n=new G){me.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}Kt.prototype=Object.create(me.prototype),Kt.prototype.constructor=Kt,Kt.prototype.isQuadraticBezierCurve=!0,Kt.prototype.getPoint=function(t,e=new G){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Ms(t,i.x,r.x,s.x),Ms(t,i.y,r.y,s.y)),n},Kt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Kt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Kt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function un(t=new M,e=new M,n=new M){me.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}un.prototype=Object.create(me.prototype),un.prototype.constructor=un,un.prototype.isQuadraticBezierCurve3=!0,un.prototype.getPoint=function(t,e=new M){const n=e,i=this.v0,r=this.v1,s=this.v2;return n.set(Ms(t,i.x,r.x,s.x),Ms(t,i.y,r.y,s.y),Ms(t,i.z,r.z,s.z)),n},un.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},un.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},un.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Qt(t=[]){me.call(this),this.type="SplineCurve",this.points=t}Qt.prototype=Object.create(me.prototype),Qt.prototype.constructor=Qt,Qt.prototype.isSplineCurve=!0,Qt.prototype.getPoint=function(t,e=new G){const n=e,i=this.points,r=(i.length-1)*t,s=Math.floor(r),o=r-s,a=i[s===0?s:s-1],l=i[s],c=i[s>i.length-2?i.length-1:s+1],u=i[s>i.length-3?i.length-1:s+2];return n.set(Mf(o,a.x,l.x,c.x,u.x),Mf(o,a.y,l.y,c.y,u.y)),n},Qt.prototype.copy=function(t){me.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this},Qt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t},Qt.prototype.fromJSON=function(t){me.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new G().fromArray(i))}return this};var Wl=Object.freeze({__proto__:null,ArcCurve:xr,CatmullRomCurve3:mt,CubicBezierCurve:Jt,CubicBezierCurve3:hn,EllipseCurve:Nt,LineCurve:Et,LineCurve3:$t,QuadraticBezierCurve:Kt,QuadraticBezierCurve3:un,SplineCurve:Qt});function $n(){me.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}$n.prototype=Object.assign(Object.create(me.prototype),{constructor:$n,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new Et(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const r=n[i]-e,s=this.curves[i],o=s.getLength(),a=o===0?0:1-r/o;return s.getPointAt(a)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const s=r[i],o=s&&s.isEllipseCurve?t*2:s&&(s.isLineCurve||s.isLineCurve3)?1:s&&s.isSplineCurve?t*s.points.length:t,a=s.getPoints(o);for(let l=0;l<a.length;l++){const c=a[l];n&&n.equals(c)||(e.push(c),n=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){me.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=me.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){me.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Wl[i.type]().fromJSON(i))}return this}});function en(t){$n.call(this),this.type="Path",this.currentPoint=new G,t&&this.setFromPoints(t)}en.prototype=Object.assign(Object.create($n.prototype),{constructor:en,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new Et(this.currentPoint.clone(),new G(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const r=new Kt(this.currentPoint.clone(),new G(t,e),new G(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,r,s){const o=new Jt(this.currentPoint.clone(),new G(t,e),new G(n,i),new G(r,s));return this.curves.push(o),this.currentPoint.set(r,s),this},splineThru:function(t){const e=[this.currentPoint.clone()].concat(t),n=new Qt(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,r,s){const o=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+o,e+a,n,i,r,s),this},absarc:function(t,e,n,i,r,s){return this.absellipse(t,e,n,n,i,r,s),this},ellipse:function(t,e,n,i,r,s,o,a){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,r,s,o,a),this},absellipse:function(t,e,n,i,r,s,o,a){const l=new Nt(t,e,n,i,r,s,o,a);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(t){return $n.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=$n.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return $n.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function Kn(t){en.call(this,t),this.uuid=_e.generateUUID(),this.type="Shape",this.holes=[]}Kn.prototype=Object.assign(Object.create(en.prototype),{constructor:Kn,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){en.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const t=en.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){en.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new en().fromJSON(i))}return this}});function We(t,e=1){de.call(this),this.type="Light",this.color=new ae(t),this.intensity=e}We.prototype=Object.assign(Object.create(de.prototype),{constructor:We,isLight:!0,copy:function(t){return de.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=de.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function $o(t,e,n){We.call(this,t,n),this.type="HemisphereLight",this.position.copy(de.DefaultUp),this.updateMatrix(),this.groundColor=new ae(e)}$o.prototype=Object.assign(Object.create(We.prototype),{constructor:$o,isHemisphereLight:!0,copy:function(t){return We.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function An(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new G(512,512),this.map=null,this.mapPass=null,this.matrix=new Ae,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kr,this._frameExtents=new G(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}Object.assign(An.prototype,{_projScreenMatrix:new Ae,_lightPositionWorld:new M,_lookTarget:new M,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,r=this._lookTarget,s=this._lightPositionWorld;s.setFromMatrixPosition(t.matrixWorld),e.position.copy(s),r.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(r),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function jl(){An.call(this,new et(50,1,.5,500)),this.focus=1}jl.prototype=Object.assign(Object.create(An.prototype),{constructor:jl,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=_e.RAD2DEG*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||i!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=i,e.far=r,e.updateProjectionMatrix()),An.prototype.updateMatrices.call(this,t)}});function Ko(t,e,n,i,r,s){We.call(this,t,e),this.type="SpotLight",this.position.copy(de.DefaultUp),this.updateMatrix(),this.target=new de,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=s!==void 0?s:1,this.shadow=new jl}Ko.prototype=Object.assign(Object.create(We.prototype),{constructor:Ko,isSpotLight:!0,copy:function(t){return We.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function ql(){An.call(this,new et(90,1,.5,500)),this._frameExtents=new G(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new M(1,0,0),new M(-1,0,0),new M(0,0,1),new M(0,0,-1),new M(0,1,0),new M(0,-1,0)],this._cubeUps=[new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,1,0),new M(0,0,1),new M(0,0,-1)]}ql.prototype=Object.assign(Object.create(An.prototype),{constructor:ql,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,i=this.matrix,r=this._lightPositionWorld,s=this._lookTarget,o=this._projScreenMatrix;r.setFromMatrixPosition(t.matrixWorld),n.position.copy(r),s.copy(n.position),s.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(s),n.updateMatrixWorld(),i.makeTranslation(-r.x,-r.y,-r.z),o.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(o)}});function Qo(t,e,n,i){We.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new ql}Qo.prototype=Object.assign(Object.create(We.prototype),{constructor:Qo,isPointLight:!0,copy:function(t){return We.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function _r(t=-1,e=1,n=1,i=-1,r=.1,s=2e3){an.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=r,this.far=s,this.updateProjectionMatrix()}_r.prototype=Object.assign(Object.create(an.prototype),{constructor:_r,isOrthographicCamera:!0,copy:function(t,e){return an.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,r,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=s,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-t,s=n+t,o=i+e,a=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,s=r+l*this.view.width,o-=c*this.view.offsetY,a=o-c*this.view.height}this.projectionMatrix.makeOrthographic(r,s,o,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=de.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function Xl(){An.call(this,new _r(-5,5,5,-5,.5,500))}Xl.prototype=Object.assign(Object.create(An.prototype),{constructor:Xl,isDirectionalLightShadow:!0,updateMatrices:function(t){An.prototype.updateMatrices.call(this,t)}});function ea(t,e){We.call(this,t,e),this.type="DirectionalLight",this.position.copy(de.DefaultUp),this.updateMatrix(),this.target=new de,this.shadow=new Xl}ea.prototype=Object.assign(Object.create(We.prototype),{constructor:ea,isDirectionalLight:!0,copy:function(t){return We.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function ta(t,e){We.call(this,t,e),this.type="AmbientLight"}ta.prototype=Object.assign(Object.create(We.prototype),{constructor:ta,isAmbientLight:!0});function na(t,e,n,i){We.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}na.prototype=Object.assign(Object.create(We.prototype),{constructor:na,isRectAreaLight:!0,copy:function(t){return We.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=We.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class Sf{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new M)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.282095),n.addScaledVector(o[1],.488603*r),n.addScaledVector(o[2],.488603*s),n.addScaledVector(o[3],.488603*i),n.addScaledVector(o[4],1.092548*(i*r)),n.addScaledVector(o[5],1.092548*(r*s)),n.addScaledVector(o[6],.315392*(3*s*s-1)),n.addScaledVector(o[7],1.092548*(i*s)),n.addScaledVector(o[8],.546274*(i*i-r*r)),n}getIrradianceAt(e,n){const i=e.x,r=e.y,s=e.z,o=this.coefficients;return n.copy(o[0]).multiplyScalar(.886227),n.addScaledVector(o[1],2*.511664*r),n.addScaledVector(o[2],2*.511664*s),n.addScaledVector(o[3],2*.511664*i),n.addScaledVector(o[4],2*.429043*i*r),n.addScaledVector(o[5],2*.429043*r*s),n.addScaledVector(o[6],.743125*s*s-.247708),n.addScaledVector(o[7],2*.429043*i*s),n.addScaledVector(o[8],.429043*(i*i-r*r)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,n+r*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,n+r*3);return e}static getBasisAt(e,n){const i=e.x,r=e.y,s=e.z;n[0]=.282095,n[1]=.488603*r,n[2]=.488603*s,n[3]=.488603*i,n[4]=1.092548*i*r,n[5]=1.092548*r*s,n[6]=.315392*(3*s*s-1),n[7]=1.092548*i*s,n[8]=.546274*(i*i-r*r)}}function Ht(t,e){We.call(this,void 0,e),this.type="LightProbe",this.sh=t!==void 0?t:new Sf}Ht.prototype=Object.assign(Object.create(We.prototype),{constructor:Ht,isLightProbe:!0,copy:function(t){return We.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=We.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}});function ia(t){Be.call(this,t),this.textures={}}ia.prototype=Object.assign(Object.create(Be.prototype),{constructor:ia,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e=this.textures;function n(r){return e[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),e[r]}const i=new Zv[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=new ae().setHex(t.sheen)),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.morphNormals!==void 0&&(i.morphNormals=t.morphNormals),t.dithering!==void 0&&(i.dithering=t.dithering),t.vertexTangents!==void 0&&(i.vertexTangents=t.vertexTangents),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const r in t.uniforms){const s=t.uniforms[r];switch(i.uniforms[r]={},s.type){case"t":i.uniforms[r].value=n(s.value);break;case"c":i.uniforms[r].value=new ae().setHex(s.value);break;case"v2":i.uniforms[r].value=new G().fromArray(s.value);break;case"v3":i.uniforms[r].value=new M().fromArray(s.value);break;case"v4":i.uniforms[r].value=new He().fromArray(s.value);break;case"m3":i.uniforms[r].value=new Ct().fromArray(s.value);break;case"m4":i.uniforms[r].value=new Ae().fromArray(s.value);break;default:i.uniforms[r].value=s.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(const r in t.extensions)i.extensions[r]=t.extensions[r];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let r=t.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new G().fromArray(r)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new G().fromArray(t.clearcoatNormalScale)),t.transmission!==void 0&&(i.transmission=t.transmission),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const Yl={decodeText:function(t){if(typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function Es(){ye.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}Es.prototype=Object.assign(Object.create(ye.prototype),{constructor:Es,isInstancedBufferGeometry:!0,copy:function(t){return ye.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t=ye.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}});function ra(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),xe.call(this,t,e,n),this.meshPerAttribute=i||1}ra.prototype=Object.assign(Object.create(xe.prototype),{constructor:ra,isInstancedBufferAttribute:!0,copy:function(t){return xe.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=xe.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});function sa(t){Be.call(this,t)}sa.prototype=Object.assign(Object.create(Be.prototype),{constructor:sa,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{e(r.parse(JSON.parse(o)))}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)},parse:function(t){const e={},n={};function i(f,d){if(e[d]!==void 0)return e[d];const v=f.interleavedBuffers[d],y=r(f,v.buffer),g=Jr(v.type,y),m=new Dt(g,v.stride);return m.uuid=v.uuid,e[d]=m,m}function r(f,d){if(n[d]!==void 0)return n[d];const v=f.arrayBuffers[d],y=new Uint32Array(v).buffer;return n[d]=y,y}const s=t.isInstancedBufferGeometry?new Es:new ye,o=t.data.index;if(o!==void 0){const f=Jr(o.type,o.array);s.setIndex(new xe(f,1))}const a=t.data.attributes;for(const f in a){const d=a[f];let p;if(d.isInterleavedBufferAttribute){const v=i(t.data,d.data);p=new jn(v,d.itemSize,d.offset,d.normalized)}else{const v=Jr(d.type,d.array),y=d.isInstancedBufferAttribute?ra:xe;p=new y(v,d.itemSize,d.normalized)}d.name!==void 0&&(p.name=d.name),s.setAttribute(f,p)}const l=t.data.morphAttributes;if(l)for(const f in l){const d=l[f],p=[];for(let v=0,y=d.length;v<y;v++){const g=d[v];let m;if(g.isInterleavedBufferAttribute){const _=i(t.data,g.data);m=new jn(_,g.itemSize,g.offset,g.normalized)}else{const _=Jr(g.type,g.array);m=new xe(_,g.itemSize,g.normalized)}g.name!==void 0&&(m.name=g.name),p.push(m)}s.morphAttributes[f]=p}t.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(u!==void 0)for(let f=0,d=u.length;f!==d;++f){const p=u[f];s.addGroup(p.start,p.count,p.materialIndex)}const h=t.data.boundingSphere;if(h!==void 0){const f=new M;h.center!==void 0&&f.fromArray(h.center),s.boundingSphere=new Fn(f,h.radius)}return t.name&&(s.name=t.name),t.userData&&(s.userData=t.userData),s}});class sx extends Be{constructor(e){super(e)}load(e,n,i,r){const s=this,o=this.path===""?Yl.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Ut(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){r!==void 0&&r(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,n)},i,r)}parse(e,n){const i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){n!==void 0&&n(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,i),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),n!==void 0){let h=!1;for(const f in o)if(o[f]instanceof HTMLImageElement){h=!0;break}h===!1&&n(c)}return c}parseShapes(e){const n={};if(e!==void 0)for(let i=0,r=e.length;i<r;i++){const s=new Kn().fromJSON(e[i]);n[s.uuid]=s}return n}parseSkeletons(e,n){const i={},r={};if(n.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new us().fromJSON(e[s],r);i[a.uuid]=a}return i}parseGeometries(e,n){const i={};let r;if(e!==void 0){const s=new sa;for(let o=0,a=e.length;o<a;o++){let l;const c=e[o];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":l=new Mt[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":l=new Mt[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":l=new Mt[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":l=new Mt[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":l=new Mt[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":l=new Mt[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":l=new Mt[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":l=new Mt[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":l=new Mt[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":l=new Mt[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":l=new Mt[c.type](new Wl[c.path.type]().fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":l=new Mt[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":l=new Mt[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":r=[];for(let h=0,f=c.shapes.length;h<f;h++){const d=n[c.shapes[h]];r.push(d)}l=new Mt[c.type](r,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":r=[];for(let h=0,f=c.shapes.length;h<f;h++){const d=n[c.shapes[h]];r.push(d)}const u=c.options.extrudePath;u!==void 0&&(c.options.extrudePath=new Wl[u.type]().fromJSON(u)),l=new Mt[c.type](r,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":l=s.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}l.uuid=c.uuid,c.name!==void 0&&(l.name=c.name),l.isBufferGeometry===!0&&c.userData!==void 0&&(l.userData=c.userData),i[c.uuid]=l}}return i}parseMaterials(e,n){const i={},r={};if(e!==void 0){const s=new ia;s.setTextures(n);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const h=l.materials[u];i[h.uuid]===void 0&&(i[h.uuid]=s.parse(h)),c.push(i[h.uuid])}r[l.uuid]=c}else i[l.uuid]===void 0&&(i[l.uuid]=s.parse(l)),r[l.uuid]=i[l.uuid]}}return r}parseAnimations(e){const n={};if(e!==void 0)for(let i=0;i<e.length;i++){const r=e[i],s=Ft.parse(r);n[s.uuid]=s}return n}parseImages(e,n){const i=this,r={};let s;function o(l){return i.manager.itemStart(l),s.load(l,function(){i.manager.itemEnd(l)},void 0,function(){i.manager.itemError(l),i.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:i.resourcePath+c;return o(u)}else return l.data?{data:Jr(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new Bl(n);s=new vr(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){r[h.uuid]=[];for(let d=0,p=f.length;d<p;d++){const v=f[d],y=a(v);y!==null&&(y instanceof HTMLImageElement?r[h.uuid].push(y):r[h.uuid].push(new Sn(y.data,y.width,y.height)))}}else{const d=a(h.url);d!==null&&(r[h.uuid]=d)}}}return r}parseTextures(e,n){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),n[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let l;const c=n[a.image];Array.isArray(c)?(l=new ln(c),c.length===6&&(l.needsUpdate=!0)):(c&&c.data?l=new Sn(c.data,c.width,c.height):l=new Ue(c),c&&(l.needsUpdate=!0)),l.uuid=a.uuid,a.name!==void 0&&(l.name=a.name),a.mapping!==void 0&&(l.mapping=i(a.mapping,ox)),a.offset!==void 0&&l.offset.fromArray(a.offset),a.repeat!==void 0&&l.repeat.fromArray(a.repeat),a.center!==void 0&&l.center.fromArray(a.center),a.rotation!==void 0&&(l.rotation=a.rotation),a.wrap!==void 0&&(l.wrapS=i(a.wrap[0],Ef),l.wrapT=i(a.wrap[1],Ef)),a.format!==void 0&&(l.format=a.format),a.type!==void 0&&(l.type=a.type),a.encoding!==void 0&&(l.encoding=a.encoding),a.minFilter!==void 0&&(l.minFilter=i(a.minFilter,Tf)),a.magFilter!==void 0&&(l.magFilter=i(a.magFilter,Tf)),a.anisotropy!==void 0&&(l.anisotropy=a.anisotropy),a.flipY!==void 0&&(l.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(l.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(l.unpackAlignment=a.unpackAlignment),r[a.uuid]=l}return r}parseObject(e,n,i,r){let s;function o(u){return n[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",u),n[u]}function a(u){if(u!==void 0){if(Array.isArray(u)){const h=[];for(let f=0,d=u.length;f<d;f++){const p=u[f];i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),h.push(i[p])}return h}return i[u]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",u),i[u]}}let l,c;switch(e.type){case"Scene":s=new Al,e.background!==void 0&&Number.isInteger(e.background)&&(s.background=new ae(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new fo(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new uo(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new et(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new _r(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new ta(e.color,e.intensity);break;case"DirectionalLight":s=new ea(e.color,e.intensity);break;case"PointLight":s=new Qo(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new na(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new Ko(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new $o(e.color,e.groundColor,e.intensity);break;case"LightProbe":s=new Ht().fromJSON(e);break;case"SkinnedMesh":l=o(e.geometry),c=a(e.material),s=new cs(l,c),e.bindMode!==void 0&&(s.bindMode=e.bindMode),e.bindMatrix!==void 0&&s.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(s.skeleton=e.skeleton);break;case"Mesh":l=o(e.geometry),c=a(e.material),s=new Ve(l,c);break;case"InstancedMesh":l=o(e.geometry),c=a(e.material);const u=e.count,h=e.instanceMatrix;s=new xo(l,c,u),s.instanceMatrix=new xe(new Float32Array(h.array),16);break;case"LOD":s=new ls;break;case"Line":s=new zt(o(e.geometry),a(e.material));break;case"LineLoop":s=new bo(o(e.geometry),a(e.material));break;case"LineSegments":s=new wt(o(e.geometry),a(e.material));break;case"PointCloud":case"Points":s=new fr(o(e.geometry),a(e.material));break;case"Sprite":s=new as(a(e.material));break;case"Group":s=new Wn;break;case"Bone":s=new hs;break;default:s=new de}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(s.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){const u=e.children;for(let h=0;h<u.length;h++)s.add(this.parseObject(u[h],n,i,r))}if(e.animations!==void 0){const u=e.animations;for(let h=0;h<u.length;h++){const f=u[h];s.animations.push(r[f])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate);const u=e.levels;for(let h=0;h<u.length;h++){const f=u[h],d=s.getObjectByProperty("uuid",f.object);d!==void 0&&s.addLevel(d,f.distance)}}return s}bindSkeletons(e,n){Object.keys(n).length!==0&&e.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const r=n[i.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(r,i.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const ox={UVMapping:Ns,CubeReflectionMapping:Ar,CubeRefractionMapping:Cr,EquirectangularReflectionMapping:Bs,EquirectangularRefractionMapping:zs,CubeUVReflectionMapping:zi,CubeUVRefractionMapping:Lr},Ef={RepeatWrapping:Pr,ClampToEdgeWrapping:xt,MirroredRepeatWrapping:Rr},Tf={NearestFilter:nt,NearestMipmapNearestFilter:Us,NearestMipmapLinearFilter:Hs,LinearFilter:ot,LinearMipmapNearestFilter:za,LinearMipmapLinearFilter:Ui};function Zl(t){typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Be.call(this,t),this.options={premultiplyAlpha:"none"}}Zl.prototype=Object.assign(Object.create(Be.prototype),{constructor:Zl,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,s=Ei.get(t);if(s!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(s),r.manager.itemEnd(t)},0),s;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(t,o).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,r.options)}).then(function(a){Ei.add(t,a),e&&e(a),r.manager.itemEnd(t)}).catch(function(a){i&&i(a),r.manager.itemError(t),r.manager.itemEnd(t)}),r.manager.itemStart(t)}});function Jl(){this.type="ShapePath",this.color=new ae,this.subPaths=[],this.currentPath=null}Object.assign(Jl.prototype,{moveTo:function(t,e){return this.currentPath=new en,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,r,s){return this.currentPath.bezierCurveTo(t,e,n,i,r,s),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(g){const m=[];for(let _=0,b=g.length;_<b;_++){const w=g[_],x=new Kn;x.curves=w.curves,m.push(x)}return m}function i(g,m){const _=m.length;let b=!1;for(let w=_-1,x=0;x<_;w=x++){let T=m[w],I=m[x],L=I.x-T.x,P=I.y-T.y;if(Math.abs(P)>Number.EPSILON){if(P<0&&(T=m[x],L=-L,I=m[w],P=-P),g.y<T.y||g.y>I.y)continue;if(g.y===T.y){if(g.x===T.x)return!0}else{const O=P*(g.x-T.x)-L*(g.y-T.y);if(O===0)return!0;if(O<0)continue;b=!b}}else{if(g.y!==T.y)continue;if(I.x<=g.x&&g.x<=T.x||T.x<=g.x&&g.x<=I.x)return!0}}return b}const r=En.isClockWise,s=this.subPaths;if(s.length===0)return[];if(e===!0)return n(s);let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Kn,l.curves=a.curves,c.push(l),c;let u=!r(s[0].getPoints());u=t?!u:u;const h=[],f=[];let d=[],p=0,v;f[p]=void 0,d[p]=[];for(let g=0,m=s.length;g<m;g++)a=s[g],v=a.getPoints(),o=r(v),o=t?!o:o,o?(!u&&f[p]&&p++,f[p]={s:new Kn,p:v},f[p].s.curves=a.curves,u&&p++,d[p]=[]):d[p].push({h:a,p:v[0]});if(!f[0])return n(s);if(f.length>1){let g=!1;const m=[];for(let _=0,b=f.length;_<b;_++)h[_]=[];for(let _=0,b=f.length;_<b;_++){const w=d[_];for(let x=0;x<w.length;x++){const T=w[x];let I=!0;for(let L=0;L<f.length;L++)i(T.p,f[L].p)&&(_!==L&&m.push({froms:_,tos:L,hole:x}),I?(I=!1,h[L].push(T)):g=!0);I&&h[_].push(T)}}m.length>0&&(g||(d=h))}let y;for(let g=0,m=f.length;g<m;g++){l=f[g].s,c.push(l),y=d[g];for(let _=0,b=y.length;_<b;_++)l.holes.push(y[_].h)}return c}});class Af{constructor(e){Object.defineProperty(this,"isFont",{value:!0}),this.type="Font",this.data=e}generateShapes(e,n=100){const i=[],r=ax(e,n,this.data);for(let s=0,o=r.length;s<o;s++)Array.prototype.push.apply(i,r[s].toShapes());return i}}function ax(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),r=e/n.resolution,s=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=[];let a=0,l=0;for(let c=0;c<i.length;c++){const u=i[c];if(u===`
`)a=0,l-=s;else{const h=lx(u,r,a,l,n);a+=h.offsetX,o.push(h.path)}}return o}function lx(t,e,n,i,r){const s=r.glyphs[t]||r.glyphs["?"];if(!s){console.error('THREE.Font: character "'+t+'" does not exists in font family '+r.familyName+".");return}const o=new Jl;let a,l,c,u,h,f,d,p;if(s.o){const v=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let y=0,g=v.length;y<g;)switch(v[y++]){case"m":a=v[y++]*e+n,l=v[y++]*e+i,o.moveTo(a,l);break;case"l":a=v[y++]*e+n,l=v[y++]*e+i,o.lineTo(a,l);break;case"q":c=v[y++]*e+n,u=v[y++]*e+i,h=v[y++]*e+n,f=v[y++]*e+i,o.quadraticCurveTo(h,f,c,u);break;case"b":c=v[y++]*e+n,u=v[y++]*e+i,h=v[y++]*e+n,f=v[y++]*e+i,d=v[y++]*e+n,p=v[y++]*e+i,o.bezierCurveTo(h,f,d,p,c,u);break}}return{offsetX:s.ha*e,path:o}}function $l(t){Be.call(this,t)}$l.prototype=Object.assign(Object.create(Be.prototype),{constructor:$l,load:function(t,e,n,i){const r=this,s=new Ut(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){let a;try{a=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),a=JSON.parse(o.substring(65,o.length-2))}const l=r.parse(a);e&&e(l)},n,i)},parse:function(t){return new Af(t)}});let oa;const Kl={getContext:function(){return oa===void 0&&(oa=new(window.AudioContext||window.webkitAudioContext)),oa},setContext:function(t){oa=t}};function aa(t){Be.call(this,t)}aa.prototype=Object.assign(Object.create(Be.prototype),{constructor:aa,load:function(t,e,n,i){const r=this,s=new Ut(r.manager);s.setResponseType("arraybuffer"),s.setPath(r.path),s.setRequestHeader(r.requestHeader),s.setWithCredentials(r.withCredentials),s.load(t,function(o){try{const a=o.slice(0);Kl.getContext().decodeAudioData(a,function(c){e(c)})}catch(a){i?i(a):console.error(a),r.manager.itemError(t)}},n,i)}});function Ql(t,e,n){Ht.call(this,void 0,n);const i=new ae().set(t),r=new ae().set(e),s=new M(i.r,i.g,i.b),o=new M(r.r,r.g,r.b),a=Math.sqrt(Math.PI),l=a*Math.sqrt(.75);this.sh.coefficients[0].copy(s).add(o).multiplyScalar(a),this.sh.coefficients[1].copy(s).sub(o).multiplyScalar(l)}Ql.prototype=Object.assign(Object.create(Ht.prototype),{constructor:Ql,isHemisphereLightProbe:!0,copy:function(t){return Ht.prototype.copy.call(this,t),this},toJSON:function(t){return Ht.prototype.toJSON.call(this,t)}});function ec(t,e){Ht.call(this,void 0,e);const n=new ae().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}ec.prototype=Object.assign(Object.create(Ht.prototype),{constructor:ec,isAmbientLightProbe:!0,copy:function(t){return Ht.prototype.copy.call(this,t),this},toJSON:function(t){return Ht.prototype.toJSON.call(this,t)}});const Cf=new Ae,Lf=new Ae;function Pf(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new et,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new et,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(Pf.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const i=t.projectionMatrix.clone(),r=e.eyeSep/2,s=r*e.near/e.focus,o=e.near*Math.tan(_e.DEG2RAD*e.fov*.5)/e.zoom;let a,l;Lf.elements[12]=-r,Cf.elements[12]=r,a=-o*e.aspect+s,l=o*e.aspect+s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(i),a=-o*e.aspect-s,l=o*e.aspect-s,i.elements[0]=2*e.near/(l-a),i.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Lf),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Cf)}});class Rf{constructor(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=If(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=If();e=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=e}return e}}function If(){return(typeof performance>"u"?Date:performance).now()}const Ti=new M,Df=new at,cx=new M,Ai=new M;class hx extends de{constructor(){super(),this.type="AudioListener",this.context=Kl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Rf}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const n=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ti,Df,cx),Ai.set(0,0,-1).applyQuaternion(Df),n.positionX){const r=this.context.currentTime+this.timeDelta;n.positionX.linearRampToValueAtTime(Ti.x,r),n.positionY.linearRampToValueAtTime(Ti.y,r),n.positionZ.linearRampToValueAtTime(Ti.z,r),n.forwardX.linearRampToValueAtTime(Ai.x,r),n.forwardY.linearRampToValueAtTime(Ai.y,r),n.forwardZ.linearRampToValueAtTime(Ai.z,r),n.upX.linearRampToValueAtTime(i.x,r),n.upY.linearRampToValueAtTime(i.y,r),n.upZ.linearRampToValueAtTime(i.z,r)}else n.setPosition(Ti.x,Ti.y,Ti.z),n.setOrientation(Ai.x,Ai.y,Ai.z,i.x,i.y,i.z)}}class tc extends de{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const n=this.context.createBufferSource();return n.buffer=this.buffer,n.loop=this.loop,n.loopStart=this.loopStart,n.loopEnd=this.loopEnd,n.onended=this.onEnded.bind(this),n.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=n,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,n=this.filters.length;e<n;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Ci=new M,Of=new at,ux=new M,Li=new M;class fx extends tc{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,n,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=n,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ci,Of,ux),Li.set(0,0,1).applyQuaternion(Of);const n=this.panner;if(n.positionX){const i=this.context.currentTime+this.listener.timeDelta;n.positionX.linearRampToValueAtTime(Ci.x,i),n.positionY.linearRampToValueAtTime(Ci.y,i),n.positionZ.linearRampToValueAtTime(Ci.z,i),n.orientationX.linearRampToValueAtTime(Li.x,i),n.orientationY.linearRampToValueAtTime(Li.y,i),n.orientationZ.linearRampToValueAtTime(Li.z,i)}else n.setPosition(Ci.x,Ci.y,Ci.z),n.setOrientation(Li.x,Li.y,Li.z)}}class Ff{constructor(e,n=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=n,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const n=this.getFrequencyData();for(let i=0;i<n.length;i++)e+=n[i];return e/n.length}}function nc(t,e,n){this.binding=t,this.valueSize=n;let i,r,s;switch(e){case"quaternion":i=this._slerp,r=this._slerpAdditive,s=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,s=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,s=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=s,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(nc.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,r=t*i+i;let s=this.cumulativeWeight;if(s===0){for(let o=0;o!==i;++o)n[r+o]=n[o];s=e}else{s+=e;const o=e/s;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=s},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,r=this.cumulativeWeight,s=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const a=e*this._origIndex;this._mixBufferRegion(n,i,a,1-r,e)}s>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let a=e,l=e+e;a!==l;++a)if(n[a]!==n[a+e]){o.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let r=n,s=i;r!==s;++r)e[r]=e[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,r){if(i>=.5)for(let s=0;s!==r;++s)t[e+s]=t[n+s]},_slerp:function(t,e,n,i){at.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,r){const s=this._workIndex*r;at.multiplyQuaternionsFlat(t,s,t,e,t,n),at.slerpFlat(t,e,t,e,t,s,i)},_lerp:function(t,e,n,i,r){const s=1-i;for(let o=0;o!==r;++o){const a=e+o;t[a]=t[a]*s+t[n+o]*i}},_lerpAdditive:function(t,e,n,i,r){for(let s=0;s!==r;++s){const o=e+s;t[o]=t[o]+t[n+s]*i}}});const ic="\\[\\]\\.:\\/",dx=new RegExp("["+ic+"]","g"),rc="[^"+ic+"]",px="[^"+ic.replace("\\.","")+"]",mx=/((?:WC+[\/:])*)/.source.replace("WC",rc),gx=/(WCOD+)?/.source.replace("WCOD",px),yx=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",rc),vx=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",rc),xx=new RegExp("^"+mx+gx+yx+vx+"$"),_x=["material","materials","bones"];function Nf(t,e,n){const i=n||gt.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(Nf.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function gt(t,e,n){this.path=e,this.parsedPath=n||gt.parseTrackName(e),this.node=gt.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(gt,{Composite:Nf,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new gt.Composite(t,e,n):new gt(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(dx,"")},parseTrackName:function(t){const e=xx.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);_x.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(r){for(let s=0;s<r.length;s++){const o=r[s];if(o.name===e||o.uuid===e)return o;const a=n(o.children);if(a)return a}return null},i=n(t.children);if(i)return i}return null}}),Object.assign(gt.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)e[n++]=i[r]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++]},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){const i=this.resolvedProperty;for(let r=0,s=i.length;r!==s;++r)i[r]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let r=e.propertyIndex;if(t||(t=gt.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let c=0;c<t.length;c++)if(t[c].name===l){l=c;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(l!==void 0){if(t[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[l]}}const s=t[i];if(s===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}let o=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[r]!==void 0&&(r=t.morphTargetDictionary[r])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}a=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else s.fromArray!==void 0&&s.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(a=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][o]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(gt.prototype,{_getValue_unbound:gt.prototype.getValue,_setValue_unbound:gt.prototype.setValue});function Bf(){this.uuid=_e.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(Bf.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,s=r.length;let o,a=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],f=h.uuid;let d=e[f];if(d===void 0){d=a++,e[f]=d,t.push(h);for(let p=0,v=s;p!==v;++p)r[p].push(new gt(h,n[p],i[p]))}else if(d<l){o=t[d];const p=--l,v=t[p];e[v.uuid]=d,t[d]=v,e[f]=p,t[p]=h;for(let y=0,g=s;y!==g;++y){const m=r[y],_=m[p];let b=m[d];m[d]=_,b===void 0&&(b=new gt(h,n[y],i[y])),m[p]=b}}else t[d]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let s=0,o=arguments.length;s!==o;++s){const a=arguments[s],l=a.uuid,c=e[l];if(c!==void 0&&c>=r){const u=r++,h=t[u];e[h.uuid]=c,t[c]=h,e[l]=u,t[u]=a;for(let f=0,d=i;f!==d;++f){const p=n[f],v=p[u],y=p[c];p[c]=v,p[u]=y}}}this.nCachedObjects_=r},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,s=t.length;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=e[c];if(u!==void 0)if(delete e[c],u<r){const h=--r,f=t[h],d=--s,p=t[d];e[f.uuid]=u,t[u]=f,e[p.uuid]=h,t[h]=p,t.pop();for(let v=0,y=i;v!==y;++v){const g=n[v],m=g[h],_=g[d];g[u]=m,g[h]=_,g.pop()}}else{const h=--s,f=t[h];h>0&&(e[f.uuid]=u),t[u]=f,t.pop();for(let d=0,p=i;d!==p;++d){const v=n[d];v[u]=v[h],v.pop()}}}this.nCachedObjects_=r},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const r=this._bindings;if(i!==void 0)return r[i];const s=this._paths,o=this._parsedPaths,a=this._objects,l=a.length,c=this.nCachedObjects_,u=new Array(l);i=r.length,n[t]=i,s.push(t),o.push(e),r.push(u);for(let h=c,f=a.length;h!==f;++h){const d=a[h];u[h]=new gt(d,t,e)}return u},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length-1,a=s[o],l=t[o];e[l]=n,s[n]=a,s.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}});class bx{constructor(e,n,i=null,r=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=r;const s=n.tracks,o=s.length,a=new Array(o),l={endingStart:si,endingEnd:si};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=su,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,n),this.warp(a,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+i,c[0]=e/o,c[1]=n/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const o=this._updateTime(n),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Za:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case Gs:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(e)[0];n*=r,e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n)}}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let r=this.time+e,s=this._loopCount;const o=i===ou;if(e===0)return s===-1?r:o&&(s&1)===1?n-r:r;if(i===ru){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=n)r=n;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=n||r<0){const a=Math.floor(r/n);r-=n*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?n:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return n-r}return r}_setEndings(e,n,i){const r=this._interpolantSettings;i?(r.endingStart=oi,r.endingEnd=oi):(e?r.endingStart=this.zeroSlopeAtStart?oi:si:r.endingStart=Br,n?r.endingEnd=this.zeroSlopeAtEnd?oi:si:r.endingEnd=Br)}_scheduleFading(e,n,i){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=n,a[1]=s+e,l[1]=i,this}}function sc(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}sc.prototype=Object.assign(Object.create(Vt.prototype),{constructor:sc,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,r=i.length,s=t._propertyBindings,o=t._interpolants,a=n.uuid,l=this._bindingsByRootAndName;let c=l[a];c===void 0&&(c={},l[a]=c);for(let u=0;u!==r;++u){const h=i[u],f=h.name;let d=c[f];if(d!==void 0)s[u]=d;else{if(d=s[u],d!==void 0){d._cacheIndex===null&&(++d.referenceCount,this._addInactiveBinding(d,a,f));continue}const p=e&&e._propertyBindings[u].binding.parsedPath;d=new nc(gt.create(n,f,p),h.ValueTypeName,h.getValueSize()),++d.referenceCount,this._addInactiveBinding(d,a,f),s[u]=d}o[u].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,r=this._actionsByClip[i];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,r=this._actionsByClip;let s=r[e];if(s===void 0)s={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=s;else{const o=s.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=i.length,i.push(t),s.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const r=t._clip.uuid,s=this._actionsByClip,o=s[r],a=o.knownActions,l=a[a.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,a[c]=l,a.pop(),t._byClipCacheIndex=null;const u=o.actionByRoot,h=(t._localRoot||this._root).uuid;delete u[h],a.length===0&&delete s[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const r=e[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,r=this._bindings;let s=i[e];s===void 0&&(s={},i[e]=s),s[n]=t,t._cacheIndex=r.length,r.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,r=n.path,s=this._bindingsByRootAndName,o=s[i],a=e[e.length-1],l=t._cacheIndex;a._cacheIndex=l,e[l]=a,e.pop(),delete o[r],Object.keys(o).length===0&&delete s[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,r=e[i];t._cacheIndex=i,e[i]=t,r._cacheIndex=n,e[n]=r},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new bs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,r=e[i];t.__cacheIndex=i,e[i]=t,r.__cacheIndex=n,e[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,r=i.uuid;let s=typeof t=="string"?Ft.findByName(i,t):t;const o=s!==null?s.uuid:t,a=this._actionsByClip[o];let l=null;if(n===void 0&&(s!==null?n=s.blendMode:n=Gs),a!==void 0){const u=a.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;l=a.knownActions[0],s===null&&(s=l._clip)}if(s===null)return null;const c=new bx(this,s,e,n);return this._bindAction(c,l),this._addInactiveAction(c,o,r),c},existingAction:function(t,e){const n=e||this._root,i=n.uuid,r=typeof t=="string"?Ft.findByName(n,t):t,s=r?r.uuid:t,o=this._actionsByClip[s];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,r=Math.sign(t),s=this._accuIndex^=1;for(let l=0;l!==n;++l)e[l]._update(i,t,r,s);const o=this._bindings,a=this._nActiveBindings;for(let l=0;l!==a;++l)o[l].apply(s);return this},setTime:function(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const s=r.knownActions;for(let o=0,a=s.length;o!==a;++o){const l=s[o];this._deactivateAction(l);const c=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,e[c]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const s in n){const o=n[s].actionByRoot,a=o[e];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}const i=this._bindingsByRootAndName,r=i[e];if(r!==void 0)for(const s in r){const o=r[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class la{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new la(this.value.clone===void 0?this.value:this.value.clone())}}function oc(t,e,n){Dt.call(this,t,e),this.meshPerAttribute=n||1}oc.prototype=Object.assign(Object.create(Dt.prototype),{constructor:oc,isInstancedInterleavedBuffer:!0,copy:function(t){return Dt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Dt.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Dt.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function ac(t,e,n,i,r){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}Object.defineProperty(ac.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}}),Object.assign(ac.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}});function lc(t,e,n,i){this.ray=new Xi(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new al,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function zf(t,e){return t.distance-e.distance}function cc(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0){const r=t.children;for(let s=0,o=r.length;s<o;s++)cc(r[s],e,n,!0)}}Object.assign(lc.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e,n){const i=n||[];return cc(t,this,i,e),i.sort(zf),i},intersectObjects:function(t,e,n){const i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let r=0,s=t.length;r<s;r++)cc(t[r],this,i,e);return i.sort(zf),i}});class hc{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(_e.clamp(n/this.radius,-1,1))),this}}class wx{constructor(e,n,i){return this.radius=e!==void 0?e:1,this.theta=n!==void 0?n:0,this.y=i!==void 0?i:0,this}set(e,n,i){return this.radius=e,this.theta=n,this.y=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=n,this}}const Uf=new G;class Hf{constructor(e,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new G(1/0,1/0),this.max=n!==void 0?n:new G(-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Uf.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new G),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new G),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new G),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new G),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Uf.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const kf=new M,ca=new M;class Gf{constructor(e,n){this.start=e!==void 0?e:new M,this.end=n!==void 0?n:new M}set(e,n){return this.start.copy(e),this.end.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new M),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new M),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,n){return n===void 0&&(console.warn("THREE.Line3: .at() target is now required"),n=new M),this.delta(n).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,n){kf.subVectors(e,this.start),ca.subVectors(this.end,this.start);const i=ca.dot(ca);let s=ca.dot(kf)/i;return n&&(s=_e.clamp(s,0,1)),s}closestPointToPoint(e,n,i){const r=this.closestPointToPointParameter(e,n);return i===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),i=new M),this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}}function Ts(t){de.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}Ts.prototype=Object.create(de.prototype),Ts.prototype.constructor=Ts,Ts.prototype.isImmediateRenderObject=!0;const Vf=new M;class Mx extends de{constructor(e,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new ye,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}i.setAttribute("position",new le(r,3));const s=new qe({fog:!1,toneMapped:!1});this.cone=new wt(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,n=e*Math.tan(this.light.angle);this.cone.scale.set(n,n,e),Vf.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Vf),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Qn=new M,ha=new Ae,uc=new Ae;class Wf extends wt{constructor(e){const n=jf(e),i=new ye,r=[],s=[],o=new ae(0,0,1),a=new ae(0,1,0);for(let c=0;c<n.length;c++){const u=n[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new le(r,3)),i.setAttribute("color",new le(s,3));const l=new qe({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,r=i.getAttribute("position");uc.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<n.length;s++){const a=n[s];a.parent&&a.parent.isBone&&(ha.multiplyMatrices(uc,a.matrixWorld),Qn.setFromMatrixPosition(ha),r.setXYZ(o,Qn.x,Qn.y,Qn.z),ha.multiplyMatrices(uc,a.parent.matrixWorld),Qn.setFromMatrixPosition(ha),r.setXYZ(o+1,Qn.x,Qn.y,Qn.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function jf(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,jf(t.children[n]));return e}class Sx extends Ve{constructor(e,n,i){const r=new _s(n,4,2),s=new Pt({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Ex=new M,qf=new ae,Xf=new ae;class Tx extends de{constructor(e,n,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;const r=new vs(n);r.rotateY(Math.PI*.5),this.material=new Pt({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new xe(o,3)),this.add(new Ve(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const n=e.geometry.getAttribute("color");qf.copy(this.light.color),Xf.copy(this.light.groundColor);for(let i=0,r=n.count;i<r;i++){const s=i<r/2?qf:Xf;n.setXYZ(i,s.r,s.g,s.b)}n.needsUpdate=!0}e.lookAt(Ex.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Yf extends wt{constructor(e=10,n=10,i=4473924,r=8947848){i=new ae(i),r=new ae(r);const s=n/2,o=e/n,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=n;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const v=f===s?i:r;v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3,v.toArray(c,d),d+=3}const u=new ye;u.setAttribute("position",new le(l,3)),u.setAttribute("color",new le(c,3));const h=new qe({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class Ax extends wt{constructor(e=10,n=16,i=8,r=64,s=4473924,o=8947848){s=new ae(s),o=new ae(o);const a=[],l=[];for(let h=0;h<=n;h++){const f=h/n*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const v=h&1?s:o;l.push(v.r,v.g,v.b),l.push(v.r,v.g,v.b)}for(let h=0;h<=i;h++){const f=h&1?s:o,d=e-e/i*h;for(let p=0;p<r;p++){let v=p/r*(Math.PI*2),y=Math.sin(v)*d,g=Math.cos(v)*d;a.push(y,0,g),l.push(f.r,f.g,f.b),v=(p+1)/r*(Math.PI*2),y=Math.sin(v)*d,g=Math.cos(v)*d,a.push(y,0,g),l.push(f.r,f.g,f.b)}}const c=new ye;c.setAttribute("position",new le(a,3)),c.setAttribute("color",new le(l,3));const u=new qe({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const Zf=new M,ua=new M,Jf=new M;class Cx extends de{constructor(e,n,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,n===void 0&&(n=1);let r=new ye;r.setAttribute("position",new le([-n,n,0,n,n,0,n,-n,0,-n,-n,0,-n,n,0],3));const s=new qe({fog:!1,toneMapped:!1});this.lightPlane=new zt(r,s),this.add(this.lightPlane),r=new ye,r.setAttribute("position",new le([0,0,0,0,0,1],3)),this.targetLine=new zt(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Zf.setFromMatrixPosition(this.light.matrixWorld),ua.setFromMatrixPosition(this.light.target.matrixWorld),Jf.subVectors(ua,Zf),this.lightPlane.lookAt(ua),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ua),this.targetLine.scale.z=Jf.length()}}const fa=new M,Ze=new an;class Lx extends wt{constructor(e){const n=new ye,i=new qe({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new ae(16755200),l=new ae(16711680),c=new ae(43775),u=new ae(16777215),h=new ae(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",u),f("p","c",h),f("cn1","cn2",h),f("cn3","cn4",h),f("cf1","cf2",h),f("cf3","cf4",h);function f(p,v,y){d(p,y),d(v,y)}function d(p,v){r.push(0,0,0),s.push(v.r,v.g,v.b),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}n.setAttribute("position",new le(r,3)),n.setAttribute("color",new le(s,3)),super(n,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,n=this.pointMap,i=1,r=1;Ze.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Je("c",n,e,Ze,0,0,-1),Je("t",n,e,Ze,0,0,1),Je("n1",n,e,Ze,-i,-r,-1),Je("n2",n,e,Ze,i,-r,-1),Je("n3",n,e,Ze,-i,r,-1),Je("n4",n,e,Ze,i,r,-1),Je("f1",n,e,Ze,-i,-r,1),Je("f2",n,e,Ze,i,-r,1),Je("f3",n,e,Ze,-i,r,1),Je("f4",n,e,Ze,i,r,1),Je("u1",n,e,Ze,i*.7,r*1.1,-1),Je("u2",n,e,Ze,-i*.7,r*1.1,-1),Je("u3",n,e,Ze,0,r*2,-1),Je("cf1",n,e,Ze,-i,0,1),Je("cf2",n,e,Ze,i,0,1),Je("cf3",n,e,Ze,0,-r,1),Je("cf4",n,e,Ze,0,r,1),Je("cn1",n,e,Ze,-i,0,-1),Je("cn2",n,e,Ze,i,0,-1),Je("cn3",n,e,Ze,0,-r,-1),Je("cn4",n,e,Ze,0,r,-1),e.getAttribute("position").needsUpdate=!0}}function Je(t,e,n,i,r,s,o){fa.set(r,s,o).unproject(i);const a=e[t];if(a!==void 0){const l=n.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],fa.x,fa.y,fa.z)}}const da=new vn;class $f extends wt{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new ye;s.setIndex(new xe(i,1)),s.setAttribute("position",new xe(r,3)),super(s,new qe({color:n,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&da.setFromObject(this.object),da.isEmpty())return;const n=da.min,i=da.max,r=this.geometry.attributes.position,s=r.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=n.x,s[4]=i.y,s[5]=i.z,s[6]=n.x,s[7]=n.y,s[8]=i.z,s[9]=i.x,s[10]=n.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=n.z,s[15]=n.x,s[16]=i.y,s[17]=n.z,s[18]=n.x,s[19]=n.y,s[20]=n.z,s[21]=i.x,s[22]=n.y,s[23]=n.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return wt.prototype.copy.call(this,e),this.object=e.object,this}}class Px extends wt{constructor(e,n=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ye;s.setIndex(new xe(i,1)),s.setAttribute("position",new le(r,3)),super(s,new qe({color:n,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const n=this.box;n.isEmpty()||(n.getCenter(this.position),n.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class Rx extends zt{constructor(e,n=1,i=16776960){const r=i,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new ye;o.setAttribute("position",new le(s,3)),o.computeBoundingSphere(),super(o,new qe({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=n;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new ye;l.setAttribute("position",new le(a,3)),l.computeBoundingSphere(),this.add(new Ve(l,new Pt({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let n=-this.plane.constant;Math.abs(n)<1e-8&&(n=1e-8),this.scale.set(.5*this.size,.5*this.size,n),this.children[0].material.side=n<0?Qe:Ni,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Kf=new M;let pa,fc;class Ix extends de{constructor(e,n,i,r,s,o){super(),this.type="ArrowHelper",e===void 0&&(e=new M(0,0,1)),n===void 0&&(n=new M(0,0,0)),i===void 0&&(i=1),r===void 0&&(r=16776960),s===void 0&&(s=.2*i),o===void 0&&(o=.2*s),pa===void 0&&(pa=new ye,pa.setAttribute("position",new le([0,0,0,0,1,0],3)),fc=new pr(0,.5,1,5,1),fc.translate(0,-.5,0)),this.position.copy(n),this.line=new zt(pa,new qe({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ve(fc,new Pt({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Kf.set(e.z,0,-e.x).normalize();const n=Math.acos(e.y);this.quaternion.setFromAxisAngle(Kf,n)}}setLength(e,n,i){n===void 0&&(n=.2*e),i===void 0&&(i=.2*n),this.line.scale.set(1,Math.max(1e-4,e-n),1),this.line.updateMatrix(),this.cone.scale.set(i,n,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Qf extends wt{constructor(e=1){const n=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new ye;r.setAttribute("position",new le(n,3)),r.setAttribute("color",new le(i,3));const s=new qe({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}}const ed=new Float32Array(1),Dx=new Int32Array(ed.buffer),Ox={toHalfFloat:function(t){ed[0]=t;const e=Dx[0];let n=e>>16&32768,i=e>>12&2047;const r=e>>23&255;return r<103?n:r>142?(n|=31744,n|=(r==255?0:1)&&e&8388607,n):r<113?(i|=2048,n|=(i>>114-r)+(i>>113-r&1),n):(n|=r-112<<10|i>>1,n+=i&1,n)}},br=4,ei=8,fn=Math.pow(2,ei),td=[.125,.215,.35,.446,.526,.582],nd=ei-br+1+td.length,wr=20,dn={[_t]:0,[zr]:1,[Ws]:2,[Ja]:3,[$a]:4,[Ka]:5,[Vs]:6},Pi=new Pt({side:Qe,depthWrite:!1,depthTest:!1}),Fx=new Ve(new pi,Pi),dc=new _r,{_lodPlanes:As,_sizeLods:id,_sigmas:ma}=zx(),rd=new ae;let pc=null;const Ri=(1+Math.sqrt(5))/2,Mr=1/Ri,sd=[new M(1,1,1),new M(-1,1,1),new M(1,1,-1),new M(-1,1,-1),new M(0,Ri,Mr),new M(0,Ri,-Mr),new M(Mr,0,Ri),new M(-Mr,0,Ri),new M(Ri,Mr,0),new M(-Ri,Mr,0)];function od(t){const e=Math.max(t.r,t.g,t.b),n=Math.min(Math.max(Math.ceil(Math.log2(e)),-128),127);return t.multiplyScalar(Math.pow(2,-n)),(n+128)/255}class Nx{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=Ux(wr),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,n=0,i=.1,r=100){pc=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,i,r,s),n>0&&this._blur(s,0,0,n),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=cd(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=ld(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<As.length;e++)As[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(pc),e.scissorTest=!1,ga(e,0,0,e.width,e.height)}_fromTexture(e){pc=this._renderer.getRenderTarget();const n=this._allocateTargets(e);return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(e){const n={magFilter:nt,minFilter:nt,generateMipmaps:!1,type:Hi,format:bh,encoding:Bx(e)?e.encoding:Ws,depthBuffer:!1},i=ad(n);return i.depthBuffer=!e,this._pingPongRenderTarget=ad(n),i}_compileMaterial(e){const n=new Ve(As[0],e);this._renderer.compile(n,dc)}_sceneToCubeUV(e,n,i,r){const a=new et(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.outputEncoding,d=u.toneMapping;u.getClearColor(rd),u.toneMapping=ii,u.outputEncoding=_t,u.autoClear=!1;let p=!1;const v=e.background;if(v){if(v.isColor){Pi.color.copy(v).convertSRGBToLinear(),e.background=null;const y=od(Pi.color);Pi.opacity=y,p=!0}}else{Pi.color.copy(rd).convertSRGBToLinear();const y=od(Pi.color);Pi.opacity=y,p=!0}for(let y=0;y<6;y++){const g=y%3;g==0?(a.up.set(0,l[y],0),a.lookAt(c[y],0,0)):g==1?(a.up.set(0,0,l[y]),a.lookAt(0,c[y],0)):(a.up.set(0,l[y],0),a.lookAt(0,0,c[y])),ga(r,g*fn,y>2?fn:0,fn,fn),u.setRenderTarget(r),p&&u.render(Fx,a),u.render(e,a)}u.toneMapping=d,u.outputEncoding=f,u.autoClear=h}_textureToCubeUV(e,n){const i=this._renderer;e.isCubeTexture?this._cubemapShader==null&&(this._cubemapShader=cd()):this._equirectShader==null&&(this._equirectShader=ld());const r=e.isCubeTexture?this._cubemapShader:this._equirectShader,s=new Ve(As[0],r),o=r.uniforms;o.envMap.value=e,e.isCubeTexture||o.texelSize.value.set(1/e.image.width,1/e.image.height),o.inputEncoding.value=dn[e.encoding],o.outputEncoding.value=dn[n.texture.encoding],ga(n,0,0,3*fn,2*fn),i.setRenderTarget(n),i.render(s,dc)}_applyPMREM(e){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<nd;r++){const s=Math.sqrt(ma[r]*ma[r]-ma[r-1]*ma[r-1]),o=sd[(r-1)%sd.length];this._blur(e,r-1,r,s,o)}n.autoClear=i}_blur(e,n,i,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,n,i,r,"latitudinal",s),this._halfBlur(o,e,i,i,r,"longitudinal",s)}_halfBlur(e,n,i,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Ve(As[r],c),f=c.uniforms,d=id[i]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*wr-1),v=s/p,y=isFinite(s)?1+Math.floor(u*v):wr;y>wr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${wr}`);const g=[];let m=0;for(let x=0;x<wr;++x){const T=x/v,I=Math.exp(-T*T/2);g.push(I),x==0?m+=I:x<y&&(m+=2*I)}for(let x=0;x<g.length;x++)g[x]=g[x]/m;f.envMap.value=e.texture,f.samples.value=y,f.weights.value=g,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a),f.dTheta.value=p,f.mipInt.value=ei-i,f.inputEncoding.value=dn[e.texture.encoding],f.outputEncoding.value=dn[e.texture.encoding];const _=id[r],b=3*Math.max(0,fn-2*_),w=(r===0?0:2*fn)+2*_*(r>ei-br?r-ei+br:0);ga(n,b,w,3*_,2*_),l.setRenderTarget(n),l.render(h,dc)}}function Bx(t){return t===void 0||t.type!==Hi?!1:t.encoding===_t||t.encoding===zr||t.encoding===Vs}function zx(){const t=[],e=[],n=[];let i=ei;for(let r=0;r<nd;r++){const s=Math.pow(2,i);e.push(s);let o=1/s;r>ei-br?o=td[r-ei+br-1]:r==0&&(o=0),n.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,f=6,d=3,p=2,v=1,y=new Float32Array(d*f*h),g=new Float32Array(p*f*h),m=new Float32Array(v*f*h);for(let b=0;b<h;b++){const w=b%3*2/3-1,x=b>2?0:-1,T=[w,x,0,w+2/3,x,0,w+2/3,x+1,0,w,x,0,w+2/3,x+1,0,w,x+1,0];y.set(T,d*f*b),g.set(u,p*f*b);const I=[b,b,b,b,b,b];m.set(I,v*f*b)}const _=new ye;_.setAttribute("position",new xe(y,d)),_.setAttribute("uv",new xe(g,p)),_.setAttribute("faceIndex",new xe(m,v)),t.push(_),i>br&&i--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function ad(t){const e=new In(3*fn,3*fn,t);return e.texture.mapping=zi,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function ga(t,e,n,i,r){t.viewport.set(e,n,i,r),t.scissor.set(e,n,i,r)}function Ux(t){const e=new Float32Array(t),n=new M(0,1,0);return new Tn({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n},inputEncoding:{value:dn[_t]},outputEncoding:{value:dn[_t]}},vertexShader:mc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${gc()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:gn,depthTest:!1,depthWrite:!1})}function ld(){const t=new G(1,1);return new Tn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:dn[_t]},outputEncoding:{value:dn[_t]}},vertexShader:mc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${gc()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:gn,depthTest:!1,depthWrite:!1})}function cd(){return new Tn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:dn[_t]},outputEncoding:{value:dn[_t]}},vertexShader:mc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${gc()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:gn,depthTest:!1,depthWrite:!1})}function mc(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function gc(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function Hx(t,e,n,i,r,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new gl(t,e,n,r,s,o)}const kx=0,Gx=1,Vx=0,Wx=1,jx=2;function qx(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t}function Xx(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t}function Yx(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new fr(t,e)}function Zx(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new as(t)}function Jx(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new fr(t,e)}function $x(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Yt(t)}function Kx(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Yt(t)}function Qx(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Yt(t)}function e0(t,e,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new M(t,e,n)}function t0(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new xe(t,e).setUsage(li)}function n0(t,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Vr(t,e)}function i0(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Wr(t,e)}function r0(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new jr(t,e)}function s0(t,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new qr(t,e)}function o0(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new fi(t,e)}function a0(t,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Xr(t,e)}function l0(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new di(t,e)}function c0(t,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new le(t,e)}function h0(t,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Zr(t,e)}me.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(me.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(en.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});function hd(t){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),mt.call(this,t),this.type="catmullrom",this.closed=!0}hd.prototype=Object.create(mt.prototype);function ud(t){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),mt.call(this,t),this.type="catmullrom"}ud.prototype=Object.create(mt.prototype);function yc(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),mt.call(this,t),this.type="catmullrom"}yc.prototype=Object.create(mt.prototype),Object.assign(yc.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function u0(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new Qf(t)}function f0(t,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new $f(t,e)}function d0(t,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new wt(new Dl(t.geometry),new qe({color:e!==void 0?e:16777215}))}Yf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Wf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function p0(t,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new wt(new Nl(t.geometry),new qe({color:e!==void 0?e:16777215}))}Object.assign(Be.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Yl.extractUrlBase(t)}}),Be.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function m0(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Ut(t)}function g0(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Yo(t)}Object.assign(Hf.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(vn.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Fn.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Kr.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},Gf.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(_e,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),_e.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),_e.ceilPowerOfTwo(t)}}),Object.assign(Ct.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Object.assign(Ae.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new M().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,r,s)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),sn.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},Object.assign(at.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(Xi.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(dt.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(dt,{barycoordFromPoint:function(t,e,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),dt.getBarycoord(t,e,n,i,r)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),dt.getNormal(t,e,n,i)}}),Object.assign(Kn.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new yi(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new xs(this,t)}}),Object.assign(G.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(M.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(He.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(de.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(de.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Ve.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Ve.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),au},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(ls.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(us.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),cs.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(me.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),et.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(We.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(xe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===li},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(li)}}}),Object.assign(xe.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?li:Ur),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ye.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new xe(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(ye.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(Es.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(lc.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Dt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===li},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Dt.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?li:Ur),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(yi.prototype,{getArrays:function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")}}),Object.assign(Al.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties(la.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(ve.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new ae}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===Pa}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Jn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Zn.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(bt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(is.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(is.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?zr:_t}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Yu.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function y0(t,e,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ml(t,n)}Object.defineProperties(In.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(tc.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new aa().load(t,function(i){e.setBuffer(i)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),Ff.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},mi.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},mi.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};const v0={merge:function(t,e,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");let i;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,n)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}};ci.crossOrigin=void 0,ci.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new Zo;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},ci.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new Xo;r.setCrossOrigin(this.crossOrigin);const s=r.load(t,n,void 0,i);return e&&(s.mapping=e),s},ci.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ci.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function x0(){console.error("THREE.CanvasRenderer has been removed")}function _0(){console.error("THREE.JSONLoader has been removed.")}const b0={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function w0(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Aa}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Aa);const Ii=Nc(Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:hh,AddEquation:ni,AddOperation:oh,AdditiveAnimationBlendMode:Za,AdditiveBlending:Ra,AlphaFormat:vh,AlwaysDepth:Qc,AlwaysStencilFunc:fu,AmbientLight:ta,AmbientLightProbe:ec,AnimationClip:Ft,AnimationLoader:zl,AnimationMixer:sc,AnimationObjectGroup:Bf,AnimationUtils:je,ArcCurve:xr,ArrayCamera:ho,ArrowHelper:Ix,Audio:tc,AudioAnalyser:Ff,AudioContext:Kl,AudioListener:hx,AudioLoader:aa,AxesHelper:Qf,AxisHelper:u0,BackSide:Qe,BasicDepthPacking:cu,BasicShadowMap:Bd,BinaryTextureLoader:g0,Bone:hs,BooleanKeyframeTrack:Vo,BoundingBoxHelper:f0,Box2:Hf,Box3:vn,Box3Helper:Px,BoxBufferGeometry:pi,BoxGeometry:pi,BoxHelper:$f,BufferAttribute:xe,BufferGeometry:ye,BufferGeometryLoader:sa,ByteType:fh,Cache:Ei,Camera:an,CameraHelper:Lx,CanvasRenderer:x0,CanvasTexture:ds,CatmullRomCurve3:mt,CineonToneMapping:ch,CircleBufferGeometry:So,CircleGeometry:So,ClampToEdgeWrapping:xt,Clock:Rf,ClosedSplineCurve3:hd,Color:ae,ColorKeyframeTrack:Wo,CompressedTexture:dr,CompressedTextureLoader:Ul,ConeBufferGeometry:Eo,ConeGeometry:Eo,CubeCamera:mi,CubeReflectionMapping:Ar,CubeRefractionMapping:Cr,CubeTexture:ln,CubeTextureLoader:Xo,CubeUVReflectionMapping:zi,CubeUVRefractionMapping:Lr,CubicBezierCurve:Jt,CubicBezierCurve3:hn,CubicInterpolant:ko,CullFaceBack:Ca,CullFaceFront:zc,CullFaceFrontBack:Nd,CullFaceNone:Bc,Curve:me,CurvePath:$n,CustomBlending:Hc,CustomToneMapping:uh,CylinderBufferGeometry:pr,CylinderGeometry:pr,Cylindrical:wx,DataTexture:Sn,DataTexture2DArray:sr,DataTexture3D:or,DataTextureLoader:Yo,DataUtils:Ox,DecrementStencilOp:Yd,DecrementWrapStencilOp:Jd,DefaultLoadingManager:wf,DepthFormat:ri,DepthStencilFormat:Gi,DepthTexture:ps,DirectionalLight:ea,DirectionalLightHelper:Cx,DiscreteInterpolant:Go,DodecahedronBufferGeometry:To,DodecahedronGeometry:To,DoubleSide:Er,DstAlphaFactor:Xc,DstColorFactor:Zc,DynamicBufferAttribute:t0,DynamicCopyUsage:hp,DynamicDrawUsage:li,DynamicReadUsage:ap,EdgesGeometry:Dl,EdgesHelper:d0,EllipseCurve:Nt,EqualDepth:th,EqualStencilFunc:ep,EquirectangularReflectionMapping:Bs,EquirectangularRefractionMapping:zs,Euler:Zi,EventDispatcher:Vt,ExtrudeBufferGeometry:yi,ExtrudeGeometry:yi,Face3:gl,Face4:Hx,FaceColors:Wx,FileLoader:Ut,FlatShading:Pa,Float16BufferAttribute:Yr,Float32Attribute:c0,Float32BufferAttribute:le,Float64Attribute:h0,Float64BufferAttribute:Zr,FloatType:yn,Fog:fo,FogExp2:uo,Font:Af,FontLoader:$l,FrontSide:Ni,Frustum:Kr,GLBufferAttribute:ac,GLSL1:fp,GLSL3:Qa,GammaEncoding:Vs,GeometryUtils:v0,GreaterDepth:ih,GreaterEqualDepth:nh,GreaterEqualStencilFunc:rp,GreaterStencilFunc:np,GridHelper:Yf,Group:Wn,HalfFloatType:Or,HemisphereLight:$o,HemisphereLightHelper:Tx,HemisphereLightProbe:Ql,IcosahedronBufferGeometry:Do,IcosahedronGeometry:Do,ImageBitmapLoader:Zl,ImageLoader:vr,ImageUtils:ci,ImmediateRenderObject:Ts,IncrementStencilOp:Xd,IncrementWrapStencilOp:Zd,InstancedBufferAttribute:ra,InstancedBufferGeometry:Es,InstancedInterleavedBuffer:oc,InstancedMesh:xo,Int16Attribute:s0,Int16BufferAttribute:qr,Int32Attribute:a0,Int32BufferAttribute:Xr,Int8Attribute:n0,Int8BufferAttribute:Vr,IntType:ph,InterleavedBuffer:Dt,InterleavedBufferAttribute:jn,Interpolant:Ot,InterpolateDiscrete:Fr,InterpolateLinear:Nr,InterpolateSmooth:ks,InvertStencilOp:$d,JSONLoader:_0,KeepStencilOp:js,KeyframeTrack:ft,LOD:ls,LatheBufferGeometry:Oo,LatheGeometry:Oo,Layers:al,LensFlare:w0,LessDepth:eh,LessEqualDepth:Fs,LessEqualStencilFunc:tp,LessStencilFunc:Qd,Light:We,LightProbe:Ht,Line:zt,Line3:Gf,LineBasicMaterial:qe,LineCurve:Et,LineCurve3:$t,LineDashedMaterial:Si,LineLoop:bo,LinePieces:Gx,LineSegments:wt,LineStrip:kx,LinearEncoding:_t,LinearFilter:ot,LinearInterpolant:bs,LinearMipMapLinearFilter:Gd,LinearMipMapNearestFilter:kd,LinearMipmapLinearFilter:Ui,LinearMipmapNearestFilter:za,LinearToneMapping:ah,Loader:Be,LoaderUtils:Yl,LoadingManager:Bl,LogLuvEncoding:lu,LoopOnce:ru,LoopPingPong:ou,LoopRepeat:su,LuminanceAlphaFormat:_h,LuminanceFormat:xh,MOUSE:pn,Material:ve,MaterialLoader:ia,Math:_e,MathUtils:_e,Matrix3:Ct,Matrix4:Ae,MaxEquation:Fa,Mesh:Ve,MeshBasicMaterial:Pt,MeshDepthMaterial:Gn,MeshDistanceMaterial:Vn,MeshFaceMaterial:qx,MeshLambertMaterial:wi,MeshMatcapMaterial:Mi,MeshNormalMaterial:bi,MeshPhongMaterial:Jn,MeshPhysicalMaterial:Zn,MeshStandardMaterial:cn,MeshToonMaterial:_i,MinEquation:Oa,MirroredRepeatWrapping:Rr,MixOperation:sh,MultiMaterial:Xx,MultiplyBlending:Da,MultiplyOperation:Tr,NearestFilter:nt,NearestMipMapLinearFilter:Hd,NearestMipMapNearestFilter:Ud,NearestMipmapLinearFilter:Hs,NearestMipmapNearestFilter:Us,NeverDepth:Kc,NeverStencilFunc:Kd,NoBlending:gn,NoColors:Vx,NoToneMapping:ii,NormalAnimationBlendMode:Gs,NormalBlending:Bi,NotEqualDepth:rh,NotEqualStencilFunc:ip,NumberKeyframeTrack:gr,Object3D:de,ObjectLoader:sx,ObjectSpaceNormalMap:uu,OctahedronBufferGeometry:vs,OctahedronGeometry:vs,OneFactor:Wc,OneMinusDstAlphaFactor:Yc,OneMinusDstColorFactor:Jc,OneMinusSrcAlphaFactor:Ba,OneMinusSrcColorFactor:qc,OrthographicCamera:_r,PCFShadowMap:La,PCFSoftShadowMap:Uc,PMREMGenerator:Nx,ParametricBufferGeometry:vi,ParametricGeometry:vi,Particle:Zx,ParticleBasicMaterial:Kx,ParticleSystem:Jx,ParticleSystemMaterial:Qx,Path:en,PerspectiveCamera:et,Plane:sn,PlaneBufferGeometry:Qr,PlaneGeometry:Qr,PlaneHelper:Rx,PointCloud:Yx,PointCloudMaterial:$x,PointLight:Qo,PointLightHelper:Sx,Points:fr,PointsMaterial:Yt,PolarGridHelper:Ax,PolyhedronBufferGeometry:Xn,PolyhedronGeometry:Xn,PositionalAudio:fx,PropertyBinding:gt,PropertyMixer:nc,QuadraticBezierCurve:Kt,QuadraticBezierCurve3:un,Quaternion:at,QuaternionKeyframeTrack:ws,QuaternionLinearInterpolant:jo,REVISION:Aa,RGBADepthPacking:hu,RGBAFormat:At,RGBAIntegerFormat:Ah,RGBA_ASTC_10x10_Format:Hh,RGBA_ASTC_10x5_Format:Bh,RGBA_ASTC_10x6_Format:zh,RGBA_ASTC_10x8_Format:Uh,RGBA_ASTC_12x10_Format:kh,RGBA_ASTC_12x12_Format:Gh,RGBA_ASTC_4x4_Format:Lh,RGBA_ASTC_5x4_Format:Ph,RGBA_ASTC_5x5_Format:Rh,RGBA_ASTC_6x5_Format:Ih,RGBA_ASTC_6x6_Format:Dh,RGBA_ASTC_8x5_Format:Oh,RGBA_ASTC_8x6_Format:Fh,RGBA_ASTC_8x8_Format:Nh,RGBA_BPTC_Format:Vh,RGBA_ETC2_EAC_Format:Ya,RGBA_PVRTC_2BPPV1_Format:qa,RGBA_PVRTC_4BPPV1_Format:ja,RGBA_S3TC_DXT1_Format:Ha,RGBA_S3TC_DXT3_Format:ka,RGBA_S3TC_DXT5_Format:Ga,RGBDEncoding:Ka,RGBEEncoding:Ws,RGBEFormat:bh,RGBFormat:Rn,RGBIntegerFormat:Th,RGBM16Encoding:$a,RGBM7Encoding:Ja,RGB_ETC1_Format:Ch,RGB_ETC2_Format:Xa,RGB_PVRTC_2BPPV1_Format:Wa,RGB_PVRTC_4BPPV1_Format:Va,RGB_S3TC_DXT1_Format:Ua,RGFormat:Sh,RGIntegerFormat:Eh,RawShaderMaterial:Tn,Ray:Xi,Raycaster:lc,RectAreaLight:na,RedFormat:wh,RedIntegerFormat:Mh,ReinhardToneMapping:lh,RepeatWrapping:Pr,ReplaceStencilOp:qd,ReverseSubtractEquation:Gc,RingBufferGeometry:Fo,RingGeometry:Fo,SRGB8_ALPHA8_ASTC_10x10_Format:tu,SRGB8_ALPHA8_ASTC_10x5_Format:Kh,SRGB8_ALPHA8_ASTC_10x6_Format:Qh,SRGB8_ALPHA8_ASTC_10x8_Format:eu,SRGB8_ALPHA8_ASTC_12x10_Format:nu,SRGB8_ALPHA8_ASTC_12x12_Format:iu,SRGB8_ALPHA8_ASTC_4x4_Format:Wh,SRGB8_ALPHA8_ASTC_5x4_Format:jh,SRGB8_ALPHA8_ASTC_5x5_Format:qh,SRGB8_ALPHA8_ASTC_6x5_Format:Xh,SRGB8_ALPHA8_ASTC_6x6_Format:Yh,SRGB8_ALPHA8_ASTC_8x5_Format:Zh,SRGB8_ALPHA8_ASTC_8x6_Format:Jh,SRGB8_ALPHA8_ASTC_8x8_Format:$h,Scene:Al,SceneUtils:b0,ShaderChunk:Pe,ShaderLib:Xt,ShaderMaterial:bt,ShadowMaterial:xi,Shape:Kn,ShapeBufferGeometry:xs,ShapeGeometry:xs,ShapePath:Jl,ShapeUtils:En,ShortType:dh,Skeleton:us,SkeletonHelper:Wf,SkinnedMesh:cs,SmoothShading:zd,Sphere:Fn,SphereBufferGeometry:_s,SphereGeometry:_s,Spherical:hc,SphericalHarmonics3:Sf,Spline:yc,SplineCurve:Qt,SplineCurve3:ud,SpotLight:Ko,SpotLightHelper:Mx,Sprite:as,SpriteMaterial:qn,SrcAlphaFactor:Na,SrcAlphaSaturateFactor:$c,SrcColorFactor:jc,StaticCopyUsage:cp,StaticDrawUsage:Ur,StaticReadUsage:op,StereoCamera:Pf,StreamCopyUsage:up,StreamDrawUsage:sp,StreamReadUsage:lp,StringKeyframeTrack:qo,SubtractEquation:kc,SubtractiveBlending:Ia,TOUCH:mn,TangentSpaceNormalMap:ai,TetrahedronBufferGeometry:No,TetrahedronGeometry:No,TextBufferGeometry:Bo,TextGeometry:Bo,Texture:Ue,TextureLoader:Zo,TorusBufferGeometry:zo,TorusGeometry:zo,TorusKnotBufferGeometry:Uo,TorusKnotGeometry:Uo,Triangle:dt,TriangleFanDrawMode:Wd,TriangleStripDrawMode:Vd,TrianglesDrawMode:au,TubeBufferGeometry:Ho,TubeGeometry:Ho,UVMapping:Ns,Uint16Attribute:o0,Uint16BufferAttribute:fi,Uint32Attribute:l0,Uint32BufferAttribute:di,Uint8Attribute:i0,Uint8BufferAttribute:Wr,Uint8ClampedAttribute:r0,Uint8ClampedBufferAttribute:jr,Uniform:la,UniformsLib:ne,UniformsUtils:Eu,UnsignedByteType:Hi,UnsignedInt248Type:ki,UnsignedIntType:Dr,UnsignedShort4444Type:mh,UnsignedShort5551Type:gh,UnsignedShort565Type:yh,UnsignedShortType:Ir,VSMShadowMap:Fi,Vector2:G,Vector3:M,Vector4:He,VectorKeyframeTrack:yr,Vertex:e0,VertexColors:jx,VideoTexture:Rl,WebGL1Renderer:Tl,WebGLCubeRenderTarget:Ml,WebGLMultisampleRenderTarget:pp,WebGLRenderTarget:In,WebGLRenderTargetCube:y0,WebGLRenderer:is,WebGLUtils:Zu,WireframeGeometry:Nl,WireframeHelper:p0,WrapAroundEnding:Br,XHRLoader:m0,ZeroCurvatureEnding:si,ZeroFactor:Vc,ZeroSlopeEnding:oi,ZeroStencilOp:jd,sRGBEncoding:zr},Symbol.toStringTag,{value:"Module"})));var Cs=function(t,e){e===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=t,this.domElement=e,this.enabled=!0,this.target=new M,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:pn.ROTATE,MIDDLE:pn.DOLLY,RIGHT:pn.PAN},this.touches={ONE:mn.ROTATE,TWO:mn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.listenToKeyEvents=function(C){C.addEventListener("keydown",R),this._domElementKeyEvents=C},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),a=o.NONE},this.update=function(){var C=new M,J=new at().setFromUnitVectors(t.up,new M(0,1,0)),he=J.clone().invert(),te=new M,ge=new at,Ne=2*Math.PI;return function(){var Rs=n.object.position;C.copy(Rs).sub(n.target),C.applyQuaternion(J),c.setFromVector3(C),n.autoRotate&&a===o.NONE&&L(T()),n.enableDamping?(c.theta+=u.theta*n.dampingFactor,c.phi+=u.phi*n.dampingFactor):(c.theta+=u.theta,c.phi+=u.phi);var rn=n.minAzimuthAngle,Gt=n.maxAzimuthAngle;return isFinite(rn)&&isFinite(Gt)&&(rn<-Math.PI?rn+=Ne:rn>Math.PI&&(rn-=Ne),Gt<-Math.PI?Gt+=Ne:Gt>Math.PI&&(Gt-=Ne),rn<=Gt?c.theta=Math.max(rn,Math.min(Gt,c.theta)):c.theta=c.theta>(rn+Gt)/2?Math.max(rn,c.theta):Math.min(Gt,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),C.setFromSpherical(c),C.applyQuaternion(he),Rs.copy(n.target).add(C),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),f.set(0,0,0)),h=1,d||te.distanceToSquared(n.object.position)>l||8*(1-ge.dot(n.object.quaternion))>l?(n.dispatchEvent(i),te.copy(n.object.position),ge.copy(n.object.quaternion),d=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Q),n.domElement.removeEventListener("pointerdown",ee),n.domElement.removeEventListener("wheel",j),n.domElement.removeEventListener("touchstart",Z),n.domElement.removeEventListener("touchend",fe),n.domElement.removeEventListener("touchmove",re),n.domElement.ownerDocument.removeEventListener("pointermove",pe),n.domElement.ownerDocument.removeEventListener("pointerup",se),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",R)};var n=this,i={type:"change"},r={type:"start"},s={type:"end"},o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},a=o.NONE,l=1e-6,c=new hc,u=new hc,h=1,f=new M,d=!1,p=new G,v=new G,y=new G,g=new G,m=new G,_=new G,b=new G,w=new G,x=new G;function T(){return 2*Math.PI/60/60*n.autoRotateSpeed}function I(){return Math.pow(.95,n.zoomSpeed)}function L(C){u.theta-=C}function P(C){u.phi-=C}var O=function(){var C=new M;return function(he,te){C.setFromMatrixColumn(te,0),C.multiplyScalar(-he),f.add(C)}}(),B=function(){var C=new M;return function(he,te){n.screenSpacePanning===!0?C.setFromMatrixColumn(te,1):(C.setFromMatrixColumn(te,0),C.crossVectors(n.object.up,C)),C.multiplyScalar(he),f.add(C)}}(),N=function(){var C=new M;return function(he,te){var ge=n.domElement;if(n.object.isPerspectiveCamera){var Ne=n.object.position;C.copy(Ne).sub(n.target);var st=C.length();st*=Math.tan(n.object.fov/2*Math.PI/180),O(2*he*st/ge.clientHeight,n.object.matrix),B(2*te*st/ge.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(O(he*(n.object.right-n.object.left)/n.object.zoom/ge.clientWidth,n.object.matrix),B(te*(n.object.top-n.object.bottom)/n.object.zoom/ge.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function D(C){n.object.isPerspectiveCamera?h/=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function F(C){n.object.isPerspectiveCamera?h*=C:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/C)),n.object.updateProjectionMatrix(),d=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function U(C){p.set(C.clientX,C.clientY)}function q(C){b.set(C.clientX,C.clientY)}function $(C){g.set(C.clientX,C.clientY)}function ie(C){v.set(C.clientX,C.clientY),y.subVectors(v,p).multiplyScalar(n.rotateSpeed);var J=n.domElement;L(2*Math.PI*y.x/J.clientHeight),P(2*Math.PI*y.y/J.clientHeight),p.copy(v),n.update()}function ue(C){w.set(C.clientX,C.clientY),x.subVectors(w,b),x.y>0?D(I()):x.y<0&&F(I()),b.copy(w),n.update()}function ce(C){m.set(C.clientX,C.clientY),_.subVectors(m,g).multiplyScalar(n.panSpeed),N(_.x,_.y),g.copy(m),n.update()}function Me(C){C.deltaY<0?F(I()):C.deltaY>0&&D(I()),n.update()}function Se(C){var J=!1;switch(C.keyCode){case n.keys.UP:N(0,n.keyPanSpeed),J=!0;break;case n.keys.BOTTOM:N(0,-n.keyPanSpeed),J=!0;break;case n.keys.LEFT:N(n.keyPanSpeed,0),J=!0;break;case n.keys.RIGHT:N(-n.keyPanSpeed,0),J=!0;break}J&&(C.preventDefault(),n.update())}function ze(C){if(C.touches.length==1)p.set(C.touches[0].pageX,C.touches[0].pageY);else{var J=.5*(C.touches[0].pageX+C.touches[1].pageX),he=.5*(C.touches[0].pageY+C.touches[1].pageY);p.set(J,he)}}function V(C){if(C.touches.length==1)g.set(C.touches[0].pageX,C.touches[0].pageY);else{var J=.5*(C.touches[0].pageX+C.touches[1].pageX),he=.5*(C.touches[0].pageY+C.touches[1].pageY);g.set(J,he)}}function rt(C){var J=C.touches[0].pageX-C.touches[1].pageX,he=C.touches[0].pageY-C.touches[1].pageY,te=Math.sqrt(J*J+he*he);b.set(0,te)}function we(C){n.enableZoom&&rt(C),n.enablePan&&V(C)}function De(C){n.enableZoom&&rt(C),n.enableRotate&&ze(C)}function be(C){if(C.touches.length==1)v.set(C.touches[0].pageX,C.touches[0].pageY);else{var J=.5*(C.touches[0].pageX+C.touches[1].pageX),he=.5*(C.touches[0].pageY+C.touches[1].pageY);v.set(J,he)}y.subVectors(v,p).multiplyScalar(n.rotateSpeed);var te=n.domElement;L(2*Math.PI*y.x/te.clientHeight),P(2*Math.PI*y.y/te.clientHeight),p.copy(v)}function Fe(C){if(C.touches.length==1)m.set(C.touches[0].pageX,C.touches[0].pageY);else{var J=.5*(C.touches[0].pageX+C.touches[1].pageX),he=.5*(C.touches[0].pageY+C.touches[1].pageY);m.set(J,he)}_.subVectors(m,g).multiplyScalar(n.panSpeed),N(_.x,_.y),g.copy(m)}function Ee(C){var J=C.touches[0].pageX-C.touches[1].pageX,he=C.touches[0].pageY-C.touches[1].pageY,te=Math.sqrt(J*J+he*he);w.set(0,te),x.set(0,Math.pow(w.y/b.y,n.zoomSpeed)),D(x.y),b.copy(w)}function X(C){n.enableZoom&&Ee(C),n.enablePan&&Fe(C)}function K(C){n.enableZoom&&Ee(C),n.enableRotate&&be(C)}function ee(C){if(n.enabled!==!1)switch(C.pointerType){case"mouse":case"pen":A(C);break}}function pe(C){if(n.enabled!==!1)switch(C.pointerType){case"mouse":case"pen":S(C);break}}function se(C){switch(C.pointerType){case"mouse":case"pen":Y();break}}function A(C){C.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus();var J;switch(C.button){case 0:J=n.mouseButtons.LEFT;break;case 1:J=n.mouseButtons.MIDDLE;break;case 2:J=n.mouseButtons.RIGHT;break;default:J=-1}switch(J){case pn.DOLLY:if(n.enableZoom===!1)return;q(C),a=o.DOLLY;break;case pn.ROTATE:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enablePan===!1)return;$(C),a=o.PAN}else{if(n.enableRotate===!1)return;U(C),a=o.ROTATE}break;case pn.PAN:if(C.ctrlKey||C.metaKey||C.shiftKey){if(n.enableRotate===!1)return;U(C),a=o.ROTATE}else{if(n.enablePan===!1)return;$(C),a=o.PAN}break;default:a=o.NONE}a!==o.NONE&&(n.domElement.ownerDocument.addEventListener("pointermove",pe),n.domElement.ownerDocument.addEventListener("pointerup",se),n.dispatchEvent(r))}function S(C){if(n.enabled!==!1)switch(C.preventDefault(),a){case o.ROTATE:if(n.enableRotate===!1)return;ie(C);break;case o.DOLLY:if(n.enableZoom===!1)return;ue(C);break;case o.PAN:if(n.enablePan===!1)return;ce(C);break}}function Y(C){n.domElement.ownerDocument.removeEventListener("pointermove",pe),n.domElement.ownerDocument.removeEventListener("pointerup",se),n.enabled!==!1&&(n.dispatchEvent(s),a=o.NONE)}function j(C){n.enabled===!1||n.enableZoom===!1||a!==o.NONE&&a!==o.ROTATE||(C.preventDefault(),C.stopPropagation(),n.dispatchEvent(r),Me(C),n.dispatchEvent(s))}function R(C){n.enabled===!1||n.enablePan===!1||Se(C)}function Z(C){if(n.enabled!==!1){switch(C.preventDefault(),C.touches.length){case 1:switch(n.touches.ONE){case mn.ROTATE:if(n.enableRotate===!1)return;ze(C),a=o.TOUCH_ROTATE;break;case mn.PAN:if(n.enablePan===!1)return;V(C),a=o.TOUCH_PAN;break;default:a=o.NONE}break;case 2:switch(n.touches.TWO){case mn.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;we(C),a=o.TOUCH_DOLLY_PAN;break;case mn.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;De(C),a=o.TOUCH_DOLLY_ROTATE;break;default:a=o.NONE}break;default:a=o.NONE}a!==o.NONE&&n.dispatchEvent(r)}}function re(C){if(n.enabled!==!1)switch(C.preventDefault(),C.stopPropagation(),a){case o.TOUCH_ROTATE:if(n.enableRotate===!1)return;be(C),n.update();break;case o.TOUCH_PAN:if(n.enablePan===!1)return;Fe(C),n.update();break;case o.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;X(C),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;K(C),n.update();break;default:a=o.NONE}}function fe(C){n.enabled!==!1&&(n.dispatchEvent(s),a=o.NONE)}function Q(C){n.enabled!==!1&&C.preventDefault()}n.domElement.addEventListener("contextmenu",Q),n.domElement.addEventListener("pointerdown",ee),n.domElement.addEventListener("wheel",j),n.domElement.addEventListener("touchstart",Z),n.domElement.addEventListener("touchend",fe),n.domElement.addEventListener("touchmove",re),this.update()};Cs.prototype=Object.create(Vt.prototype),Cs.prototype.constructor=Cs;var ya=function(t,e){Cs.call(this,t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=pn.PAN,this.mouseButtons.RIGHT=pn.ROTATE,this.touches.ONE=mn.PAN,this.touches.TWO=mn.DOLLY_ROTATE};ya.prototype=Object.create(Vt.prototype),ya.prototype.constructor=ya;const M0=Nc(Object.freeze(Object.defineProperty({__proto__:null,MapControls:ya,OrbitControls:Cs},Symbol.toStringTag,{value:"Module"})));var Ls={};(function(t){Object.defineProperty(t,"__esModule",{value:!0});var e=function(){function i(r,s,o,a,l,c,u){this.pointIndices=r,this.labelStrings=s,this.scaleFactors=o,this.useSceneOpacityFlags=a,this.defaultFontSize=l,this.fillColors=c,this.strokeColors=u}return i}();t.LabelRenderParams=e,function(i){i[i.Perspective=0]="Perspective",i[i.Orthographic=1]="Orthographic"}(t.CameraType||(t.CameraType={}));var n=function(){function i(r,s,o,a,l,c,u,h,f,d,p,v,y,g){this.camera=r,this.cameraType=s,this.cameraTarget=o,this.screenWidth=a,this.screenHeight=l,this.nearestCameraSpacePointZ=c,this.farthestCameraSpacePointZ=u,this.backgroundColor=h,this.pointColors=f,this.pointScaleFactors=d,this.labels=p,this.polylineColors=v,this.polylineOpacities=y,this.polylineWidths=g}return i}();t.RenderContext=n})(Ls);var it={};Object.defineProperty(it,"__esModule",{value:!0});var tn=Ii;function S0(t,e,n,i){var r=window.devicePixelRatio,s=new tn.Vector3().copy(i).project(t),o=[(s.x+1)/2*e*r,-((s.y-1)/2*n)*r];return o}it.vector3DToScreenCoords=S0;function E0(t,e){var n=e*3;return new tn.Vector3(t[n],t[n+1],t[n+2])}it.vector3FromPackedArray=E0;function T0(t,e,n){for(var i=1/0,r=0,s=new tn.Vector3().copy(n).sub(e),o=new tn.Vector3().copy(s).normalize(),a=t.length/3,l=0,c=new tn.Vector3,u=new tn.Vector3,h=0;h<a;h++){c.x=t[l],c.y=t[l+1],c.z=t[l+2],l+=3,u.copy(c).sub(e);var f=o.dot(u);f<0||(r=f>r?f:r,i=f<i?f:i)}return[i,r]}it.getNearFarPoints=T0;function fd(t,e){return e===void 0&&(e=!0),t.needsUpdate=e,t.minFilter=tn.LinearFilter,t.generateMipmaps=!1,t.flipY=!1,t}function A0(t){var e=new tn.Texture(t);return fd(e)}it.createTextureFromCanvas=A0;function C0(t,e){var n=new tn.Texture(t);return t.complete?(n.needsUpdate=!0,e()):t.onload=function(){n.needsUpdate=!0,e()},fd(n,!1)}it.createTextureFromImage=C0;function L0(){try{var t=document.createElement("canvas"),e=t.getContext("webgl")||t.getContext("experimental-webgl");return e!=null}catch{return!1}}it.hasWebGLSupport=L0;function P0(t){for(var e=1/0,n=-1/0,i=0;i<t.length;i++){var r=t[i];r<e&&(e=r),r>n&&(n=r)}return[e,n]}it.extent=P0;function R0(t,e,n){var i=e[1]-e[0],r=n[1]-n[0],s=(t-e[0])/i;return s*r+n[0]}it.scaleLinear=R0;function I0(t,e,n){var i=Math.pow(e[1],Math.E)-Math.pow(e[0],Math.E),r=n[1]-n[0],s=(Math.pow(t,Math.E)-e[0])/i;return s*r+n[0]}it.scaleExponential=I0;function D0(t,e,n,i,r){t[e*3]=n,t[e*3+1]=i,t[e*3+2]=r}it.packRgbIntoUint8Array=D0;function O0(t){var e=new tn.Color(t);return[e.r*255|0,e.g*255|0,e.b*255|0]}it.styleRgbFromHexColor=O0;var dd=function(t){return 100*t+"%"};function F0(t,e,n,i,r,s){var o=n+(i-n)*t/e,a="hsl("+o+", "+dd(r)+", "+dd(s)+")";return new tn.Color(a)}it.getDefaultPointInPolylineColor=F0;var vc={};Object.defineProperty(vc,"__esModule",{value:!0});var N0=function(){function t(e,n,i){this.startCoordinates=[0,0],this.svgElement=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svgElement.style.display="none",this.svgElement.style.height="100%",this.svgElement.style.width="100%",this.svgElement.style.position="absolute",e.insertAdjacentElement("afterbegin",this.svgElement),this.rectElement=document.createElementNS("http://www.w3.org/2000/svg","rect"),this.rectElement.style.stroke=i.select.stroke,this.rectElement.style.strokeDasharray=i.select.strokeDashArray,this.rectElement.style.strokeWidth=""+i.select.strokeWidth,this.rectElement.style.fill=i.select.fill,this.rectElement.style.fillOpacity=""+i.select.fillOpacity,this.svgElement.appendChild(this.rectElement),this.selectionCallback=n,this.isMouseDown=!1}return t.prototype.onMouseDown=function(e,n){this.isMouseDown=!0,this.rectElement.style.display="block",this.svgElement.style.display="block",this.startCoordinates=[e,n],this.lastBoundingBox={x:this.startCoordinates[0],y:this.startCoordinates[1],width:1,height:1}},t.prototype.onMouseMove=function(e,n){this.isMouseDown&&(this.lastBoundingBox.x=Math.min(e,this.startCoordinates[0]),this.lastBoundingBox.y=Math.max(n,this.startCoordinates[1]),this.lastBoundingBox.width=Math.max(e,this.startCoordinates[0])-this.lastBoundingBox.x,this.lastBoundingBox.height=this.lastBoundingBox.y-Math.min(n,this.startCoordinates[1]),this.rectElement.setAttribute("x",""+this.lastBoundingBox.x),this.rectElement.setAttribute("y",""+(this.lastBoundingBox.y-this.lastBoundingBox.height)),this.rectElement.setAttribute("width",""+this.lastBoundingBox.width),this.rectElement.setAttribute("height",""+this.lastBoundingBox.height))},t.prototype.onMouseUp=function(){this.isMouseDown=!1,this.svgElement.style.display="none",this.rectElement.style.display="none",this.rectElement.setAttribute("width","0"),this.rectElement.setAttribute("height","0"),this.selectionCallback(this.lastBoundingBox)},t}();vc.ScatterPlotRectangleSelector=N0;var va=Ke&&Ke.__assign||function(){return va=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++){e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},va.apply(this,arguments)},xc=Ke&&Ke.__read||function(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var i=n.call(t),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},pd=Ke&&Ke.__values||function(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(Ta,"__esModule",{value:!0});var Oe=Ii,B0=M0,_c=Ls,z0=it,U0=vc,md=2,H0=5*md,k0=.025*md,G0=70,V0=.01,W0=100,xa=1.2,gd="Shift",yd="Control",j0=new Oe.Vector3(.45,.9,1.6),q0=new Oe.Vector3(0,0,0),X0=new Oe.Vector3(0,0,4),Y0=new Oe.Vector3(0,0,0),Z0={mouseRotateSpeed:1,autoRotateSpeed:2,zoomSpeed:.125},J0=function(){function t(e,n){var i=this;this.clickCallback=function(){},this.hoverCallback=function(){},this.selectCallback=function(){},this.selectEnabled=!0,this.visualizers=new Map,this.onCameraMoveListeners=[],this.height=0,this.width=0,this.dimensions=3,this.interactionMode="PAN",this.pickingTexture=new Oe.WebGLRenderTarget(0,0),this.orbitAnimationOnNextCameraCreation=!1,this.orbitAnimationId=null,this.worldSpacePointPositions=new Float32Array(0),this.pointColors=new Float32Array(0),this.pointScaleFactors=new Float32Array(0),this.polylineColors={},this.polylineOpacities=new Float32Array(0),this.polylineWidths=new Float32Array(0),this.selecting=!1,this.nearestPoint=null,this.mouseIsDown=!1,this.isDragSequence=!1,this.lastHovered=null,this.container=e,this.styles=n.styles,this.setParameters(n),this.computeLayoutValues(),this.scene=new Oe.Scene,this.renderer=new Oe.WebGLRenderer({alpha:!0,premultipliedAlpha:!1,antialias:!1}),this.renderer.setClearColor(this.styles.backgroundColor,1),this.container.appendChild(this.renderer.domElement),this.light=new Oe.PointLight(16772287,1,0),this.scene.add(this.light),this.orbitControlParams=va(va({},Z0),n.orbitControlParams),this.rectangleSelector=new U0.ScatterPlotRectangleSelector(this.container,function(r){i.selectBoundingBox(r)},this.styles),this.addInteractionListeners(),this.setDimensions(3),this.makeCamera(n.camera),this.resize()}return t.prototype.setParameters=function(e){e.onClick!==void 0&&(this.clickCallback=e.onClick),e.onHover!==void 0&&(this.hoverCallback=e.onHover),e.onSelect!==void 0&&(this.selectCallback=e.onSelect),e.selectEnabled!==void 0&&(this.selectEnabled=e.selectEnabled)},t.prototype.addInteractionListeners=function(){this.container.addEventListener("pointermove",this.onMouseMove.bind(this)),this.container.addEventListener("pointerdown",this.onMouseDown.bind(this)),this.container.addEventListener("pointerup",this.onMouseUp.bind(this)),this.container.addEventListener("click",this.onClick.bind(this)),window.addEventListener("keydown",this.onKeyDown.bind(this),!1),window.addEventListener("keyup",this.onKeyUp.bind(this),!1)},t.prototype.addCameraControlsEventListeners=function(e){var n=this;e.addEventListener("start",function(){n.stopOrbitAnimation(),n.onCameraMoveListeners.forEach(function(i){return i(n.camera.position,e.target)})}),e.addEventListener("change",function(){n.render()}),e.addEventListener("end",function(){})},t.prototype.makeOrbitControls=function(e,n){this.orbitCameraControls!=null&&this.orbitCameraControls.dispose();var i=new B0.OrbitControls(e,this.renderer.domElement);i.zoomSpeed=this.orbitControlParams.zoomSpeed,i.enableRotate=n,i.autoRotate=!1,i.enableKeys=!1,i.rotateSpeed=this.orbitControlParams.mouseRotateSpeed,n?(i.mouseButtons.LEFT=Oe.MOUSE.LEFT,i.mouseButtons.RIGHT=Oe.MOUSE.RIGHT):(i.mouseButtons.LEFT=Oe.MOUSE.RIGHT,i.mouseButtons.RIGHT=Oe.MOUSE.LEFT),i.reset(),this.camera=e,this.orbitCameraControls=i,this.addCameraControlsEventListeners(this.orbitCameraControls)},t.prototype.makeCamera=function(e){e===void 0&&(e={});var n=this.makeDefaultCameraDef(this.dimensions,e);this.recreateCamera(n),this.dimensions===3&&this.styles.axesVisible?this.add3dAxes():this.remove3dAxesFromScene()},t.prototype.makeCamera3D=function(e,n,i){var r;{var s=n/i;r=new Oe.PerspectiveCamera(G0,s,V0,W0),r.position.set(e.position[0],e.position[1],e.position[2]);var o=new Oe.Vector3(e.target[0],e.target[1],e.target[2]);r.lookAt(o),r.zoom=e.zoom,r.updateProjectionMatrix()}this.camera=r,this.makeOrbitControls(r,!0)},t.prototype.makeCamera2D=function(e,n,i){var r,s=new Oe.Vector3(e.target[0],e.target[1],e.target[2]);{var o=n/i,a=-xa,l=xa,c=-xa,u=xa;o>1?(a*=o,l*=o):(u/=o,c/=o),r=new Oe.OrthographicCamera(a,l,u,c,-1e3,1e3),r.position.set(e.position[0],e.position[1],e.position[2]),r.up=new Oe.Vector3(0,0,1),r.lookAt(s),r.zoom=e.zoom,r.updateProjectionMatrix()}this.camera=r,this.makeOrbitControls(r,!1)},t.prototype.makeDefaultCameraDef=function(e,n){n===void 0&&(n={});var i=e===2,r=i?X0:j0,s=i?Y0:q0,o={orthographic:i,zoom:1,position:[r.x,r.y,r.z],target:[s.x,s.y,s.z]};return n.zoom&&(o.zoom=n.zoom),n.position&&(o.position=n.position),n.target&&(o.target=n.target),o},t.prototype.recreateCamera=function(e){e.orthographic?this.makeCamera2D(e,this.width,this.height):this.makeCamera3D(e,this.width,this.height),this.orbitCameraControls.minDistance=k0,this.orbitCameraControls.maxDistance=H0,this.orbitCameraControls.update(),this.orbitAnimationOnNextCameraCreation&&this.startOrbitAnimation()},t.prototype.setInteractionMode=function(e){this.interactionMode=e,e==="SELECT"?(this.selecting=!0,this.container.style.cursor="crosshair",this.orbitCameraControls.enabled=!1):(this.selecting=!1,this.container.style.cursor="default",this.orbitCameraControls.enabled=!0)},t.prototype.onClick=function(e,n){if(n===void 0&&(n=!0),!(e&&this.selecting)){if(!this.isDragSequence&&n){if(this.selectEnabled){var i=this.nearestPoint!=null?[this.nearestPoint]:[];this.selectCallback(i)}this.clickCallback(this.nearestPoint)}this.isDragSequence=!1,this.render()}},t.prototype.onMouseDown=function(e){this.isDragSequence=!1,this.mouseIsDown=!0,this.selecting?(this.rectangleSelector.onMouseDown(e.offsetX,e.offsetY),this.setNearestPointToMouse(e)):!e.ctrlKey&&this.sceneIs3D()&&this.orbitCameraControls.mouseButtons.ORBIT===Oe.MOUSE.RIGHT?(this.orbitCameraControls.mouseButtons.ORBIT=Oe.MOUSE.LEFT,this.orbitCameraControls.mouseButtons.PAN=Oe.MOUSE.RIGHT):e.ctrlKey&&this.sceneIs3D()&&this.orbitCameraControls.mouseButtons.ORBIT===Oe.MOUSE.LEFT&&(this.orbitCameraControls.mouseButtons.ORBIT=Oe.MOUSE.RIGHT,this.orbitCameraControls.mouseButtons.PAN=Oe.MOUSE.LEFT)},t.prototype.onMouseUp=function(e){this.selecting&&(this.rectangleSelector.onMouseUp(),this.render()),this.mouseIsDown=!1},t.prototype.onMouseMove=function(e){this.isDragSequence=this.mouseIsDown,this.selecting&&this.mouseIsDown?(this.rectangleSelector.onMouseMove(e.offsetX,e.offsetY),this.render()):this.mouseIsDown||(this.setNearestPointToMouse(e),this.nearestPoint!=this.lastHovered&&(this.lastHovered=this.nearestPoint,this.hoverCallback(this.nearestPoint)))},t.prototype.onKeyDown=function(e){e.key===yd&&this.sceneIs3D()&&(this.orbitCameraControls.mouseButtons.ORBIT=Oe.MOUSE.RIGHT,this.orbitCameraControls.mouseButtons.PAN=Oe.MOUSE.LEFT),e.key===gd&&this.selectEnabled&&(this.selecting=!0,this.orbitCameraControls.enabled=!1,this.container.style.cursor="crosshair")},t.prototype.onKeyUp=function(e){e.key===yd&&this.sceneIs3D()&&(this.orbitCameraControls.mouseButtons.ORBIT=Oe.MOUSE.LEFT,this.orbitCameraControls.mouseButtons.PAN=Oe.MOUSE.RIGHT),e.key===gd&&this.selectEnabled&&(this.selecting=!1,this.orbitCameraControls.enabled=!0,this.container.style.cursor="default",this.render())},t.prototype.getPointIndicesFromBoundingBox=function(e){if(this.worldSpacePointPositions==null)return[];this.camera.updateMatrixWorld();var n=window.devicePixelRatio||1,i=Math.floor(e.x*n),r=Math.floor(e.y*n),s=Math.max(Math.floor(e.width*n),1),o=Math.max(Math.floor(e.height*n),1);if(s<=2&&o<=2)return this.getPointIndicesFromBoundingBoxPickingTexture(e);for(var a=this.renderer.domElement,l=a.width,c=a.height,u=[],h=new Oe.Vector3,f=0;f<this.worldSpacePointPositions.length;f++){var d=f*3,p=xc(this.worldSpacePointPositions.slice(d,d+3),3),v=p[0],y=p[1],g=p[2];h.x=v,h.y=y,h.z=g;var m=h.project(this.camera),_=(m.x+1)*l/2,b=-(m.y-1)*c/2;_>=i&&_<=i+s&&b<=r&&b>=r-o&&u.push(f)}return u},t.prototype.getPointIndicesFromBoundingBoxPickingTexture=function(e){if(this.worldSpacePointPositions==null)return[];var n=this.worldSpacePointPositions.length/3,i=window.devicePixelRatio||1,r=Math.floor(e.x*i),s=Math.floor(e.y*i),o=Math.max(Math.floor(e.width*i),1),a=Math.max(Math.floor(e.height*i),1),l=new Uint8Array(o*a*4);this.renderer.readRenderTargetPixels(this.pickingTexture,r,this.pickingTexture.height-s,o,a,l);for(var c=new Uint8Array(this.worldSpacePointPositions.length),u=0;u<o*a;u++){var h=l[u*4]<<16|l[u*4+1]<<8|l[u*4+2];h!==16777215&&h<n&&(c[h]=1)}for(var f=[],u=0;u<c.length;u++)c[u]===1&&f.push(u);return f},t.prototype.selectBoundingBox=function(e){var n=this.getPointIndicesFromBoundingBox(e);this.selectCallback(n)},t.prototype.setNearestPointToMouse=function(e){if(this.pickingTexture==null){this.nearestPoint=null;return}var n={x:e.offsetX,y:e.offsetY,width:1,height:1},i=this.getPointIndicesFromBoundingBoxPickingTexture(n);this.nearestPoint=i.length?i[0]:null},t.prototype.computeLayoutValues=function(){return this.width=this.container.offsetWidth,this.height=Math.max(1,this.container.offsetHeight),[this.width,this.height]},t.prototype.sceneIs3D=function(){return this.dimensions===3},t.prototype.remove3dAxesFromScene=function(){var e=this.scene.getObjectByName("axes");return e!=null&&this.scene.remove(e),e},t.prototype.add3dAxes=function(){var e=new Oe.AxesHelper;e.name="axes",this.scene.add(e)},t.prototype.setDimensions=function(e){if(e!==2&&e!==3)throw new RangeError("dimensions must be 2 or 3");this.dimensions!==e&&(this.dimensions=e,this.makeCamera())},t.prototype.getCameraPosition=function(){var e=this.camera.position;return[e.x,e.y,e.z]},t.prototype.getCameraTarget=function(){var e=this.orbitCameraControls.target;return[e.x,e.y,e.z]},t.prototype.setCameraPositionAndTarget=function(e,n){this.stopOrbitAnimation(),this.camera.position.set(e[0],e[1],e[2]),this.orbitCameraControls.target.set(n[0],n[1],n[2]),this.orbitCameraControls.update(),this.render()},t.prototype.startOrbitAnimation=function(){this.sceneIs3D()&&(this.orbitAnimationId!=null&&this.stopOrbitAnimation(),this.orbitCameraControls.autoRotate=!0,this.orbitCameraControls.autoRotateSpeed=this.orbitControlParams.autoRotateSpeed,this.updateOrbitAnimation())},t.prototype.orbitIsAnimating=function(){return this.orbitAnimationId!=null},t.prototype.updateOrbitAnimation=function(){var e=this;this.orbitCameraControls.update(),this.orbitAnimationId=requestAnimationFrame(function(){return e.updateOrbitAnimation()})},t.prototype.stopOrbitAnimation=function(){this.orbitCameraControls.autoRotate=!1,this.orbitCameraControls.rotateSpeed=this.orbitControlParams.mouseRotateSpeed,this.orbitAnimationId!=null&&(cancelAnimationFrame(this.orbitAnimationId),this.orbitAnimationId=null)},t.prototype.setActiveVisualizers=function(e){var n,i,r,s,o=new Set(e.map(function(f){return f.id}));try{for(var a=pd(this.visualizers.values()),l=a.next();!l.done;l=a.next()){var c=l.value;o.has(c.id)||(c.dispose(),this.visualizers.delete(c.id))}}catch(f){n={error:f}}finally{try{l&&!l.done&&(i=a.return)&&i.call(a)}finally{if(n)throw n.error}}try{for(var u=pd(e),h=u.next();!h.done;h=u.next()){var c=h.value;this.visualizers.set(c.id,c),c.setScene(this.scene),c.onResize(this.width,this.height),this.worldSpacePointPositions&&c.onPointPositionsChanged(this.worldSpacePointPositions)}}catch(f){r={error:f}}finally{try{h&&!h.done&&(s=u.return)&&s.call(u)}finally{if(r)throw r.error}}},t.prototype.disposeAllVisualizers=function(){this.visualizers.forEach(function(e){return e.dispose()}),this.visualizers.clear()},t.prototype.setPointPositions=function(e){this.worldSpacePointPositions=e,this.visualizers.forEach(function(n){return n.onPointPositionsChanged(e)})},t.prototype.render=function(){{var e=this.camera.position.clone();e.x+=1,e.y+=1,this.light.position.set(e.x,e.y,e.z)}var n=this.camera instanceof Oe.PerspectiveCamera?_c.CameraType.Perspective:_c.CameraType.Orthographic,i=[0,0];this.worldSpacePointPositions!=null&&(i=z0.getNearFarPoints(this.worldSpacePointPositions,this.camera.position,this.orbitCameraControls.target));var r=new _c.RenderContext(this.camera,n,this.orbitCameraControls.target,this.width,this.height,i[0],i[1],this.styles.backgroundColor,this.pointColors,this.pointScaleFactors,this.labels,this.polylineColors,this.polylineOpacities,this.polylineWidths);this.visualizers.forEach(function(o){return o.onPickingRender(r)});{var s=this.remove3dAxesFromScene();this.renderer.setRenderTarget(this.pickingTexture),this.renderer.render(this.scene,this.camera),s!=null&&this.scene.add(s)}this.visualizers.forEach(function(o){return o.onRender(r)}),this.renderer.setRenderTarget(null),this.renderer.render(this.scene,this.camera)},t.prototype.setPointColors=function(e){this.pointColors=e},t.prototype.setPointScaleFactors=function(e){this.pointScaleFactors=e},t.prototype.setLabels=function(e){this.labels=e},t.prototype.setPolylineColors=function(e){this.polylineColors=e},t.prototype.setPolylineOpacities=function(e){this.polylineOpacities=e},t.prototype.setPolylineWidths=function(e){this.polylineWidths=e},t.prototype.resetZoom=function(){this.recreateCamera(this.makeDefaultCameraDef(this.dimensions)),this.render()},t.prototype.setDayNightMode=function(e){for(var n=this.container.querySelectorAll("canvas"),i=e?"invert(100%)":"",r=0;r<n.length;r++)n[r].style.filter=i},t.prototype.resize=function(e){e===void 0&&(e=!0);var n=xc([this.width,this.height],2),i=n[0],r=n[1],s=xc(this.computeLayoutValues(),2),o=s[0],a=s[1];if(this.dimensions===3){var l=this.camera;l.aspect=o/a,l.updateProjectionMatrix()}else{var l=this.camera,c=o/i,u=a/r,h=(l.right-l.left)*c/2,f=(l.top-l.bottom)*u/2;l.top=f,l.bottom=-f,l.left=-h,l.right=h,l.updateProjectionMatrix()}var d=window.devicePixelRatio||1;this.renderer.setPixelRatio(d),this.renderer.setSize(o,a);{var p=new Oe.Vector2;this.renderer.getSize(p);var v=this.renderer.getPixelRatio();this.pickingTexture=new Oe.WebGLRenderTarget(p.width*v,p.height*v),this.pickingTexture.texture.minFilter=Oe.LinearFilter}this.visualizers.forEach(function(y){return y.onResize(o,a)}),e&&this.render()},t.prototype.onCameraMove=function(e){this.onCameraMoveListeners.push(e)},t.prototype.clickOnPoint=function(e){this.nearestPoint=e,this.onClick(null,!1)},t}();Ta.ScatterPlot=J0;var bc={},$0=Ke&&Ke.__read||function(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var i=n.call(t),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s};Object.defineProperty(bc,"__esModule",{value:!0});var K0=Ii,wc=new Map,Q0=/^(rgba|hsla)\((\d+),\s*(\d+%?),\s*(\d+%?)(?:,\s*(\d+(?:\.\d+)?))?\)$/;function e_(t){var e=Q0.exec(t);if(e){var n=$0(e,6);n[0];var i=n[1],r=n[2],s=n[3],o=n[4],a=n[5],l=i.replace("a","")+"("+r+","+s+","+o+")";return{colorString:l,opacity:parseFloat(a)}}return{colorString:t,opacity:1}}function t_(t){if(wc.has(t))return wc.get(t);var e=e_(t),n=e.colorString,i=e.opacity,r=new K0.Color(n),s=r.r,o=r.g,a=r.b,l={r:s,g:o,b:a,opacity:i};return wc.set(t,l),l}bc.parseColor=t_;var _a={},n_=Ke&&Ke.__values||function(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(_a,"__esModule",{value:!0});var vd="Points must be an array of either 2 or 3 dimensional number arrays",i_=function(){function t(e,n){var i,r;n===void 0&&(n=[]),this.points=e,this.metadata=n;var s=e[0].length;if(!(s===2||s===3))throw new Error(vd);try{for(var o=n_(e),a=o.next();!a.done;a=o.next()){var l=a.value;if(s!==l.length)throw new Error(vd)}}catch(c){i={error:c}}finally{try{a&&!a.done&&(r=o.return)&&r.call(o)}finally{if(i)throw i.error}}this.dimensions=s}return t.prototype.setSpriteMetadata=function(e){this.spriteMetadata=e},t}();_a.Dataset=i_;var Mc={};Object.defineProperty(Mc,"__esModule",{value:!0});var r_=function(){var t={backgroundColor:"#ffffff",axesVisible:!0,fog:{color:"#ffffff",enabled:!0,threshold:5e3},label:{fontSize:10,scaleDefault:1,scaleLarge:2,fillColorSelected:"#000000",fillColorHover:"#000000",strokeColorSelected:"#ffffff",strokeColorHover:"#ffffff",strokeWidth:3,fillWidth:6},label3D:{fontSize:80,scale:2.2,color:"black",backgroundColor:"#ffffff",colorUnselected:"#ffffff",colorNoSelection:"#ffffff"},point:{colorUnselected:"rgba(227, 227, 227, 0.7)",colorNoSelection:"rgba(117, 117, 217, 0.7)",colorSelected:"rgba(250, 102, 102, 0.7)",colorHover:"rgba(118, 11, 79, 0.7)",scaleDefault:1,scaleSelected:1.2,scaleHover:1.2},polyline:{startHue:60,endHue:360,saturation:1,lightness:.3,defaultOpacity:.2,defaultLineWidth:2,selectedOpacity:.9,selectedLineWidth:3,deselectedOpacity:.05},select:{fill:"#dddddd",fillOpacity:.2,stroke:"#aaaaaa",strokeWidth:2,strokeDashArray:"10 5"},sprites:{minPointSize:5,imageSize:30,colorUnselected:"#ffffff",colorNoSelection:"#ffffff"}};return t};function s_(t){var e=r_();if(t===void 0)return e;for(var n in e){var i=n;typeof e[i]=="object"&&typeof t[i]=="object"?e[i]=Object.assign(e[i],t[i]):t[i]!==void 0&&(e[i]=t[i])}return e}Mc.makeStyles=s_;var nn={};Object.defineProperty(nn,"__esModule",{value:!0}),nn.RGB_NUM_ELEMENTS=3,nn.RGBA_NUM_ELEMENTS=4,nn.XYZ_NUM_ELEMENTS=3,nn.UV_NUM_ELEMENTS=2,nn.INDEX_NUM_ELEMENTS=1,nn.SCATTER_PLOT_CUBE_LENGTH=2;var Sc={};Object.defineProperty(Sc,"__esModule",{value:!0});var Cn=Ii,xd=it,ct=nn,Ec=8192,Tc=256,St=2*3,o_=function(t,e){return`
      attribute vec2 posObj;
      attribute vec4 color;
      varying vec2 vUv;
      varying vec4 vColor;

      void main() {
        vUv = uv;
        vColor = color;

        // Rotate label to face camera.

        vec4 vRight = vec4(
          modelViewMatrix[0][0], modelViewMatrix[1][0], modelViewMatrix[2][0], 0);

        vec4 vUp = vec4(
          modelViewMatrix[0][1], modelViewMatrix[1][1], modelViewMatrix[2][1], 0);

        vec4 vAt = -vec4(
          modelViewMatrix[0][2], modelViewMatrix[1][2], modelViewMatrix[2][2], 0);

        mat4 pointToCamera = mat4(vRight, vUp, vAt, vec4(0, 0, 0, 1));

        vec2 scaledPos = posObj * `+1/t+" * "+e+`;

        vec4 posRotated = pointToCamera * vec4(scaledPos, 0, 1);
        vec4 mvPosition = modelViewMatrix * (vec4(position, 0) + posRotated);
        gl_Position = projectionMatrix * mvPosition;
      }`},a_=`
      uniform sampler2D glyphTexture;
      uniform bool picking;
      varying vec2 vUv;
      varying vec4 vColor;

      void main() {
        if (picking) {
          gl_FragColor = vColor;
        } else {
          vec4 fromTexture = texture(glyphTexture, vUv);
          gl_FragColor = vColor * fromTexture;
        }
      }`,l_=function(){function t(e){this.styles=e,this.id="3D_LABELS",this.labelStrings=[],this.worldSpacePointPositions=new Float32Array(0),this.pickingColors=new Float32Array(0),this.renderColors=new Float32Array(0),this.uniforms={},this.totalVertexCount=0,this.labelVertexMap=[]}return t.prototype.createGlyphTexture=function(){var e=this.styles.label3D,n=e.fontSize,i=e.backgroundColor,r=e.color,s=document.createElement("canvas");s.width=Ec,s.height=n;var o=s.getContext("2d");o.font="bold "+n+"px roboto",o.textBaseline="top",o.fillStyle=i,o.rect(0,0,s.width,s.height),o.fill(),o.fillStyle=r;for(var a=o.measureText(" ").width,l=new Float32Array(Tc),c=new Float32Array(Tc),u=0,h=0;h<Tc;h++){var f=" "+String.fromCharCode(h),d=o.measureText(f).width;l[h]=d-a,c[h]=u,o.fillText(f,u-a,0),u+=d}var p=xd.createTextureFromCanvas(s);return{texture:p,lengths:l,offsets:c}},t.prototype.processLabelVerts=function(e){var n=0;this.labelVertexMap=[];for(var i=0;i<e;i++){for(var r=this.labelStrings[i],s=[],o=0;o<r.length;o++){for(var a=0;a<St;a++)s.push(n*St+a);n++}this.labelVertexMap.push(s)}this.totalVertexCount=n*St},t.prototype.createColorBuffers=function(e){var n=this;this.pickingColors=new Float32Array(this.totalVertexCount*ct.RGB_NUM_ELEMENTS),this.renderColors=new Float32Array(this.totalVertexCount*ct.RGB_NUM_ELEMENTS);for(var i=function(o){var a=new Cn.Color(o);r.labelVertexMap[o].forEach(function(l){n.pickingColors[ct.RGB_NUM_ELEMENTS*l]=a.r,n.pickingColors[ct.RGB_NUM_ELEMENTS*l+1]=a.g,n.pickingColors[ct.RGB_NUM_ELEMENTS*l+2]=a.b,n.renderColors[ct.RGB_NUM_ELEMENTS*l]=1,n.renderColors[ct.RGB_NUM_ELEMENTS*l+1]=1,n.renderColors[ct.RGB_NUM_ELEMENTS*l+2]=1})},r=this,s=0;s<e;s++)i(s)},t.prototype.createLabels=function(){var e=this,n=this.styles.label3D,i=n.fontSize,r=n.scale;if(!(this.labelStrings==null||this.worldSpacePointPositions==null)){var s=this.worldSpacePointPositions.length/ct.XYZ_NUM_ELEMENTS;if(s===this.labelStrings.length){this.glyphTexture=this.createGlyphTexture(),this.uniforms={glyphTexture:{value:null},picking:{value:!1}},this.material=new Cn.ShaderMaterial({uniforms:this.uniforms,transparent:!0,vertexShader:o_(i,r),fragmentShader:a_}),this.processLabelVerts(s),this.createColorBuffers(s);var o=new Float32Array(this.totalVertexCount*ct.XYZ_NUM_ELEMENTS);this.positions=new Cn.BufferAttribute(o,ct.XYZ_NUM_ELEMENTS);var a=new Float32Array(this.totalVertexCount*ct.XYZ_NUM_ELEMENTS),l=new Float32Array(this.totalVertexCount*ct.UV_NUM_ELEMENTS),c=new Float32Array(this.totalVertexCount*ct.RGB_NUM_ELEMENTS),u=new Cn.BufferAttribute(a,2),h=new Cn.BufferAttribute(l,ct.UV_NUM_ELEMENTS),f=new Cn.BufferAttribute(c,ct.RGB_NUM_ELEMENTS);this.geometry=new Cn.BufferGeometry,this.geometry.setAttribute("posObj",u),this.geometry.setAttribute("position",this.positions),this.geometry.setAttribute("uv",h),this.geometry.setAttribute("color",f);for(var d=0,p=0;p<s;p++){for(var v=this.labelStrings[p],y=0,g=0;g<v.length;g++){var m=v.charCodeAt(g);y+=this.glyphTexture.lengths[m]}y/=-2;for(var g=0;g<v.length;g++){var m=v.charCodeAt(g),_=this.glyphTexture.lengths[m],b=i,w=(y+_)/b,x=y/b,T=i/b;u.setXY(d*St+0,x,0),u.setXY(d*St+1,w,0),u.setXY(d*St+2,x,T),u.setXY(d*St+3,x,T),u.setXY(d*St+4,w,0),u.setXY(d*St+5,w,T);var I=this.glyphTexture.offsets[m],L=this.glyphTexture.offsets[m]+_;I/=Ec,L/=Ec;var P=1,O=0;h.setXY(d*St+0,I,P),h.setXY(d*St+1,L,P),h.setXY(d*St+2,I,O),h.setXY(d*St+3,I,O),h.setXY(d*St+4,L,P),h.setXY(d*St+5,L,O),d++,y+=_}}for(var B=function(D){var F=xd.vector3FromPackedArray(N.worldSpacePointPositions,D);N.labelVertexMap[D].forEach(function(U){e.positions.setXYZ(U,F.x,F.y,F.z)})},N=this,p=0;p<s;p++)B(p);this.labelsMesh=new Cn.Mesh(this.geometry,this.material),this.labelsMesh.frustumCulled=!1,this.scene.add(this.labelsMesh)}}},t.prototype.colorLabels=function(e){if(!(this.labelStrings==null||this.geometry==null||e==null)){var n=this.geometry.getAttribute("color");n.array=this.renderColors;for(var i=e.length/ct.RGBA_NUM_ELEMENTS,r=0,s=0;s<i;++s){for(var o=new Cn.Color(e[r],e[r+1],e[r+2]),a=this.labelVertexMap[s].length,l=0;l<a;++l)n.setXYZ(this.labelVertexMap[s][l],o.r,o.g,o.b);r+=ct.RGBA_NUM_ELEMENTS}n.needsUpdate=!0}},t.prototype.setScene=function(e){this.scene=e},t.prototype.dispose=function(){this.labelsMesh&&(this.scene&&this.scene.remove(this.labelsMesh),this.labelsMesh=null),this.geometry&&(this.geometry.dispose(),this.geometry=null),this.glyphTexture!=null&&this.glyphTexture.texture!=null&&(this.glyphTexture.texture.dispose(),this.glyphTexture.texture=null)},t.prototype.onPickingRender=function(e){if(this.geometry==null){this.createLabels();return}this.material.uniforms.glyphTexture.value=this.glyphTexture.texture,this.material.uniforms.picking.value=!0;var n=this.geometry.getAttribute("color");n.array=this.pickingColors,n.needsUpdate=!0},t.prototype.onRender=function(e){if(this.geometry==null){this.createLabels();return}this.colorLabels(e.pointColors),this.material.uniforms.glyphTexture.value=this.glyphTexture.texture,this.material.uniforms.picking.value=!1;var n=this.geometry.getAttribute("color");n.array=this.renderColors,n.needsUpdate=!0},t.prototype.onPointPositionsChanged=function(e){this.worldSpacePointPositions=e,this.dispose()},t.prototype.setLabelStrings=function(e){this.labelStrings=e,this.dispose()},t.prototype.onResize=function(e,n){},t}();Sc.ScatterPlotVisualizer3DLabels=l_;var Ac={};Object.defineProperty(Ac,"__esModule",{value:!0});var yt=Ii,c_=Ls,_d=it,kt=nn,bd=function(t){return`
    // Index of the specific vertex (passed in as bufferAttribute), and the
    // variable that will be used to pass it to the fragment shader.
    attribute float spriteIndex;
    attribute vec4 color;
    attribute float scaleFactor;

    varying vec2 xyIndex;
    varying vec4 vColor;

    uniform bool sizeAttenuation;
    uniform float pointSize;
    uniform float spritesPerRow;
    uniform float spritesPerColumn;

    varying float fogDepth;

    void main() {
      // Pass index and color values to fragment shader.
      vColor = color;
      xyIndex = vec2(mod(spriteIndex, spritesPerRow),
                floor(spriteIndex / spritesPerColumn));

      // Transform current vertex by modelViewMatrix (model world position and
      // camera world position matrix).
      vec4 cameraSpacePos = modelViewMatrix * vec4(position, 1.0);

      // Project vertex in camera-space to screen coordinates using the camera's
      // projection matrix.
      gl_Position = projectionMatrix * cameraSpacePos;

      // Create size attenuation (if we're in 3D mode) by making the size of
      // each point inversly proportional to its distance to the camera.
      float outputPointSize = pointSize;
      if (sizeAttenuation) {
        outputPointSize = -pointSize / cameraSpacePos.z;
        fogDepth = pointSize / outputPointSize * 1.2;
      } else {  // Create size attenuation (if we're in 2D mode)
        const float PI = 3.1415926535897932384626433832795;
        const float minScale = 0.1;  // minimum scaling factor
        const float outSpeed = 2.0;  // shrink speed when zooming out
        const float outNorm = (1. - minScale) / atan(outSpeed);
        const float maxScale = 15.0;  // maximum scaling factor
        const float inSpeed = 0.02;  // enlarge speed when zooming in
        const float zoomOffset = 0.3;  // offset zoom pivot
        float zoom = projectionMatrix[0][0] + zoomOffset;  // zoom pivot
        float scale = zoom < 1. ? 1. + outNorm * atan(outSpeed * (zoom - 1.)) :
                      1. + 2. / PI * (maxScale - 1.) * atan(inSpeed * (zoom - 1.));
        outputPointSize = pointSize * scale;
      }

      gl_PointSize =
        max(outputPointSize * scaleFactor, `+t.toFixed(1)+`);
    }`},wd=`
    bool point_in_unit_circle(vec2 spriteCoord) {
      vec2 centerToP = spriteCoord - vec2(0.5, 0.5);
      return dot(centerToP, centerToP) < (0.5 * 0.5);
    }

    bool point_in_unit_equilateral_triangle(vec2 spriteCoord) {
      vec3 v0 = vec3(0, 1, 0);
      vec3 v1 = vec3(0.5, 0, 0);
      vec3 v2 = vec3(1, 1, 0);
      vec3 p = vec3(spriteCoord, 0);
      float p_in_v0_v1 = cross(v1 - v0, p - v0).z;
      float p_in_v1_v2 = cross(v2 - v1, p - v1).z;
      return (p_in_v0_v1 > 0.0) && (p_in_v1_v2 > 0.0);
    }

    bool point_in_unit_square(vec2 spriteCoord) {
      return true;
    }
  `,h_=`
    varying vec2 xyIndex;
    varying vec4 vColor;

    uniform sampler2D spriteTexture;
    uniform float spritesPerRow;
    uniform float spritesPerColumn;
    uniform bool isImage;

    `+yt.ShaderChunk.common+`
    `+wd+`
    uniform vec3 fogColor;
    varying float fogDepth;
		uniform float fogNear;
    uniform float fogFar;

    void main() {
      if (isImage) {
        // Coordinates of the vertex within the entire sprite image.
        vec2 coords =
          (gl_PointCoord + xyIndex) / vec2(spritesPerRow, spritesPerColumn);
        gl_FragColor = vColor * texture(spriteTexture, coords);
      } else {
        bool inside = point_in_unit_circle(gl_PointCoord);
        if (!inside) {
          discard;
        }
        gl_FragColor = vColor;
      }
      float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
      gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
    }`,u_=`
    varying vec2 xyIndex;
    varying vec4 vColor;
    uniform bool isImage;

    `+wd+`

    varying float fogDepth;

    void main() {
      xyIndex; // Silence 'unused variable' warning.
      fogDepth; // Silence 'unused variable' warning.
      if (isImage) {
        gl_FragColor = vColor;
      } else {
        bool inside = point_in_unit_circle(gl_PointCoord);
        if (!inside) {
          discard;
        }
        gl_FragColor = vColor;
      }
    }`,f_=function(){function t(e,n){this.styles=e,this.id="SPRITES",this.isSpriteSheetMode=!1,this.spritesPerRow=0,this.spritesPerColumn=0,this.spriteDimensions=[0,0],this.worldSpacePointPositions=new Float32Array(0),this.pickingColors=new Float32Array(0),this.renderColors=new Float32Array(0),this.standinTextureForPoints=_d.createTextureFromCanvas(document.createElement("canvas")),n&&(this.spriteSheetParams=n,this.setSpriteSheet(n),this.isSpriteSheetMode=!0),this.renderMaterial=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial()}return t.prototype.createUniforms=function(){return{spriteTexture:{type:"t"},spritesPerRow:{type:"f"},spritesPerColumn:{type:"f"},fogColor:{type:"c"},fogNear:{type:"f"},fogFar:{type:"f"},isImage:{type:"bool"},sizeAttenuation:{type:"bool"},pointSize:{type:"f"}}},t.prototype.createRenderMaterial=function(){this.isSpriteSheetMode;var e=this.createUniforms();return new yt.ShaderMaterial({uniforms:e,vertexShader:bd(this.styles.sprites.minPointSize),fragmentShader:h_,transparent:!0,depthFunc:yt.LessDepth,fog:this.styles.fog.enabled,blending:yt.NormalBlending})},t.prototype.createPickingMaterial=function(){var e=this.createUniforms();return new yt.ShaderMaterial({uniforms:e,vertexShader:bd(this.styles.sprites.minPointSize),fragmentShader:u_,transparent:!0,depthTest:!0,depthWrite:!0,fog:!1,blending:yt.NormalBlending})},t.prototype.createPointSprites=function(e,n){var i=n!=null?n.length/kt.XYZ_NUM_ELEMENTS:0,r=this.createGeometry(i);this.fog=new yt.Fog(16777215),this.points=new yt.Points(r,this.renderMaterial),this.points.frustumCulled=!1,this.spriteIndexBufferAttribute!=null&&this.points.geometry.setAttribute("spriteIndex",this.spriteIndexBufferAttribute),e.add(this.points)},t.prototype.calculatePointSize=function(e){var n=this.styles.sprites.imageSize;if(this.texture)return e?n:this.spriteDimensions[0];var i=this.worldSpacePointPositions!=null?this.worldSpacePointPositions.length/kt.XYZ_NUM_ELEMENTS:1,r=200,s=8,o=1.5,a=r/Math.log(i)/Math.log(s);return e?a:a/o},t.prototype.createGeometry=function(e){var n=e;this.pickingColors=new Float32Array(n*kt.RGBA_NUM_ELEMENTS);for(var i=0,r=0;r<n;r++){var s=new yt.Color(r);this.pickingColors[i++]=s.r,this.pickingColors[i++]=s.g,this.pickingColors[i++]=s.b,this.pickingColors[i++]=1}var o=new yt.BufferGeometry;return o.setAttribute("position",new yt.BufferAttribute(new Float32Array([]),kt.XYZ_NUM_ELEMENTS)),o.setAttribute("color",new yt.BufferAttribute(new Float32Array([]),kt.RGBA_NUM_ELEMENTS)),o.setAttribute("scaleFactor",new yt.BufferAttribute(new Float32Array([]),kt.INDEX_NUM_ELEMENTS)),o.computeVertexNormals(),o},t.prototype.setFogDistances=function(e,n,i){var r=this.styles.fog,s=r.threshold,o=r.enabled;if(e&&o){this.fog.near=n;var a=n-i;this.fog.far=n-s*a}else this.fog.near=1/0,this.fog.far=1/0},t.prototype.dispose=function(){this.disposeGeometry(),this.disposeSpriteSheet()},t.prototype.disposeGeometry=function(){this.points!=null&&(this.scene.remove(this.points),this.points.geometry.dispose(),this.points=null,this.worldSpacePointPositions=null)},t.prototype.disposeSpriteSheet=function(){this.texture&&this.texture.dispose(),this.texture=null,this.renderMaterial=null,this.pickingMaterial=null,this.spriteSheetImage=null},t.prototype.setScene=function(e){this.scene=e},t.prototype.setSpriteSheet=function(e){var n=this,i=e.spriteDimensions,r=e.onImageLoad,s=e.spritesheetImage;if(typeof s=="string"){var o=s;s=new Image,s.src=o}this.spriteSheetImage=s,this.texture=_d.createTextureFromImage(this.spriteSheetImage,function(){n.spritesPerRow=n.spriteSheetImage.width/i[0],n.spritesPerColumn=n.spriteSheetImage.height/i[1],r()}),this.spriteDimensions=i,this.setSpriteIndexBuffer()},t.prototype.setSpriteIndexBuffer=function(){var e=this.spriteSheetParams.spriteIndices;this.spriteIndexBufferAttribute=new yt.BufferAttribute(e,kt.INDEX_NUM_ELEMENTS),this.points!=null&&this.points.geometry.setAttribute("spriteIndex",this.spriteIndexBufferAttribute)},t.prototype.onPointPositionsChanged=function(e){this.points!=null&&this.worldSpacePointPositions.length!==e.length&&this.disposeGeometry(),this.worldSpacePointPositions=e,this.points==null&&this.createPointSprites(this.scene,e),this.spriteSheetParams&&this.setSpriteIndexBuffer(),this.renderMaterial=this.createRenderMaterial(),this.pickingMaterial=this.createPickingMaterial();var n=this.points.geometry.getAttribute("position");n.array=e,n.count=e.length/kt.XYZ_NUM_ELEMENTS,n.needsUpdate=!0},t.prototype.onPickingRender=function(e){var n=e.cameraType===c_.CameraType.Perspective;this.pickingMaterial.uniforms.spritesPerRow.value=this.spritesPerRow,this.pickingMaterial.uniforms.spritesPerRow.value=this.spritesPerColumn,this.pickingMaterial.uniforms.sizeAttenuation.value=n,this.pickingMaterial.uniforms.pointSize.value=this.calculatePointSize(n),this.points.material=this.pickingMaterial;var i=this.points.geometry.getAttribute("color");i.array=this.pickingColors,i.count=this.pickingColors.length/kt.RGBA_NUM_ELEMENTS,i.needsUpdate=!0;var r=this.points.geometry.getAttribute("scaleFactor");r.array=e.pointScaleFactors,r.count=e.pointScaleFactors.length,r.count=e.pointScaleFactors.length/kt.INDEX_NUM_ELEMENTS,r.needsUpdate=!0},t.prototype.onRender=function(e){var n=e.camera instanceof yt.PerspectiveCamera;this.setFogDistances(n,e.nearestCameraSpacePointZ,e.farthestCameraSpacePointZ),this.scene.fog=this.fog,this.scene.fog.color=new yt.Color(e.backgroundColor),this.renderMaterial.uniforms.fogColor.value=this.scene.fog.color,this.renderMaterial.uniforms.fogNear.value=this.fog.near,this.renderMaterial.uniforms.fogFar.value=this.fog.far,this.renderMaterial.uniforms.spritesPerRow.value=this.spritesPerRow,this.renderMaterial.uniforms.spritesPerColumn.value=this.spritesPerColumn,this.renderMaterial.uniforms.isImage.value=this.texture!=null,this.renderMaterial.uniforms.spriteTexture.value=this.texture!=null?this.texture:this.standinTextureForPoints,this.renderMaterial.uniforms.sizeAttenuation.value=n,this.renderMaterial.uniforms.pointSize.value=this.calculatePointSize(n),this.points.material=this.renderMaterial;var i=this.points.geometry.getAttribute("color");this.renderColors=e.pointColors,i.array=this.renderColors,i.count=this.renderColors.length/kt.RGBA_NUM_ELEMENTS,i.needsUpdate=!0;var r=this.points.geometry.getAttribute("scaleFactor");r.array=e.pointScaleFactors,r.count=e.pointScaleFactors.length/kt.INDEX_NUM_ELEMENTS,r.needsUpdate=!0},t.prototype.onResize=function(e,n){},t}();Ac.ScatterPlotVisualizerSprites=f_;var Cc={},Lc={};Object.defineProperty(Lc,"__esModule",{value:!0});var d_=function(){function t(e,n,i){this.bound=e,this.cellWidth=n,this.cellHeight=i,this.numHorizCells=Math.ceil(this.boundWidth(e)/n),this.numVertCells=Math.ceil(this.boundHeight(e)/i),this.grid=new Array(this.numHorizCells*this.numVertCells)}return t.prototype.boundWidth=function(e){return e.hiX-e.loX},t.prototype.boundHeight=function(e){return e.hiY-e.loY},t.prototype.boundsIntersect=function(e,n){return!(e.loX>n.hiX||e.loY>n.hiY||e.hiX<n.loX||e.hiY<n.loY)},t.prototype.insert=function(e,n){if(n===void 0&&(n=!1),e.hiX<this.bound.loX||e.loX>this.bound.hiX||e.hiY<this.bound.loY||e.loY>this.bound.hiY)return!1;for(var i=this.getCellX(e.loX),r=this.getCellX(e.hiX),s=this.getCellY(e.loY),o=this.getCellY(e.hiY),a=s*this.numHorizCells+i,l=a,c=s;c<=o;c++){for(var u=i;u<=r;u++){var h=this.grid[l++];if(h){for(var f=0;f<h.length;f++)if(this.boundsIntersect(e,h[f]))return!1}}l+=this.numHorizCells-(r-i+1)}if(n)return!0;l=a;for(var c=s;c<=o;c++){for(var u=i;u<=r;u++)this.grid[l]?this.grid[l].push(e):this.grid[l]=[e],l++;l+=this.numHorizCells-(r-i+1)}return!0},t.prototype.getCellX=function(e){return Math.floor((e-this.bound.loX)/this.cellWidth)},t.prototype.getCellY=function(e){return Math.floor((e-this.bound.loY)/this.cellHeight)},t}();Lc.CollisionGrid=d_;var p_=Ke&&Ke.__read||function(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var i=n.call(t),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s};Object.defineProperty(Cc,"__esModule",{value:!0});var m_=Ii,g_=Ls,y_=Lc,Pc=it,v_=1e4,x_=function(){function t(e,n){this.styles=n,this.id="CANVAS_LABELS",this.worldSpacePointPositions=new Float32Array(0),this.labelsActive=!0,this.canvas=document.createElement("canvas"),e.appendChild(this.canvas),this.gc=this.canvas.getContext("2d"),this.canvas.style.position="absolute",this.canvas.style.left="0",this.canvas.style.top="0",this.canvas.style.pointerEvents="none"}return t.prototype.removeAllLabels=function(){var e=this.canvas.width*window.devicePixelRatio,n=this.canvas.height*window.devicePixelRatio;this.gc.clearRect(0,0,e,n)},t.prototype.makeLabels=function(e){if(!(e.labels==null||e.labels.pointIndices.length===0)&&this.worldSpacePointPositions!=null){var n=e.labels,i=e.cameraType===g_.CameraType.Perspective,r=parseInt(this.gc.font,10),s=window.devicePixelRatio,o;{var a=this.canvas.width*s,l=this.canvas.height*s,c={loX:0,hiX:a,loY:0,hiY:l};o=new y_.CollisionGrid(c,a/25,l/50)}var u=[e.farthestCameraSpacePointZ,e.nearestCameraSpacePointZ],h=function(B){return Pc.scaleExponential(B,u,[.1,1])},f=e.camera.position,d=f.clone().sub(e.cameraTarget),p=new m_.Vector3;this.gc.textBaseline="middle",this.gc.miterLimit=2;for(var v=2,y=4,g=Math.min(v_,n.pointIndices.length),m=0;m<g;++m){var _=void 0;{var b=n.pointIndices[m];_=Pc.vector3FromPackedArray(this.worldSpacePointPositions,b)}if(p.copy(f).sub(_),!(d.dot(p)<0)){var w=p_(Pc.vector3DToScreenCoords(e.camera,e.screenWidth,e.screenHeight,_),2),x=w[0],T=w[1];x+=y;var I={loX:x-v,hiX:x+1+v,loY:T-r/2-v,hiY:T+r/2+v};if(o.insert(I,!0)){var L=n.labelStrings[m],P=n.defaultFontSize*n.scaleFactors[m]*s;if(this.gc.font=P+"px roboto",I.hiX+=this.gc.measureText(L).width-1,o.insert(I)){var O=1;i&&n.useSceneOpacityFlags[m]===1&&(O=h(p.length())),this.gc.fillStyle=this.styleStringFromPackedRgba(n.fillColors,m,O),this.gc.strokeStyle=this.styleStringFromPackedRgba(n.strokeColors,m,O),this.gc.lineWidth=this.styles.label.strokeWidth,this.gc.strokeText(L,x,T),this.gc.lineWidth=this.styles.label.fillWidth,this.gc.fillText(L,x,T)}}}}}},t.prototype.styleStringFromPackedRgba=function(e,n,i){var r=n*3,s=e[r],o=e[r+1],a=e[r+2];return"rgba("+s+","+o+","+a+","+i+")"},t.prototype.onResize=function(e,n){var i=window.devicePixelRatio;this.canvas.width=e*i,this.canvas.height=n*i,this.canvas.style.width=e+"px",this.canvas.style.height=n+"px"},t.prototype.dispose=function(){this.removeAllLabels()},t.prototype.onPointPositionsChanged=function(e){this.worldSpacePointPositions=e,this.removeAllLabels()},t.prototype.onRender=function(e){this.labelsActive&&(this.removeAllLabels(),this.makeLabels(e))},t.prototype.setScene=function(e){},t.prototype.onPickingRender=function(e){},t}();Cc.ScatterPlotVisualizerCanvasLabels=x_;var Rc={},Md=Ke&&Ke.__values||function(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(Rc,"__esModule",{value:!0});var Ps=Ii,Sd=it,ba=nn,__=function(){function t(){this.id="POLYLINES",this.sequences=[],this.polylines=[],this.polylinePositionBuffer={},this.polylineColorBuffer={},this.pointSequenceIndices=new Map}return t.prototype.getPointSequenceIndex=function(e){return this.pointSequenceIndices.get(e)},t.prototype.updateSequenceIndices=function(){for(var e=0;e<this.sequences.length;e++)for(var n=this.sequences[e],i=0;i<n.indices.length-1;i++){var r=n.indices[i];this.pointSequenceIndices.set(r,e),this.pointSequenceIndices.set(r+1,e)}},t.prototype.createPolylines=function(){var e,n;this.updateSequenceIndices();try{for(var i=Md(this.polylines),r=i.next();!r.done;r=i.next()){var s=r.value;this.scene.remove(s),s.geometry.dispose()}}catch(c){e={error:c}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.polylines=[];for(var o=0;o<this.sequences.length;o++){var a=new Ps.BufferGeometry;a.addAttribute("position",this.polylinePositionBuffer[o]),a.addAttribute("color",this.polylineColorBuffer[o]);var l=new Ps.LineBasicMaterial({linewidth:1,opacity:1,transparent:!0,vertexColors:!0}),s=new Ps.LineSegments(a,l);s.frustumCulled=!1,this.polylines.push(s),this.scene.add(s)}},t.prototype.dispose=function(){var e,n;try{for(var i=Md(this.polylines),r=i.next();!r.done;r=i.next()){var s=r.value;this.scene.remove(s),s.geometry.dispose()}}catch(o){e={error:o}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}this.polylines=[],this.polylinePositionBuffer={},this.polylineColorBuffer={}},t.prototype.setScene=function(e){this.scene=e},t.prototype.setSequences=function(e){this.sequences=e},t.prototype.onPointPositionsChanged=function(e){if(e==null&&this.dispose(),!(e==null||this.sequences.length===0)){for(var n=0;n<this.sequences.length;n++){var i=this.sequences[n],r=2*(i.indices.length-1),s=new Float32Array(r*ba.XYZ_NUM_ELEMENTS);this.polylinePositionBuffer[n]=new Ps.BufferAttribute(s,ba.XYZ_NUM_ELEMENTS);var o=new Float32Array(r*ba.RGBA_NUM_ELEMENTS);this.polylineColorBuffer[n]=new Ps.BufferAttribute(o,ba.RGBA_NUM_ELEMENTS)}for(var n=0;n<this.sequences.length;n++){for(var i=this.sequences[n],a=0,l=0;l<i.indices.length-1;l++){var c=i.indices[l],u=i.indices[l+1],h=Sd.vector3FromPackedArray(e,c),f=Sd.vector3FromPackedArray(e,u);this.polylinePositionBuffer[n].setXYZ(a,h.x,h.y,h.z),this.polylinePositionBuffer[n].setXYZ(a+1,f.x,f.y,f.z),a+=2}this.polylinePositionBuffer[n].needsUpdate=!0}this.createPolylines()}},t.prototype.onRender=function(e){for(var n=0;n<this.polylines.length;n++){var i=this.polylines[n].material;i.opacity=e.polylineOpacities[n],i.linewidth=e.polylineWidths[n],this.polylineColorBuffer[n].array=e.polylineColors[n],this.polylineColorBuffer[n].needsUpdate=!0}},t.prototype.onPickingRender=function(e){},t.prototype.onResize=function(e,n){},t}();Rc.ScatterPlotVisualizerPolylines=__;var b_=Ke&&Ke.__read||function(t,e){var n=typeof Symbol=="function"&&t[Symbol.iterator];if(!n)return t;var i=n.call(t),r,s=[],o;try{for(;(e===void 0||e-- >0)&&!(r=i.next()).done;)s.push(r.value)}catch(a){o={error:a}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return s},Ic=Ke&&Ke.__spread||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(b_(arguments[e]));return t},Ed=Ke&&Ke.__values||function(t){var e=typeof Symbol=="function"&&Symbol.iterator,n=e&&t[e],i=0;if(n)return n.call(t);if(t&&typeof t.length=="number")return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")};Object.defineProperty(Ea,"__esModule",{value:!0});var w_=Ta,Di=bc,M_=_a,S_=Ls,E_=Mc,vt=it,wa=nn,T_=Sc,Td=Ac,A_=Cc,C_=Rc,L_=function(){function t(e,n){var i=this;n===void 0&&(n={}),this.pointColorer=null,this.sequences=[],this.renderMode="POINT",this.rotateOnStart=!0,this.selectEnabled=!0,this.showLabelsOnHover=!0,this.hoverPointIndex=null,this.selectedPointIndices=new Set,this.clickCallback=function(){},this.hoverCallback=function(){},this.selectCallback=function(){},this.cameraMoveCallback=function(){},this.onHover=function(r){i.hoverCallback(r),i.hoverPointIndex=r,i.updateScatterPlotAttributes(),i.renderScatterPlot()},this.onClick=function(r){i.clickCallback(r)},this.select=function(r){i.selectEnabled&&(i.selectedPointIndices=new Set(r),i.updateScatterPlotAttributes(),i.renderScatterPlot())},this.onSelect=function(r){i.selectEnabled&&(i.selectCallback(r),i.select(r))},this.containerElement=e,this.styles=E_.makeStyles(n.styles),this.setParameters(n),this.scatterPlot=new w_.ScatterPlot(e,{camera:n.camera,onClick:this.onClick,onHover:this.onHover,onSelect:this.onSelect,selectEnabled:this.selectEnabled,styles:this.styles,orbitControlParams:n.orbitControls}),this.scatterPlot.onCameraMove(this.cameraMoveCallback)}return t.prototype.setParameters=function(e){e.onClick!==void 0&&(this.clickCallback=e.onClick),e.onHover!==void 0&&(this.hoverCallback=e.onHover),e.onSelect!==void 0&&(this.selectCallback=e.onSelect),e.onCameraMove!==void 0&&(this.cameraMoveCallback=e.onCameraMove),e.pointColorer!==void 0&&(this.pointColorer=e.pointColorer),e.renderMode!==void 0&&(this.renderMode=e.renderMode),e.rotateOnStart!==void 0&&(this.rotateOnStart=e.rotateOnStart),e.selectEnabled!==void 0&&(this.selectEnabled=e.selectEnabled),e.showLabelsOnHover!==void 0&&(this.showLabelsOnHover=e.showLabelsOnHover)},t.prototype.render=function(e){this.updateDataset(e),this.clearVisualizers(),this.setVisualizers(),this.rotateOnStart&&this.scatterPlot.startOrbitAnimation()},t.prototype.clearVisualizers=function(){this.canvasLabelsVisualizer=void 0,this.labels3DVisualizer=void 0,this.pointVisualizer=void 0,this.polylineVisualizer=void 0,this.spritesheetVisualizer=void 0,this.scatterPlot.disposeAllVisualizers()},t.prototype.renderScatterPlot=function(){this.dataset&&this.scatterPlot.render()},t.prototype.resetZoom=function(){this.scatterPlot.resetZoom()},t.prototype.setRenderMode=function(e){this.renderMode=e,this.setVisualizers(),this.updateScatterPlotAttributes(),this.updateScatterPlotPositions()},t.prototype.setTextRenderMode=function(){this.setRenderMode("TEXT"),this.renderScatterPlot()},t.prototype.setPointRenderMode=function(){this.setRenderMode("POINT"),this.renderScatterPlot()},t.prototype.setSpriteRenderMode=function(){this.dataset&&this.dataset.spriteMetadata&&(this.setRenderMode("SPRITE"),this.renderScatterPlot())},t.prototype.setSequences=function(e){this.sequences=e,this.updatePolylineAttributes(),this.setVisualizers(),this.renderScatterPlot()},t.prototype.setPanMode=function(){this.scatterPlot.setInteractionMode("PAN")},t.prototype.setSelectMode=function(){this.scatterPlot.setInteractionMode("SELECT")},t.prototype.setDimensions=function(e){var n=e<2||e>3,i=this.dataset&&e>this.dataset.dimensions;if(n||i)throw new RangeError("Setting invalid dimensionality");this.scatterPlot.setDimensions(e),this.renderScatterPlot()},t.prototype.setPointColorer=function(e){this.pointColorer=e,this.updateScatterPlotAttributes(),this.renderScatterPlot()},t.prototype.callPointColorer=function(e,n){return e(n,this.selectedPointIndices,this.hoverPointIndex)},t.prototype.setHoverPointIndex=function(e){this.hoverPointIndex=e,this.updateScatterPlotAttributes(),!this.scatterPlot.orbitIsAnimating()&&this.renderScatterPlot()},t.prototype.resize=function(){this.scatterPlot.resize()},t.prototype.updateDataset=function(e){this.setDataset(e),this.scatterPlot.setDimensions(e.dimensions),this.updateScatterPlotAttributes(),this.updateScatterPlotPositions(),this.renderScatterPlot()},t.prototype.isOrbiting=function(){return this.scatterPlot.orbitIsAnimating()},t.prototype.startOrbitAnimation=function(){this.scatterPlot.startOrbitAnimation()},t.prototype.stopOrbitAnimation=function(){this.scatterPlot.stopOrbitAnimation()},t.prototype.setDataset=function(e){this.dataset=e,this.labels3DVisualizer&&this.labels3DVisualizer.setLabelStrings(this.generate3DLabelsArray())},t.prototype.updateScatterPlotPositions=function(){var e=this.dataset;if(e){var n=this.generatePointPositionArray(e);this.scatterPlot.setPointPositions(n)}},t.prototype.updateScatterPlotAttributes=function(){var e=this.dataset;if(e){var n=this.generatePointColorArray(e),i=this.generatePointScaleFactorArray(e),r=this.generateVisibleLabelRenderParams();this.scatterPlot.setPointColors(n),this.scatterPlot.setPointScaleFactors(i),this.scatterPlot.setLabels(r)}},t.prototype.updatePolylineAttributes=function(){var e=this.dataset;if(e){var n=this.generateLineSegmentColorMap(e),i=this.generateLineSegmentOpacityArray(e),r=this.generateLineSegmentWidthArray(e);this.scatterPlot.setPolylineColors(n),this.scatterPlot.setPolylineOpacities(i),this.scatterPlot.setPolylineWidths(r)}},t.prototype.generatePointPositionArray=function(e){var n=[0,0],i=[0,0],r=[0,0];n=vt.extent(e.points.map(function(g){return g[0]})),i=vt.extent(e.points.map(function(g){return g[1]})),e.dimensions===3&&(r=vt.extent(e.points.map(function(g){return g[2]})));var s=function(g){return Math.abs(g[1]-g[0])},o=s(n),a=s(i),l=s(r),c=Math.max(o,a,l),u=wa.SCATTER_PLOT_CUBE_LENGTH/2,h=function(g,m){return[-m*(g/c),m*(g/c)]},f=h(o,u),d=h(a,u),p=h(l,u),v=new Float32Array(e.points.length*3),y=0;return e.points.forEach(function(g,m){var _=e.points[m];v[y++]=vt.scaleLinear(_[0],n,f),v[y++]=vt.scaleLinear(_[1],i,d),e.dimensions===3?v[y++]=vt.scaleLinear(_[2],r,p):v[y++]=0}),v},t.prototype.generateVisibleLabelRenderParams=function(){var e=this,n=e.hoverPointIndex,i=e.selectedPointIndices,r=e.styles,s=n!==null?1:0,o=new Uint32Array(s),a=new Float32Array(s),l=new Int8Array(s),c=new Uint8Array(s*3),u=new Uint8Array(s*3),h=[];a.fill(r.label.scaleDefault),l.fill(1);var f=0;if(n!==null){h.push(this.getLabelText(n)),o[f]=n,a[f]=r.label.scaleLarge,l[f]=0;var d=vt.styleRgbFromHexColor(r.label.fillColorHover);vt.packRgbIntoUint8Array(c,f,d[0],d[1],d[2]);var p=vt.styleRgbFromHexColor(r.label.strokeColorHover);vt.packRgbIntoUint8Array(u,f,p[0],p[1],p[1]),++f}{var d=vt.styleRgbFromHexColor(r.label.fillColorSelected),p=vt.styleRgbFromHexColor(r.label.strokeColorSelected);if(i.size===1){var v=Ic(i)[0];h.push(this.getLabelText(v)),o[f]=v,a[f]=r.label.scaleLarge,l[f]=0,vt.packRgbIntoUint8Array(c,f,d[0],d[1],d[2]),vt.packRgbIntoUint8Array(u,f,p[0],p[1],p[2])}}return new S_.LabelRenderParams(new Float32Array(o),h,a,l,r.label.fontSize,c,u)},t.prototype.generatePointScaleFactorArray=function(e){var n,i,r=this,s=r.hoverPointIndex,o=r.selectedPointIndices,a=r.styles,l=a.point,c=l.scaleDefault,u=l.scaleSelected,h=l.scaleHover,f=new Float32Array(e.points.length);f.fill(c),o.size;try{for(var d=Ed(o.values()),p=d.next();!p.done;p=d.next()){var v=p.value;f[v]=u}}catch(y){n={error:y}}finally{try{p&&!p.done&&(i=d.return)&&i.call(d)}finally{if(n)throw n.error}}return s!=null&&(f[s]=h),f},t.prototype.generatePointColorArray=function(e){var n,i,r=this,s=r.hoverPointIndex,o=r.pointColorer,a=r.selectedPointIndices,l=r.styles,c=l.point,u=c.colorHover,h=c.colorNoSelection,f=c.colorSelected,d=c.colorUnselected,p=new Float32Array(e.points.length*wa.RGBA_NUM_ELEMENTS),v=d,y=h;this.renderMode==="TEXT"&&(v=this.styles.label3D.colorUnselected,y=this.styles.label3D.colorNoSelection),this.renderMode==="SPRITE"&&(v=this.styles.sprites.colorUnselected,y=this.styles.sprites.colorNoSelection);var g=e.points.length,m=this.selectedPointIndices.size;if(o)for(var _=0,b=0;b<g;++b){var w=Di.parseColor(this.callPointColorer(o,b)||y);p[_++]=w.r,p[_++]=w.g,p[_++]=w.b,p[_++]=w.opacity}else{for(var _=0,w=m>0?Di.parseColor(v):Di.parseColor(y),b=0;b<g;++b)p[_++]=w.r,p[_++]=w.g,p[_++]=w.b,p[_++]=w.opacity;w=Di.parseColor(f);try{for(var x=Ed(a.values()),T=x.next();!T.done;T=x.next()){var I=T.value,L=I*wa.RGBA_NUM_ELEMENTS;p[L++]=w.r,p[L++]=w.g,p[L++]=w.b,p[L++]=w.opacity}}catch(D){n={error:D}}finally{try{T&&!T.done&&(i=x.return)&&i.call(x)}finally{if(n)throw n.error}}if(s!=null){var P=Di.parseColor(u),O=s*wa.RGBA_NUM_ELEMENTS;p[O++]=P.r,p[O++]=P.g,p[O++]=P.b,p[O++]=P.opacity}}return p},t.prototype.generate3DLabelsArray=function(){var e=this.dataset;if(!e)return[];for(var n=[],i=e.points.length,r=0;r<i;++r)n.push(this.getLabelText(r));return n},t.prototype.generateLineSegmentColorMap=function(e){for(var n=this,i=n.pointColorer,r=n.styles,s={},o=0;o<this.sequences.length;o++){var a=this.sequences[o],l=new Float32Array(2*(a.indices.length-1)*3),c=0;if(i)for(var u=0;u<a.indices.length-1;u++){var h=Di.parseColor(this.callPointColorer(i,a.indices[u])),f=Di.parseColor(this.callPointColorer(i,a.indices[u+1]));l[c++]=h.r,l[c++]=h.g,l[c++]=h.b,l[c++]=f.r,l[c++]=f.g,l[c++]=f.b}else for(var u=0;u<a.indices.length-1;u++){var h=vt.getDefaultPointInPolylineColor(u,a.indices.length,r.polyline.startHue,r.polyline.endHue,r.polyline.saturation,r.polyline.lightness),f=vt.getDefaultPointInPolylineColor(u+1,a.indices.length,r.polyline.startHue,r.polyline.endHue,r.polyline.saturation,r.polyline.lightness);l[c++]=h.r,l[c++]=h.g,l[c++]=h.b,l[c++]=f.r,l[c++]=f.g,l[c++]=f.b}s[o]=l}return s},t.prototype.generateLineSegmentOpacityArray=function(e){var n=this,i=n.selectedPointIndices,r=n.styles,s=new Float32Array(this.sequences.length),o=i.size;if(o>0){s.fill(r.polyline.deselectedOpacity);var a=this.polylineVisualizer.getPointSequenceIndex(Ic(i)[0]);a!==void 0&&(s[a]=r.polyline.selectedOpacity)}else s.fill(r.polyline.defaultOpacity);return s},t.prototype.generateLineSegmentWidthArray=function(e){var n=this,i=n.selectedPointIndices,r=n.styles,s=new Float32Array(this.sequences.length);s.fill(r.polyline.defaultLineWidth);var o=i.size;if(o>0){var a=this.polylineVisualizer.getPointSequenceIndex(Ic(i)[0]);a!==void 0&&(s[a]=r.polyline.selectedLineWidth)}return s},t.prototype.getLabelText=function(e){var n=this.dataset;if(!n)return"";var i=n.metadata[e];return i&&i.label!=null?""+i.label:""},t.prototype.initializeCanvasLabelsVisualizer=function(){return this.canvasLabelsVisualizer||(this.canvasLabelsVisualizer=new A_.ScatterPlotVisualizerCanvasLabels(this.containerElement,this.styles)),this.canvasLabelsVisualizer},t.prototype.initialize3DLabelsVisualizer=function(){return this.labels3DVisualizer||(this.labels3DVisualizer=new T_.ScatterPlotVisualizer3DLabels(this.styles)),this.labels3DVisualizer.setLabelStrings(this.generate3DLabelsArray()),this.labels3DVisualizer},t.prototype.initializePointVisualizer=function(){return this.pointVisualizer||(this.pointVisualizer=new Td.ScatterPlotVisualizerSprites(this.styles)),this.pointVisualizer},t.prototype.initializeSpritesheetVisualizer=function(){var e=this,n=this.styles,i=this.dataset,r=i.spriteMetadata;if(!this.spritesheetVisualizer&&r){if(!r.spriteImage||!r.singleSpriteSize)return;var s=i.points.length,o=void 0;if(r.spriteIndices)o=new Float32Array(r.spriteIndices);else{o=new Float32Array(s);for(var a=0;a<s;++a)o[a]=a}var l=function(){return e.renderScatterPlot()},c=new Td.ScatterPlotVisualizerSprites(n,{spritesheetImage:r.spriteImage,spriteDimensions:r.singleSpriteSize,spriteIndices:o,onImageLoad:l});c.id="SPRITE_SHEET_VISUALIZER",this.spritesheetVisualizer=c}return this.spritesheetVisualizer},t.prototype.initializePolylineVisualizer=function(){return this.polylineVisualizer||(this.polylineVisualizer=new C_.ScatterPlotVisualizerPolylines),this.polylineVisualizer.setSequences(this.sequences),this.polylineVisualizer},t.prototype.setVisualizers=function(){var e=this,n=e.dataset,i=e.renderMode,r=[];if(i==="TEXT"){var s=this.initialize3DLabelsVisualizer();r.push(s)}else if(i==="POINT"){var s=this.initializePointVisualizer();r.push(s)}else if(i==="SPRITE"&&n.spriteMetadata){var s=this.initializeSpritesheetVisualizer();s&&r.push(s)}if(this.sequences.length>0){var s=this.initializePolylineVisualizer();r.push(s)}var o=i==="POINT"||i==="SPRITE";if(o&&this.showLabelsOnHover){var s=this.initializeCanvasLabelsVisualizer();r.push(s)}this.scatterPlot.setActiveVisualizers(r)},t.Dataset=M_.Dataset,t}();Ea.ScatterGL=L_,Object.defineProperty(Sa,"__esModule",{value:!0});var P_=Ea,Ad=Sa.ScatterGL=P_.ScatterGL,R_=_a;Sa.Dataset=R_.Dataset;const I_={style:{width:"100%",height:"100%",position:"relative"}},D_={key:0,style:{position:"absolute",top:"0",left:"0"},class:"q-pa-md q-gutter-sm"},O_=W.defineComponent({__name:"ScatterPlot",props:{points:{},userSelectedPoints:{},cameraPosition:{},plotTransformations:{}},emits:["click","select","cameraMove"],setup(t,{emit:e}){const n=t,i=W.ref(),r=W.ref(!1),s=W.ref(!1);let o=[],a,l=[];function c(d){if(!a)return;a.setPointColorer((v,y,g)=>{if(l.indexOf(v)>-1)return"grey";if(s.value){const m=l.length,_=d.length-m;if(m>0&&v>=_)return"red"}return"blue"});const p=new Ad.Dataset(d);a.render(p),a.scatterPlot.render()}W.watch(n.points,function(d,p){c(W.unref(n.points))}),W.watch(n.userSelectedPoints,function(d,p){let v=W.unref(n.userSelectedPoints);v.length>0&&(l=v),a.scatterPlot.render()}),W.watch(n.cameraPosition,function(d,p){let v=W.unref(n.cameraPosition);(v.length!=o.length||!v.every(function(y,g){return y===o[g]}))&&(o=v,a&&a.scatterPlot.setCameraPositionAndTarget(o,[0,0,0]))}),W.onMounted(()=>{if(!i.value)return;l=W.unref(n.userSelectedPoints),s.value=W.unref(n.plotTransformations),a=new Ad(i.value,{rotateOnStart:!1,selectEnabled:!s.value,onClick(p){e("click",p)},onSelect(p){r.value=!0,a==null||a.setSelectMode(),e("select",p)},onCameraMove(p,v){}});let d=a.scatterPlot;d.orbitCameraControls.addEventListener("end",()=>{d.stopOrbitAnimation();const p=d.camera.position.toArray();e("cameraMove",p)}),c(W.unref(n.points))});function u(d){r.value||(r.value=!0,a==null||a.setSelectMode())}function h(d){r.value&&(r.value=!1,a==null||a.setPanMode())}function f(d){a!=null&&a.isOrbiting()?a==null||a.stopOrbitAnimation():a==null||a.startOrbitAnimation()}return(d,p)=>{const v=W.resolveComponent("q-btn"),y=W.resolveComponent("q-separator"),g=W.resolveComponent("q-toolbar");return W.openBlock(),W.createElementBlock("div",I_,[W.createElementVNode("div",{style:{position:"absolute",top:"0",left:"0",width:"100%",height:"100%"},ref_key:"plotContainer",ref:i},null,512),s.value?W.createCommentVNode("",!0):(W.openBlock(),W.createElementBlock("div",D_,[W.createVNode(g,{classes:"bg-purple q-pa-md q-gutter-y-sm shadow-2"},{default:W.withCtx(()=>[W.createVNode(v,{round:"",color:r.value?"white":"grey","text-color":"black",icon:"videocam",onClick:h},null,8,["color"]),W.createVNode(v,{round:"",color:r.value?"grey":"white","text-color":"black",icon:"highlight_alt",onClick:u},null,8,["color"]),W.createVNode(v,{round:"",color:"white","text-color":"black",icon:"360",onClick:f}),W.createVNode(y)]),_:1})]))])}}}),F_=W.defineComponent({__name:"ParamWidget",props:{name:{},modelValue:{},description:{}},emits:["update:modelValue"],setup(t,{emit:e}){const n=t,{name:i,modelValue:r,description:s}=W.toRefs(n);function o(a){if(s.value.type=="float"){if(a=parseFloat(a),Number.isNaN(a))return}else if(s.value.type=="integer"){if(a=parseInt(a),Number.isNaN(a))return}else s.value.type=="string";e("update:modelValue",a)}return(a,l)=>{const c=W.resolveComponent("q-select"),u=W.resolveComponent("q-checkbox"),h=W.resolveComponent("q-input");return W.openBlock(),W.createElementBlock("div",null,[W.unref(s).options?(W.openBlock(),W.createBlock(c,{key:0,filled:"","stack-label":"","map-options":"","model-value":W.unref(r),label:W.unref(s).label,options:W.unref(s).options,"onUpdate:modelValue":o},null,8,["model-value","label","options"])):W.unref(s).type==="boolean"?(W.openBlock(),W.createBlock(u,{key:1,filled:"","model-value":W.unref(r),label:W.unref(s).label,"onUpdate:modelValue":o},null,8,["model-value","label"])):(W.openBlock(),W.createBlock(h,{key:2,filled:"","stack-label":"","model-value":W.unref(r),label:W.unref(s).label,type:W.unref(s).type==="string"?"text":"number","onUpdate:modelValue":o},null,8,["model-value","label","type"]))])}}}),N_={class:"q-gutter-md"},Cd={imageDetection:Fd,scatterPlot:O_,paramsWidget:W.defineComponent({__name:"ParamsWidget",props:{values:{},descriptions:{}},emits:["valuesChanged"],setup(t,{emit:e}){const n=t,{values:i,descriptions:r}=W.toRefs(n);function s(o,a){const l={...i.value,[o]:a};e("valuesChanged",l)}return(o,a)=>(W.openBlock(),W.createElementBlock("div",N_,[(W.openBlock(!0),W.createElementBlock(W.Fragment,null,W.renderList(W.unref(i),(l,c)=>(W.openBlock(),W.createBlock(F_,{name:c,"model-value":l,description:W.unref(r)[c],"onUpdate:modelValue":u=>s(c,u)},null,8,["name","model-value","description","onUpdate:modelValue"]))),256))]))}})};function B_(t){Object.keys(Cd).forEach(e=>{t.component(e,Cd[e])})}ti.install=B_,Object.defineProperty(ti,Symbol.toStringTag,{value:"Module"})});
